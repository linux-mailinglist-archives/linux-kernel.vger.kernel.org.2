Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 69AC236B2EE
	for <lists+linux-kernel@lfdr.de>; Mon, 26 Apr 2021 14:20:44 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233277AbhDZMVR (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 26 Apr 2021 08:21:17 -0400
Received: from Galois.linutronix.de ([193.142.43.55]:33702 "EHLO
        galois.linutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231862AbhDZMVN (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Apr 2021 08:21:13 -0400
Date:   Mon, 26 Apr 2021 09:28:33 -0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020; t=1619439631;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding;
        bh=HjHkjGkPGO3fw+vgvF+05AALsQgOFuIPqR/IpdYn9Qo=;
        b=D9i2lDbQ42PpjmPxL7yMeyACY2XmPUThhKvyhCoI+yTqLoOpBuwRus41EP9UgMWJQxvN1E
        8crpHi+yRQ+9AgOs2PcDiItCN9qXmJMKpcnftcDVxzmI7JeCqvqh1Clqa6R5Z+4fKb0Amg
        yfZx8iczx3JRkXnJxloQ/dptKDTe+UZtt/IsTUWzQa2ugKaPd54S8gaHj9202w91Dnb1wb
        wrBobOUwTehBpt2U4pojmB3htDcn6Jx1lFgVmjwPAmhMw6V8rIiPXGoygD/FySaFuAKDUr
        8L950DVE9AXAJs8FaOJ8H0QM87lmyc5XwSS5C8V7WhECSY9gVJiauawUHZvt5g==
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020e; t=1619439631;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding;
        bh=HjHkjGkPGO3fw+vgvF+05AALsQgOFuIPqR/IpdYn9Qo=;
        b=WmIiGY4xveKkt8e/DljSTvfmpdNc3B/obt3eg7BDLAH/kY+2klLfWQ6WR0PUb8p63uASyz
        r4CFub7+JYkiiwDA==
From:   Thomas Gleixner <tglx@linutronix.de>
To:     Linus Torvalds <torvalds@linux-foundation.org>
Cc:     linux-kernel@vger.kernel.org, x86@kernel.org
Subject: [GIT pull] irq/core for v5.13-rc1
Message-ID: <161942931322.31579.7197210361416957505.tglx@nanos>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

TGludXMsCgpwbGVhc2UgcHVsbCB0aGUgbGF0ZXN0IGlycS9jb3JlIGJyYW5jaCBmcm9tOgoKICAg
Z2l0Oi8vZ2l0Lmtlcm5lbC5vcmcvcHViL3NjbS9saW51eC9rZXJuZWwvZ2l0L3RpcC90aXAuZ2l0
IGlycS1jb3JlLTIwMjEtMDQtMjYKCnVwIHRvOiAgNzY1ODIyZTE1NjlhOiBNZXJnZSB0YWcgJ2ly
cWNoaXAtNS4xMycgb2YgZ2l0Oi8vZ2l0Lmtlcm5lbC5vcmcvcHViL3NjbS9saW51eC9rZXJuZWwv
Z2l0L21hei9hcm0tcGxhdGZvcm1zIGludG8gaXJxL2NvcmUKClRoZSB1c3VhbCB1cGRhdGVzIGZy
b20gdGhlIGlycSBkZXBhcnRlbWVudDoKCkNvcmUgY2hhbmdlczoKCiAtIFByb3ZpZGUgSVJRRl9O
T19BVVRPRU4gYXMgYSBmbGFnIGZvciByZXF1ZXN0Kl9pcnEoKSBzbyBkcml2ZXJzIGNhbiBiZQog
ICBjbGVhbmVkIHVwIHdoaWNoIGVpdGhlciB1c2UgYSBzZXBlcmF0ZSBtZWNoYW5pc20gdG8gcHJl
dmVudCBhdXRvLWVuYWJsZQogICBhdCByZXF1ZXN0IHRpbWUgb3IgaGF2ZSBhIHJhY3kgbWVjaGFu
aXNtIHdoaWNoIGRpc2FibGVzIHRoZSBpbnRlcnJ1cHQKICAgcmlnaHQgYWZ0ZXIgcmVxdWVzdC4K
CiAtIEdldCByaWQgb2YgdGhlIGxhc3QgdXNhZ2Ugb2YgaXJxX2NyZWF0ZV9pZGVudGl0eV9tYXBw
aW5nKCkgYW5kIHJlbW92ZQogICB0aGUgaW50ZXJmYWNlLgoKIC0gQW4gb3ZlcmhhdWwgb2YgdGFz
a2xldF9kaXNhYmxlKCkuIE1vc3QgdXNhZ2Ugc2l0ZXMgb2YgdGFza2xldF9kaXNhYmxlKCkKICAg
YXJlIGluIHRhc2sgY29udGV4dCBhbmQgdXN1YWxseSBpbiBjbGVhbnVwLCB0ZWFyZG93biBjb2Rl
IHBhdGhlcy4KICAgdGFza2xldF9kaXNhYmxlKCkgc3BpbndhaXRzIGZvciBhIHRhc2tsZXQgd2hp
Y2ggaXMgY3VycmVudGx5IGV4ZWN1dGVkLgogICBUaGF0J3Mgbm90IG9ubHkgYSBwcm9ibGVtIGZv
ciBQUkVFTVBUX1JUIHdoZXJlIHRoaXMgY2FuIGxlYWQgdG8gYSBsaXZlCiAgIGxvY2sgd2hlbiB0
aGUgZGlzYWJsaW5nIHRhc2sgcHJlZW1wdHMgdGhlIHNvZnRpcnEgdGhyZWFkLiBJdCdzIGFsc28K
ICAgcHJvYmxlbWF0aWMgaW4gY29udGV4dCBvZiB2aXJ0dWFsaXphdGlvbiB3aGVuIHRoZSB2Q1BV
IHdoaWNoIHJ1bnMgdGhlCiAgIHRhc2tsZXQgaXMgc2NoZWR1bGVkIG91dCBhbmQgdGhlIGRpc2Fi
bGluZyBjb2RlIGhhcyB0byBzcGluIHdhaXQgdW50aWwKICAgaXQncyBzY2hlZHVsZWQgYmFjayBp
bi4gVGhvdWdoIHRoZXJlIGFyZSBhIGZldyBjb2RlIHBhdGhlcyB3aGljaCBpbnZva2UKICAgdGFz
a2xldF9kaXNhYmxlKCkgZnJvbSBub24tc2xlZXBhYmxlIGNvbnRleHQuIEZvciB0aGVzZSBhIG5l
dyBkaXNhYmxlCiAgIHZhcmlhbnQgd2hpY2ggc3RpbGwgc3BpbndhaXRzIGlzIHByb3ZpZGVkIHdo
aWNoIGFsbG93cyB0byBzd2l0Y2gKICAgdGFza2xldF9kaXNhYmxlKCkgdG8gYSBzbGVlcCB3YWl0
IG1lY2hhbmlzbS4gRm9yIHRoZSBhdG9taWMgdXNlIGNhc2VzCiAgIHRoaXMgZG9lcyBub3Qgc29s
dmUgdGhlIGxpdmUgbG9jayBpc3N1ZSBvbiBQUkVFTVBUX1JULiBUaGF0IGlzIG1pdGlnYXRlZAog
ICBieSBibG9ja2luZyBvbiB0aGUgUlQgc3BlY2lmaWMgc29mdGlycSBsb2NrLgoKIC0gVGhlIFBS
RUVNUFRfUlQgc3BlY2lmaWMgaW1wbGVtZW50YXRpb24gb2Ygc29mdGlycSBwcm9jZXNzaW5nIGFu
ZAogICBsb2NhbF9iaF9kaXNhYmxlL2VuYWJsZSgpLgoKICAgT24gUlQgZW5hYmxlZCBrZXJuZWxz
IHNvZnQgaW50ZXJydXB0IHByb2Nlc3NpbmcgaGFwcGVucyBhbHdheXMgaW4gdGFzawogICBjb250
ZXh0IGFuZCBhbGwgaW50ZXJydXB0IGhhbmRsZXJzLCB3aGljaCBhcmUgbm90IGV4cGxpY2l0bHkg
bWFya2VkIHRvCiAgIGJlIGludm9rZWQgaW4gaGFyZCBpbnRlcnJ1cHQgY29udGV4dCBhcmUgZm9y
Y2VkIGludG8gdGFzayBjb250ZXh0IGFzCiAgIHdlbGwuIFRoaXMgYWxsb3dzIHRvIHByb3RlY3Qg
YWdhaW5zdCBzb2Z0aXJxIHByb2Nlc3Npbmcgd2l0aCBhIHBlcgogICBDUFUgbG9jaywgd2hpY2gg
aW4gdHVybiBhbGxvd3MgdG8gbWFrZSBCSCBkaXNhYmxlZCByZWdpb25zIHByZWVtcHRpYmxlLgoK
ICAgTW9zdCBvZiB0aGUgc29mdGlycSBoYW5kbGluZyBjb2RlIGlzIHN0aWxsIHNoYXJlZC4gVGhl
IFJUL25vbi1SVAogICBzcGVjaWZpYyBkaWZmZXJlbmNlcyBhcmUgYWRkcmVzc2VkIHdpdGggYSBz
ZXQgb2YgaW5saW5lIGZ1bmN0aW9ucyB3aGljaAogICBwcm92aWRlIHRoZSBjb250ZXh0IHNwZWNp
ZmljIGZ1bmN0aW9uYWxpdHkuIFRoZSBsb2NhbF9iaF9kaXNhYmxlKCkgLwogICBsb2NhbF9iaF9l
bmFibGUoKSBtZWNoYW5pc20gYXJlIG9idmlvdXNseSBzZXBlcmF0ZS4KCiAtIFRoZSB1c3VhbCBz
ZXQgb2Ygc21hbGwgaW1wcm92ZW1lbnRzIGFuZCBjbGVhbnVwcwoKRHJpdmVyIGNoYW5nZXM6Cgog
LSBOZXcgZHJpdmVycyBmb3IgTnV2b3RvbiBXUENNNDUwIGFuZCBEVCA3OXJjMzI0M3ggaW50ZXJy
dXB0IGNvbnRyb2xsZXJzCgogLSBFeHRlbmRlZCBmdW5jdGlvbmFsaXR5IGZvciBNU3RhciwgU1RN
MzIgYW5kIFNDNzI4MCBpcnEgY2hpcHMKCiAtIEVuaGFuY2VkIHJvYnVzdG5lc3MgZm9yIEFSTSBH
SUN2My80LjEgZHJpdmVycwoKIC0gVGhlIHVzdWFsIHNldCBvZiBjbGVhbnVwcyBhbmQgaW1wcm92
ZW1lbnRzIGFsbCBvdmVyIHRoZSBwbGFjZQoKCgpUaGFua3MsCgoJdGdseAoKLS0tLS0tLS0tLS0t
LS0tLS0tPgpBcm5kIEJlcmdtYW5uICgxKToKICAgICAgaXJxY2hpcC9naWMtdjM6IEZpeCBPRl9C
QURfQUREUiBlcnJvciBoYW5kbGluZwoKQmFycnkgU29uZyAoMSk6CiAgICAgIGdlbmlycTogQWRk
IElSUUZfTk9fQVVUT0VOIGZvciByZXF1ZXN0X2lycS9ubWkoKQoKQmFydG9zeiBHb2xhc3pld3Nr
aSAoMSk6CiAgICAgIGdlbmlycS9pcnFfc2ltOiBTaHJpbmsgZGV2bV9pcnFfZG9tYWluX2NyZWF0
ZV9zaW0oKQoKRGF2aWRsb2hyIEJ1ZXNvICgxKToKICAgICAgdGFza2xldDogUmVtb3ZlIHRhc2ts
ZXRfa2lsbF9pbW1lZGlhdGUKCkRpcmsgQmVobWUgKDEpOgogICAgICBzb2Z0aXJxOiBzL0JVRy9X
QVJOX09OQ0UvIG9uIHRhc2tsZXQgU0NIRUQgc3RhdGUgbm90IHNldAoKRXJ3YW4gTGUgUmF5ICgx
KToKICAgICAgaXJxY2hpcC9zdG0zMjogQWRkIHVzYXJ0IGluc3RhbmNlcyBleHRpIGRpcmVjdCBl
dmVudCBzdXBwb3J0CgpIYW8gRmFuZyAoMSk6CiAgICAgIGlycWNoaXAvaGlzaTogVXNlIHRoZSBj
b3JyZWN0IEhpU2lsaWNvbiBjb3B5cmlnaHQKCkhlIFlpbmcgKDEpOgogICAgICBpcnFjaGlwL2dp
Yy12MzogRG8gbm90IGVuYWJsZSBpcnFzIHdoZW4gaGFuZGxpbmcgc3B1cmlvdXMgaW50ZXJydXBz
CgpJbmdvIE1vbG5hciAoMSk6CiAgICAgIGlycTogRml4IHR5cG9zIGluIGNvbW1lbnRzCgpKaXNo
ZW5nIFpoYW5nICgxKToKICAgICAgaXJxY2hpcC9zaWZpdmUtcGxpYzogTWFyayB0d28gZ2xvYmFs
IHZhcmlhYmxlcyBfX3JvX2FmdGVyX2luaXQKCkpvbmF0aGFuIE5ldXNjaMOkZmVyICgyKToKICAg
ICAgZHQtYmluZGluZ3M6IGludGVycnVwdC1jb250cm9sbGVyOiBBZGQgbnV2b3Rvbiwgd3BjbTQ1
MC1haWMKICAgICAgaXJxY2hpcDogQWRkIGRyaXZlciBmb3IgV1BDTTQ1MCBpbnRlcnJ1cHQgY29u
dHJvbGxlcgoKSnVlcmdlbiBHcm9zcyAoMSk6CiAgICAgIGlycTogU2ltcGxpZnkgY29uZGl0aW9u
IGluIGlycV9tYXRyaXhfcmVzZXJ2ZSgpCgpLcnp5c3p0b2YgS296bG93c2tpICgxKToKICAgICAg
Z2VuaXJxOiBGaXggdHlwb3MgYW5kIG1pc3NwZWxsaW5ncyBpbiBjb21tZW50cwoKTG9yZW56byBQ
aWVyYWxpc2kgKDEpOgogICAgICBpcnFjaGlwL2dpYy12NC4xOiBEaXNhYmxlIHZTR0kgdXBvbiAo
R0lDIENQVUlGIDwgdjQuMSkgZGV0ZWN0aW9uCgpNYXJjIFp5bmdpZXIgKDgpOgogICAgICBzaDog
aW50YzogRHJvcCB0aGUgdXNlIG9mIGlycV9jcmVhdGVfaWRlbnRpdHlfbWFwcGluZygpCiAgICAg
IGlycWRvbWFpbjogR2V0IHJpZCBvZiBpcnFfY3JlYXRlX2lkZW50aXR5X21hcHBpbmcoKQogICAg
ICBtaXBzOiBuZXRsb2dpYzogVXNlIGlycV9kb21haW5fc2ltcGxlX29wcyBmb3IgWExQIFBJQwog
ICAgICBpcnFjaGlwL3dwY200NTA6IERyb3AgQ09NUElMRV9URVNUCiAgICAgIEFSTTogUFhBOiBL
aWxsIHVzZSBvZiBpcnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncygpCiAgICAgIGlycWNoaXAvamNv
cmUtYWljOiBLaWxsIHVzZSBvZiBpcnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncygpCiAgICAgIGly
cWRvbWFpbjogR2V0IHJpZCBvZiBpcnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncygpCiAgICAgIGly
cWRvbWFpbjogRHJvcCByZWZlcmVuY2VzIHRvIHJlY3VzaXZlIGlycWRvbWFpbiBzZXR1cAoKTWFy
ay1QSyBUc2FpICgxKToKICAgICAgaXJxY2hpcC9pcnEtbXN0OiBTdXBwb3J0IHBvbGFyaXR5IGNv
bmZpZ3VyYXRpb24KCk5pY2hvbGFzIFBpZ2dpbiAoMSk6CiAgICAgIGdlbmlycTogUmVkdWNlIGly
cWRlYnVnIGNhY2hlbGluZSBib3VuY2luZwoKUGV0ZXIgWmlqbHN0cmEgKDIpOgogICAgICB0YXNr
bGV0czogUmVwbGFjZSBzcGluIHdhaXQgaW4gdGFza2xldF91bmxvY2tfd2FpdCgpCiAgICAgIHRh
c2tsZXRzOiBSZXBsYWNlIHNwaW4gd2FpdCBpbiB0YXNrbGV0X2tpbGwoKQoKUmFqZW5kcmEgTmF5
YWsgKDEpOgogICAgICBkdC1iaW5kaW5nczogcWNvbSxwZGM6IEFkZCBjb21wYXRpYmxlIGZvciBz
YzcyODAKClJhbmR5IER1bmxhcCAoMSk6CiAgICAgIGlycWNoaXAvdGIxMHg6IFVzZSAnZmFsbHRo
cm91Z2gnIHRvIGVsaW1pbmF0ZSBhIHdhcm5pbmcKClJvYmVydCBIYW5jb2NrICgxKToKICAgICAg
aXJxY2hpcC94aWxpbng6IEV4cG9zZSBLY29uZmlnIG9wdGlvbiBmb3IgWnlucS9aeW5xTVAKClNl
YmFzdGlhbiBBbmRyemVqIFNpZXdpb3IgKDcpOgogICAgICBuZXQ6IGptZTogUmVwbGFjZSBsaW5r
LWNoYW5nZSB0YXNrbGV0IHdpdGggd29yawogICAgICBuZXQ6IHN1bmRhbmNlOiBVc2UgdGFza2xl
dF9kaXNhYmxlX2luX2F0b21pYygpLgogICAgICBhdGg5azogVXNlIHRhc2tsZXRfZGlzYWJsZV9p
bl9hdG9taWMoKQogICAgICBhdG06IGVuaTogVXNlIHRhc2tsZXRfZGlzYWJsZV9pbl9hdG9taWMo
KSBpbiB0aGUgc2VuZCgpIGNhbGxiYWNrCiAgICAgIFBDSTogaHY6IFVzZSB0YXNrbGV0X2Rpc2Fi
bGVfaW5fYXRvbWljKCkKICAgICAgZmlyZXdpcmU6IG9oY2k6IFVzZSB0YXNrbGV0X2Rpc2FibGVf
aW5fYXRvbWljKCkgd2hlcmUgcmVxdWlyZWQKICAgICAgZHJtL2k5MTU6IFVzZSB0YXNrbGV0X3Vu
bG9ja19zcGluX3dhaXQoKSBpbiBfX3Rhc2tsZXRfZGlzYWJsZV9zeW5jX29uY2UoKQoKVGV0c3Vv
IEhhbmRhICgxKToKICAgICAga2VybmVsOiBJbml0aWFsaXplIGNwdW1hc2sgYmVmb3JlIHBhcnNp
bmcKClRob21hcyBCb2dlbmRvZXJmZXIgKDIpOgogICAgICBpcnFjaGlwOiBBZGQgc3VwcG9ydCBm
b3IgSURUIDc5cmMzMjQzeCBpbnRlcnJ1cHQgY29udHJvbGxlcgogICAgICBkdC1iaW5kaW5nczog
aW50ZXJydXB0LWNvbnRyb2xsZXI6IEFkZCBJRFQgNzlSQzMyNDN4IEludGVycnVwdCBDb250cm9s
bGVyCgpUaG9tYXMgR2xlaXhuZXIgKDEyKToKICAgICAgdGFza2xldHM6IFJlcGxhY2UgYmFycmll
cigpIHdpdGggY3B1X3JlbGF4KCkgaW4gdGFza2xldF91bmxvY2tfd2FpdCgpCiAgICAgIHRhc2ts
ZXRzOiBVc2Ugc3RhdGljIGlubGluZXMgZm9yIHN0dWIgaW1wbGVtZW50YXRpb25zCiAgICAgIHRh
c2tsZXRzOiBQcm92aWRlIHRhc2tsZXRfZGlzYWJsZV9pbl9hdG9taWMoKQogICAgICB0YXNrbGV0
czogVXNlIHNwaW4gd2FpdCBpbiB0YXNrbGV0X2Rpc2FibGUoKSB0ZW1wb3JhcmlseQogICAgICB0
YXNrbGV0czogUHJldmVudCB0YXNrbGV0X3VubG9ja19zcGluX3dhaXQoKSBkZWFkbG9jayBvbiBS
VAogICAgICB0YXNrbGV0czogU3dpdGNoIHRhc2tsZXRfZGlzYWJsZSgpIHRvIHRoZSBzbGVlcCB3
YWl0IHZhcmlhbnQKICAgICAgc29mdGlycTogQWRkIFJUIHNwZWNpZmljIHNvZnRpcnEgYWNjb3Vu
dGluZwogICAgICBpcnF0aW1lOiBNYWtlIGFjY291bnRpbmcgY29ycmVjdCBvbiBSVAogICAgICBz
b2Z0aXJxOiBNb3ZlIHZhcmlvdXMgcHJvdGVjdGlvbnMgaW50byBpbmxpbmUgaGVscGVycwogICAg
ICBzb2Z0aXJxOiBNYWtlIHNvZnRpcnEgY29udHJvbCBhbmQgcHJvY2Vzc2luZyBSVCBhd2FyZQog
ICAgICB0aWNrL3NjaGVkOiBQcmV2ZW50IGZhbHNlIHBvc2l0aXZlIHNvZnRpcnEgcGVuZGluZyB3
YXJuaW5ncyBvbiBSVAogICAgICByY3U6IFByZXZlbnQgZmFsc2UgcG9zaXRpdmUgc29mdGlycSB3
YXJuaW5nIG9uIFJUCgpWaXRhbHkgS3V6bmV0c292ICgxKToKICAgICAgZ2VuaXJxL21hdHJpeDog
UHJldmVudCBhbGxvY2F0aW9uIGNvdW50ZXIgY29ycnVwdGlvbgoKCiAuLi4vaW50ZXJydXB0LWNv
bnRyb2xsZXIvaWR0LDMyNDM0LXBpYy55YW1sICAgICAgICB8ICA0OCArKysKIC4uLi9pbnRlcnJ1
cHQtY29udHJvbGxlci9udXZvdG9uLHdwY200NTAtYWljLnlhbWwgIHwgIDM5ICsrKwogLi4uL2Jp
bmRpbmdzL2ludGVycnVwdC1jb250cm9sbGVyL3Fjb20scGRjLnR4dCAgICAgfCAgIDEgKwogYXJj
aC9hcm0vbWFjaC1weGEvcHhhX2NwbGRzX2lycXMuYyAgICAgICAgICAgICAgICAgfCAgMjQgKy0K
IGFyY2gvYXJtNjQva3ZtL3ZnaWMvdmdpYy1tbWlvLXYzLmMgICAgICAgICAgICAgICAgIHwgICA0
ICstCiBhcmNoL21pcHMvbmV0bG9naWMvY29tbW9uL2lycS5jICAgICAgICAgICAgICAgICAgICB8
ICAgNiArLQogZHJpdmVycy9hdG0vZW5pLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgIDIgKy0KIGRyaXZlcnMvZmlyZXdpcmUvb2hjaS5jICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHwgICA0ICstCiBkcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oICAgICAgICAg
ICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9pcnFjaGlwL0tjb25maWcgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgMTggKy0KIGRyaXZlcnMvaXJxY2hpcC9NYWtlZmlsZSAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgICAyICsKIGRyaXZlcnMvaXJxY2hpcC9pcnEtYXNwZWVkLXZp
Yy5jICAgICAgICAgICAgICAgICAgIHwgICA0ICstCiBkcml2ZXJzL2lycWNoaXAvaXJxLWJjbTcx
MjAtbDIuYyAgICAgICAgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9pcnFjaGlwL2lycS1j
c2t5LWFwYi1pbnRjLmMgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvaXJxY2hpcC9p
cnEtZ2ljLXYybS5jICAgICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL2lycWNo
aXAvaXJxLWdpYy12My1pdHMuYyAgICAgICAgICAgICAgICAgICB8ICAxMCArLQogZHJpdmVycy9p
cnFjaGlwL2lycS1naWMtdjMtbWJpLmMgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZl
cnMvaXJxY2hpcC9pcnEtZ2ljLXYzLmMgICAgICAgICAgICAgICAgICAgICAgIHwgIDEwICstCiBk
cml2ZXJzL2lycWNoaXAvaXJxLWdpYy12NC5jICAgICAgICAgICAgICAgICAgICAgICB8ICAyNyAr
LQogZHJpdmVycy9pcnFjaGlwL2lycS1oaXAwNC5jICAgICAgICAgICAgICAgICAgICAgICAgfCAg
IDQgKy0KIGRyaXZlcnMvaXJxY2hpcC9pcnEtaWR0MzI0M3guYyAgICAgICAgICAgICAgICAgICAg
IHwgMTI0ICsrKysrKysKIGRyaXZlcnMvaXJxY2hpcC9pcnEtamNvcmUtYWljLmMgICAgICAgICAg
ICAgICAgICAgIHwgICA0ICstCiBkcml2ZXJzL2lycWNoaXAvaXJxLWxvb25nc29uLXBjaC1waWMu
YyAgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9pcnFjaGlwL2lycS1tYmlnZW4uYyAgICAg
ICAgICAgICAgICAgICAgICAgfCAgIDQgKy0KIGRyaXZlcnMvaXJxY2hpcC9pcnEtbWVzb24tZ3Bp
by5jICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL2lycWNoaXAvaXJxLW1zdC1p
bnRjLmMgICAgICAgICAgICAgICAgICAgICB8ICA5OCArKysrKy0KIGRyaXZlcnMvaXJxY2hpcC9p
cnEtbXRrLWNpcnEuYyAgICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL2lycWNo
aXAvaXJxLW14cy5jICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9p
cnFjaGlwL2lycS1zaWZpdmUtcGxpYy5jICAgICAgICAgICAgICAgICAgfCAgIDQgKy0KIGRyaXZl
cnMvaXJxY2hpcC9pcnEtc3RtMzItZXh0aS5jICAgICAgICAgICAgICAgICAgIHwgICA3ICsKIGRy
aXZlcnMvaXJxY2hpcC9pcnEtc3VuNGkuYyAgICAgICAgICAgICAgICAgICAgICAgIHwgICAyICst
CiBkcml2ZXJzL2lycWNoaXAvaXJxLXRiMTB4LmMgICAgICAgICAgICAgICAgICAgICAgICB8ICAg
MSArCiBkcml2ZXJzL2lycWNoaXAvaXJxLXRpLXNjaS1pbnRhLmMgICAgICAgICAgICAgICAgICB8
ICAgMiArLQogZHJpdmVycy9pcnFjaGlwL2lycS12aWMuYyAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgIDQgKy0KIGRyaXZlcnMvaXJxY2hpcC9pcnEtd3BjbTQ1MC1haWMuYyAgICAgICAgICAg
ICAgICAgIHwgMTYxICsrKysrKysrKysKIGRyaXZlcnMvaXJxY2hpcC9pcnEteGlsaW54LWludGMu
YyAgICAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9kbGluay9z
dW5kYW5jZS5jICAgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvam1l
LmMgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMTAgKy0KIGRyaXZlcnMvbmV0L2V0aGVybmV0
L2ptZS5oICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBkcml2ZXJzL25ldC93aXJl
bGVzcy9hdGgvYXRoOWsvYmVhY29uLmMgICAgICAgICAgICB8ICAgMiArLQogZHJpdmVycy9wY2kv
Y29udHJvbGxlci9wY2ktaHlwZXJ2LmMgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMv
c2gvaW50Yy9jb3JlLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDQ5ICsrLQogaW5j
bHVkZS9saW51eC9ib3R0b21faGFsZi5oICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDggKy0K
IGluY2x1ZGUvbGludXgvaGFyZGlycS5oICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAx
ICsKIGluY2x1ZGUvbGludXgvaW50ZXJydXB0LmggICAgICAgICAgICAgICAgICAgICAgICAgIHwg
IDM3ICsrLQogaW5jbHVkZS9saW51eC9pcnEuaCAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgIDQgKy0KIGluY2x1ZGUvbGludXgvaXJxY2hpcC9hcm0tZ2ljLXY0LmggICAgICAgICAg
ICAgICAgIHwgICAyICsKIGluY2x1ZGUvbGludXgvaXJxZGVzYy5oICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHwgICAyICstCiBpbmNsdWRlL2xpbnV4L2lycWRvbWFpbi5oICAgICAgICAgICAg
ICAgICAgICAgICAgICB8ICAgOSAtCiBpbmNsdWRlL2xpbnV4L3ByZWVtcHQuaCAgICAgICAgICAg
ICAgICAgICAgICAgICAgICB8ICAgNiArLQogaW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAgIDMgKy0KIGluY2x1ZGUvbGludXgvc2NoZWQuaCAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAzICsKIGtlcm5lbC9pcnEvY2hpcC5jICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICA4ICstCiBrZXJuZWwvaXJxL2R1bW15Y2hp
cC5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMiArLQoga2VybmVsL2lycS9pcGku
YyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC9pcnEv
aXJxX3NpbS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDMxICstCiBrZXJuZWwv
aXJxL2lycWRlc2MuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMiArLQoga2Vy
bmVsL2lycS9pcnFkb21haW4uYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgNTEgKy0t
CiBrZXJuZWwvaXJxL21hbmFnZS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAy
MyArLQoga2VybmVsL2lycS9tYXRyaXguYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
fCAgMTEgKy0KIGtlcm5lbC9pcnEvbWlncmF0aW9uLmMgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICAyICstCiBrZXJuZWwvaXJxL21zaS5jICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICB8ICAgMiArLQoga2VybmVsL2lycS9wcm9jLmMgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgIDQgKy0KIGtlcm5lbC9pcnEvcmVzZW5kLmMgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgICAyICstCiBrZXJuZWwvaXJxL3NwdXJpb3VzLmMgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgNCArCiBrZXJuZWwvaXJxL3RpbWluZ3MuYyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICAgOCArLQoga2VybmVsL3Byb2ZpbGUuYyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC9zY2hlZC9jcHV0aW1l
LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICA0ICstCiBrZXJuZWwvc29mdGlycS5j
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDM1NSArKysrKysrKysrKysrKysr
Ky0tLS0KIGtlcm5lbC90aW1lL3RpY2stc2NoZWQuYyAgICAgICAgICAgICAgICAgICAgICAgICAg
IHwgICAyICstCiBrZXJuZWwvdHJhY2UvdHJhY2UuYyAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB8ICAgMiArLQogNzEgZmlsZXMgY2hhbmdlZCwgMTAwNiBpbnNlcnRpb25zKCspLCAyODkg
ZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVl
L2JpbmRpbmdzL2ludGVycnVwdC1jb250cm9sbGVyL2lkdCwzMjQzNC1waWMueWFtbAogY3JlYXRl
IG1vZGUgMTAwNjQ0IERvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9pbnRlcnJ1cHQt
Y29udHJvbGxlci9udXZvdG9uLHdwY200NTAtYWljLnlhbWwKIGNyZWF0ZSBtb2RlIDEwMDY0NCBk
cml2ZXJzL2lycWNoaXAvaXJxLWlkdDMyNDN4LmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJz
L2lycWNoaXAvaXJxLXdwY200NTAtYWljLmMKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvaW50ZXJydXB0LWNvbnRyb2xsZXIvaWR0LDMyNDM0LXBpYy55YW1s
IGIvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL2ludGVycnVwdC1jb250cm9sbGVy
L2lkdCwzMjQzNC1waWMueWFtbApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAw
MDAuLmRmNWQ4ZDFlYWQ3MAotLS0gL2Rldi9udWxsCisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNl
dHJlZS9iaW5kaW5ncy9pbnRlcnJ1cHQtY29udHJvbGxlci9pZHQsMzI0MzQtcGljLnlhbWwKQEAg
LTAsMCArMSw0OCBAQAorIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogKEdQTC0yLjAgT1IgQlNE
LTItQ2xhdXNlKQorJVlBTUwgMS4yCistLS0KKyRpZDogaHR0cDovL2RldmljZXRyZWUub3JnL3Nj
aGVtYXMvaW50ZXJydXB0LWNvbnRyb2xsZXIvaWR0LDMyNDM0LXBpYy55YW1sIworJHNjaGVtYTog
aHR0cDovL2RldmljZXRyZWUub3JnL21ldGEtc2NoZW1hcy9jb3JlLnlhbWwjCisKK3RpdGxlOiBJ
RFQgNzlSQzMyNDM0IEludGVycnVwdCBDb250cm9sbGVyIERldmljZSBUcmVlIEJpbmRpbmdzCisK
K21haW50YWluZXJzOgorICAtIFRob21hcyBCb2dlbmRvZXJmZXIgPHRzYm9nZW5kQGFscGhhLmZy
YW5rZW4uZGU+CisKK2FsbE9mOgorICAtICRyZWY6IC9zY2hlbWFzL2ludGVycnVwdC1jb250cm9s
bGVyLnlhbWwjCisKK3Byb3BlcnRpZXM6CisgICIjaW50ZXJydXB0LWNlbGxzIjoKKyAgICBjb25z
dDogMQorCisgIGNvbXBhdGlibGU6CisgICAgY29uc3Q6IGlkdCwzMjQzNC1waWMKKworICByZWc6
CisgICAgbWF4SXRlbXM6IDEKKworICBpbnRlcnJ1cHQtY29udHJvbGxlcjogdHJ1ZQorCityZXF1
aXJlZDoKKyAgLSAiI2ludGVycnVwdC1jZWxscyIKKyAgLSBjb21wYXRpYmxlCisgIC0gcmVnCisg
IC0gaW50ZXJydXB0LWNvbnRyb2xsZXIKKworYWRkaXRpb25hbFByb3BlcnRpZXM6IGZhbHNlCisK
K2V4YW1wbGVzOgorICAtIHwKKyAgICBpZHRwaWMzOiBpbnRlcnJ1cHQtY29udHJvbGxlckAzODAw
YyB7CisgICAgICAgIGNvbXBhdGlibGUgPSAiaWR0LDMyNDM0LXBpYyI7CisgICAgICAgIHJlZyA9
IDwweDM4MDBjIDB4MGM+OworCisgICAgICAgIGludGVycnVwdC1jb250cm9sbGVyOworICAgICAg
ICAjaW50ZXJydXB0LWNlbGxzID0gPDE+OworCisgICAgICAgIGludGVycnVwdC1wYXJlbnQgPSA8
JmNwdWludGM+OworICAgICAgICBpbnRlcnJ1cHRzID0gPDM+OworICAgIH07CisKKy4uLgpkaWZm
IC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL2ludGVycnVwdC1jb250
cm9sbGVyL251dm90b24sd3BjbTQ1MC1haWMueWFtbCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJl
ZS9iaW5kaW5ncy9pbnRlcnJ1cHQtY29udHJvbGxlci9udXZvdG9uLHdwY200NTAtYWljLnlhbWwK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi45Y2U2ODA0YmRiOTkKLS0t
IC9kZXYvbnVsbAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvaW50ZXJy
dXB0LWNvbnRyb2xsZXIvbnV2b3Rvbix3cGNtNDUwLWFpYy55YW1sCkBAIC0wLDAgKzEsMzkgQEAK
KyMgU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seSBPUiBCU0QtMi1DbGF1c2UK
KyVZQU1MIDEuMgorLS0tCiskaWQ6IGh0dHA6Ly9kZXZpY2V0cmVlLm9yZy9zY2hlbWFzL2ludGVy
cnVwdC1jb250cm9sbGVyL251dm90b24sd3BjbTQ1MC1haWMueWFtbCMKKyRzY2hlbWE6IGh0dHA6
Ly9kZXZpY2V0cmVlLm9yZy9tZXRhLXNjaGVtYXMvY29yZS55YW1sIworCit0aXRsZTogTnV2b3Rv
biBXUENNNDUwIEFkdmFuY2VkIEludGVycnVwdCBDb250cm9sbGVyIGJpbmRpbmdzCisKK21haW50
YWluZXJzOgorICAtIEpvbmF0aGFuIE5ldXNjaMOkZmVyIDxqLm5ldXNjaGFlZmVyQGdteC5uZXQ+
CisKK3Byb3BlcnRpZXM6CisgICcjaW50ZXJydXB0LWNlbGxzJzoKKyAgICBjb25zdDogMgorCisg
IGNvbXBhdGlibGU6CisgICAgY29uc3Q6IG51dm90b24sd3BjbTQ1MC1haWMKKworICBpbnRlcnJ1
cHQtY29udHJvbGxlcjogdHJ1ZQorCisgIHJlZzoKKyAgICBtYXhJdGVtczogMQorCithZGRpdGlv
bmFsUHJvcGVydGllczogZmFsc2UKKworcmVxdWlyZWQ6CisgIC0gJyNpbnRlcnJ1cHQtY2VsbHMn
CisgIC0gY29tcGF0aWJsZQorICAtIHJlZworICAtIGludGVycnVwdC1jb250cm9sbGVyCisKK2V4
YW1wbGVzOgorICAtIHwKKyAgICBhaWM6IGludGVycnVwdC1jb250cm9sbGVyQGI4MDAyMDAwIHsK
KyAgICAgICAgY29tcGF0aWJsZSA9ICJudXZvdG9uLHdwY200NTAtYWljIjsKKyAgICAgICAgcmVn
ID0gPDB4YjgwMDIwMDAgMHgxMDAwPjsKKyAgICAgICAgaW50ZXJydXB0LWNvbnRyb2xsZXI7Cisg
ICAgICAgICNpbnRlcnJ1cHQtY2VsbHMgPSA8Mj47CisgICAgfTsKZGlmZiAtLWdpdCBhL0RvY3Vt
ZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy9pbnRlcnJ1cHQtY29udHJvbGxlci9xY29tLHBk
Yy50eHQgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvaW50ZXJydXB0LWNvbnRy
b2xsZXIvcWNvbSxwZGMudHh0CmluZGV4IGU5YWZiNDgxODJjNy4uOThkODllNTMwMTNkIDEwMDY0
NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvaW50ZXJydXB0LWNvbnRy
b2xsZXIvcWNvbSxwZGMudHh0CisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5n
cy9pbnRlcnJ1cHQtY29udHJvbGxlci9xY29tLHBkYy50eHQKQEAgLTE5LDYgKzE5LDcgQEAgUHJv
cGVydGllczoKIAlWYWx1ZSB0eXBlOiA8c3RyaW5nPgogCURlZmluaXRpb246IFNob3VsZCBjb250
YWluICJxY29tLDxzb2M+LXBkYyIgYW5kICJxY29tLHBkYyIKIAkJICAgIC0gInFjb20sc2M3MTgw
LXBkYyI6IEZvciBTQzcxODAKKwkJICAgIC0gInFjb20sc2M3MjgwLXBkYyI6IEZvciBTQzcyODAK
IAkJICAgIC0gInFjb20sc2RtODQ1LXBkYyI6IEZvciBTRE04NDUKIAkJICAgIC0gInFjb20sc2Rt
ODI1MC1wZGMiOiBGb3IgU004MjUwCiAJCSAgICAtICJxY29tLHNkbTgzNTAtcGRjIjogRm9yIFNN
ODM1MApkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vbWFjaC1weGEvcHhhX2NwbGRzX2lycXMuYyBiL2Fy
Y2gvYXJtL21hY2gtcHhhL3B4YV9jcGxkc19pcnFzLmMKaW5kZXggNDVjMTljYTk2ZjdhLi5lYzBk
OWIwOTQ3NDQgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL21hY2gtcHhhL3B4YV9jcGxkc19pcnFzLmMK
KysrIGIvYXJjaC9hcm0vbWFjaC1weGEvcHhhX2NwbGRzX2lycXMuYwpAQCAtMTQ3LDIyICsxNDcs
MjAgQEAgc3RhdGljIGludCBjcGxkc19wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2
KQogCX0KIAogCWlycV9zZXRfaXJxX3dha2UoZnBnYS0+aXJxLCAxKTsKLQlmcGdhLT5pcnFkb21h
aW4gPSBpcnFfZG9tYWluX2FkZF9saW5lYXIocGRldi0+ZGV2Lm9mX25vZGUsCi0JCQkJCSAgICAg
ICBDUExEU19OQl9JUlEsCi0JCQkJCSAgICAgICAmY3BsZHNfaXJxX2RvbWFpbl9vcHMsIGZwZ2Ep
OworCWlmIChiYXNlX2lycSkKKwkJZnBnYS0+aXJxZG9tYWluID0gaXJxX2RvbWFpbl9hZGRfbGVn
YWN5KHBkZXYtPmRldi5vZl9ub2RlLAorCQkJCQkJCUNQTERTX05CX0lSUSwKKwkJCQkJCQliYXNl
X2lycSwgMCwKKwkJCQkJCQkmY3BsZHNfaXJxX2RvbWFpbl9vcHMsCisJCQkJCQkJZnBnYSk7CisJ
ZWxzZQorCQlmcGdhLT5pcnFkb21haW4gPSBpcnFfZG9tYWluX2FkZF9saW5lYXIocGRldi0+ZGV2
Lm9mX25vZGUsCisJCQkJCQkJQ1BMRFNfTkJfSVJRLAorCQkJCQkJCSZjcGxkc19pcnFfZG9tYWlu
X29wcywKKwkJCQkJCQlmcGdhKTsKIAlpZiAoIWZwZ2EtPmlycWRvbWFpbikKIAkJcmV0dXJuIC1F
Tk9ERVY7CiAKLQlpZiAoYmFzZV9pcnEpIHsKLQkJcmV0ID0gaXJxX2NyZWF0ZV9zdHJpY3RfbWFw
cGluZ3MoZnBnYS0+aXJxZG9tYWluLCBiYXNlX2lycSwgMCwKLQkJCQkJCSBDUExEU19OQl9JUlEp
OwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyKCZwZGV2LT5kZXYsICJjb3VsZG4ndCBjcmVhdGUg
dGhlIGlycSBtYXBwaW5nICVkLi4lZFxuIiwKLQkJCQliYXNlX2lycSwgYmFzZV9pcnEgKyBDUExE
U19OQl9JUlEpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCX0KLQogCXJldHVybiAwOwogfQogCmRp
ZmYgLS1naXQgYS9hcmNoL2FybTY0L2t2bS92Z2ljL3ZnaWMtbW1pby12My5jIGIvYXJjaC9hcm02
NC9rdm0vdmdpYy92Z2ljLW1taW8tdjMuYwppbmRleCAxNWE2Yzk4ZWU5MmYuLjJmMWIxNTYwMjFh
NiAxMDA2NDQKLS0tIGEvYXJjaC9hcm02NC9rdm0vdmdpYy92Z2ljLW1taW8tdjMuYworKysgYi9h
cmNoL2FybTY0L2t2bS92Z2ljL3ZnaWMtbW1pby12My5jCkBAIC04Niw3ICs4Niw3IEBAIHN0YXRp
YyB1bnNpZ25lZCBsb25nIHZnaWNfbW1pb19yZWFkX3YzX21pc2Moc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LAogCQl9CiAJCWJyZWFrOwogCWNhc2UgR0lDRF9UWVBFUjI6Ci0JCWlmIChrdm1fdmdpY19n
bG9iYWxfc3RhdGUuaGFzX2dpY3Y0XzEpCisJCWlmIChrdm1fdmdpY19nbG9iYWxfc3RhdGUuaGFz
X2dpY3Y0XzEgJiYgZ2ljX2NwdWlmX2hhc192c2dpKCkpCiAJCQl2YWx1ZSA9IEdJQ0RfVFlQRVIy
X25BU1NHSWNhcDsKIAkJYnJlYWs7CiAJY2FzZSBHSUNEX0lJRFI6CkBAIC0xMTksNyArMTE5LDcg
QEAgc3RhdGljIHZvaWQgdmdpY19tbWlvX3dyaXRlX3YzX21pc2Moc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LAogCQlkaXN0LT5lbmFibGVkID0gdmFsICYgR0lDRF9DVExSX0VOQUJMRV9TU19HMTsKIAog
CQkvKiBOb3QgYSBHSUN2NC4xPyBObyBIVyBTR0lzICovCi0JCWlmICgha3ZtX3ZnaWNfZ2xvYmFs
X3N0YXRlLmhhc19naWN2NF8xKQorCQlpZiAoIWt2bV92Z2ljX2dsb2JhbF9zdGF0ZS5oYXNfZ2lj
djRfMSB8fCAhZ2ljX2NwdWlmX2hhc192c2dpKCkpCiAJCQl2YWwgJj0gfkdJQ0RfQ1RMUl9uQVNT
R0lyZXE7CiAKIAkJLyogRGlzdCBzdGF5cyBlbmFibGVkPyBuQVNTR0lyZXEgaXMgUk8gKi8KZGlm
ZiAtLWdpdCBhL2FyY2gvbWlwcy9uZXRsb2dpYy9jb21tb24vaXJxLmMgYi9hcmNoL21pcHMvbmV0
bG9naWMvY29tbW9uL2lycS5jCmluZGV4IGNmMzNkZDhhNDg3ZS4uYzI1YTJjZTVlMjlmIDEwMDY0
NAotLS0gYS9hcmNoL21pcHMvbmV0bG9naWMvY29tbW9uL2lycS5jCisrKyBiL2FyY2gvbWlwcy9u
ZXRsb2dpYy9jb21tb24vaXJxLmMKQEAgLTI3NiwxMCArMjc2LDYgQEAgYXNtbGlua2FnZSB2b2lk
IHBsYXRfaXJxX2Rpc3BhdGNoKHZvaWQpCiB9CiAKICNpZmRlZiBDT05GSUdfQ1BVX1hMUAotc3Rh
dGljIGNvbnN0IHN0cnVjdCBpcnFfZG9tYWluX29wcyB4bHBfcGljX2lycV9kb21haW5fb3BzID0g
ewotCS54bGF0ZSA9IGlycV9kb21haW5feGxhdGVfb25ldHdvY2VsbCwKLX07Ci0KIHN0YXRpYyBp
bnQgX19pbml0IHhscF9vZl9waWNfaW5pdChzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUsCiAJCQkJ
CXN0cnVjdCBkZXZpY2Vfbm9kZSAqcGFyZW50KQogewpAQCAtMzI0LDcgKzMyMCw3IEBAIHN0YXRp
YyBpbnQgX19pbml0IHhscF9vZl9waWNfaW5pdChzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUsCiAK
IAl4bHBfcGljX2RvbWFpbiA9IGlycV9kb21haW5fYWRkX2xlZ2FjeShub2RlLCBuX3BpY2lycXMs
CiAJCW5sbV9pcnFfdG9feGlycShzb2NpZCwgUElDX0lSUV9CQVNFKSwgUElDX0lSUV9CQVNFLAot
CQkmeGxwX3BpY19pcnFfZG9tYWluX29wcywgTlVMTCk7CisJCSZpcnFfZG9tYWluX3NpbXBsZV9v
cHMsIE5VTEwpOwogCWlmICh4bHBfcGljX2RvbWFpbiA9PSBOVUxMKSB7CiAJCXByX2VycigiUElD
ICVwT0ZuOiBDcmVhdGluZyBsZWdhY3kgZG9tYWluIGZhaWxlZCFcbiIsIG5vZGUpOwogCQlyZXR1
cm4gLUVJTlZBTDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvYXRtL2VuaS5jIGIvZHJpdmVycy9hdG0v
ZW5pLmMKaW5kZXggMzE2YTk5NDc1NDFmLi5lOTZhNGU4YTRhMTAgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvYXRtL2VuaS5jCisrKyBiL2RyaXZlcnMvYXRtL2VuaS5jCkBAIC0yMDU0LDcgKzIwNTQsNyBA
QCBzdGF0aWMgaW50IGVuaV9zZW5kKHN0cnVjdCBhdG1fdmNjICp2Y2Msc3RydWN0IHNrX2J1ZmYg
KnNrYikKIAl9CiAJc3VibWl0dGVkKys7CiAJQVRNX1NLQihza2IpLT52Y2MgPSB2Y2M7Ci0JdGFz
a2xldF9kaXNhYmxlKCZFTklfREVWKHZjYy0+ZGV2KS0+dGFzayk7CisJdGFza2xldF9kaXNhYmxl
X2luX2F0b21pYygmRU5JX0RFVih2Y2MtPmRldiktPnRhc2spOwogCXJlcyA9IGRvX3R4KHNrYik7
CiAJdGFza2xldF9lbmFibGUoJkVOSV9ERVYodmNjLT5kZXYpLT50YXNrKTsKIAlpZiAocmVzID09
IGVucV9vaykgcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2ZpcmV3aXJlL29oY2kuYyBi
L2RyaXZlcnMvZmlyZXdpcmUvb2hjaS5jCmluZGV4IDk4MTFjNDA5NTZlNS4uMTdjOWQ4MjUxODhi
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2ZpcmV3aXJlL29oY2kuYworKysgYi9kcml2ZXJzL2ZpcmV3
aXJlL29oY2kuYwpAQCAtMjU0NSw3ICsyNTQ1LDcgQEAgc3RhdGljIGludCBvaGNpX2NhbmNlbF9w
YWNrZXQoc3RydWN0IGZ3X2NhcmQgKmNhcmQsIHN0cnVjdCBmd19wYWNrZXQgKnBhY2tldCkKIAlz
dHJ1Y3QgZHJpdmVyX2RhdGEgKmRyaXZlcl9kYXRhID0gcGFja2V0LT5kcml2ZXJfZGF0YTsKIAlp
bnQgcmV0ID0gLUVOT0VOVDsKIAotCXRhc2tsZXRfZGlzYWJsZSgmY3R4LT50YXNrbGV0KTsKKwl0
YXNrbGV0X2Rpc2FibGVfaW5fYXRvbWljKCZjdHgtPnRhc2tsZXQpOwogCiAJaWYgKHBhY2tldC0+
YWNrICE9IDApCiAJCWdvdG8gb3V0OwpAQCAtMzQ2NSw3ICszNDY1LDcgQEAgc3RhdGljIGludCBv
aGNpX2ZsdXNoX2lzb19jb21wbGV0aW9ucyhzdHJ1Y3QgZndfaXNvX2NvbnRleHQgKmJhc2UpCiAJ
c3RydWN0IGlzb19jb250ZXh0ICpjdHggPSBjb250YWluZXJfb2YoYmFzZSwgc3RydWN0IGlzb19j
b250ZXh0LCBiYXNlKTsKIAlpbnQgcmV0ID0gMDsKIAotCXRhc2tsZXRfZGlzYWJsZSgmY3R4LT5j
b250ZXh0LnRhc2tsZXQpOworCXRhc2tsZXRfZGlzYWJsZV9pbl9hdG9taWMoJmN0eC0+Y29udGV4
dC50YXNrbGV0KTsKIAogCWlmICghdGVzdF9hbmRfc2V0X2JpdF9sb2NrKDAsICZjdHgtPmZsdXNo
aW5nX2NvbXBsZXRpb25zKSkgewogCQljb250ZXh0X3Rhc2tsZXQoKHVuc2lnbmVkIGxvbmcpJmN0
eC0+Y29udGV4dCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5o
IGIvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAppbmRleCBlNjIyYWVlNmU0YmUuLjQ0
MGMzNWYxYWJjOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9ncHUvZHJtL2k5MTUvaTkxNV9nZW0uaAor
KysgYi9kcml2ZXJzL2dwdS9kcm0vaTkxNS9pOTE1X2dlbS5oCkBAIC0xMDUsNyArMTA1LDcgQEAg
c3RhdGljIGlubGluZSBib29sIHRhc2tsZXRfaXNfbG9ja2VkKGNvbnN0IHN0cnVjdCB0YXNrbGV0
X3N0cnVjdCAqdCkKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Rhc2tsZXRfZGlzYWJsZV9zeW5jX29u
Y2Uoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQogewogCWlmICghYXRvbWljX2ZldGNoX2luYygm
dC0+Y291bnQpKQotCQl0YXNrbGV0X3VubG9ja193YWl0KHQpOworCQl0YXNrbGV0X3VubG9ja19z
cGluX3dhaXQodCk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgYm9vbCBfX3Rhc2tsZXRfaXNfZW5hYmxl
ZChjb25zdCBzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2ly
cWNoaXAvS2NvbmZpZyBiL2RyaXZlcnMvaXJxY2hpcC9LY29uZmlnCmluZGV4IDE1NTM2ZTMyMWRm
NS4uYzhmNTdlM2UwNThkIDEwMDY0NAotLS0gYS9kcml2ZXJzL2lycWNoaXAvS2NvbmZpZworKysg
Yi9kcml2ZXJzL2lycWNoaXAvS2NvbmZpZwpAQCAtMjc5LDggKzI3OSwxMyBAQCBjb25maWcgWFRF
TlNBX01YCiAJc2VsZWN0IEdFTkVSSUNfSVJRX0VGRkVDVElWRV9BRkZfTUFTSwogCiBjb25maWcg
WElMSU5YX0lOVEMKLQlib29sCisJYm9vbCAiWGlsaW54IEludGVycnVwdCBDb250cm9sbGVyIElQ
IgorCWRlcGVuZHMgb24gTUlDUk9CTEFaRSB8fCBBUkNIX1pZTlEgfHwgQVJDSF9aWU5RTVAKIAlz
ZWxlY3QgSVJRX0RPTUFJTgorCWhlbHAKKwkgIFN1cHBvcnQgZm9yIHRoZSBYaWxpbnggSW50ZXJy
dXB0IENvbnRyb2xsZXIgSVAgY29yZS4KKwkgIFRoaXMgaXMgdXNlZCBhcyBhIHByaW1hcnkgY29u
dHJvbGxlciB3aXRoIE1pY3JvQmxhemUgYW5kIGNhbiBhbHNvCisJICBiZSB1c2VkIGFzIGEgc2Vj
b25kYXJ5IGNoYWluZWQgY29udHJvbGxlciBvbiBvdGhlciBwbGF0Zm9ybXMuCiAKIGNvbmZpZyBJ
UlFfQ1JPU1NCQVIKIAlib29sCkBAIC01NzcsNCArNTgyLDE1IEBAIGNvbmZpZyBNU1RfSVJRCiAJ
aGVscAogCSAgU3VwcG9ydCBNU3RhciBJbnRlcnJ1cHQgQ29udHJvbGxlci4KIAorY29uZmlnIFdQ
Q000NTBfQUlDCisJYm9vbCAiTnV2b3RvbiBXUENNNDUwIEFkdmFuY2VkIEludGVycnVwdCBDb250
cm9sbGVyIgorCWRlcGVuZHMgb24gQVJDSF9XUENNNDUwCisJaGVscAorCSAgU3VwcG9ydCBmb3Ig
dGhlIGludGVycnVwdCBjb250cm9sbGVyIGluIHRoZSBOdXZvdG9uIFdQQ000NTAgQk1DIFNvQy4K
KworY29uZmlnIElSUV9JRFQzMjQzWAorCWJvb2wKKwlzZWxlY3QgR0VORVJJQ19JUlFfQ0hJUAor
CXNlbGVjdCBJUlFfRE9NQUlOCisKIGVuZG1lbnUKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hp
cC9NYWtlZmlsZSBiL2RyaXZlcnMvaXJxY2hpcC9NYWtlZmlsZQppbmRleCBjNTliOTVhMDUzMmMu
LjE4NTczNjAyYTkzOSAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL01ha2VmaWxlCisrKyBi
L2RyaXZlcnMvaXJxY2hpcC9NYWtlZmlsZQpAQCAtMTEzLDMgKzExMyw1IEBAIG9iai0kKENPTkZJ
R19MT09OR1NPTl9QQ0hfTVNJKQkJKz0gaXJxLWxvb25nc29uLXBjaC1tc2kubwogb2JqLSQoQ09O
RklHX01TVF9JUlEpCQkJKz0gaXJxLW1zdC1pbnRjLm8KIG9iai0kKENPTkZJR19TTDI4Q1BMRF9J
TlRDKQkJKz0gaXJxLXNsMjhjcGxkLm8KIG9iai0kKENPTkZJR19NQUNIX1JFQUxURUtfUlRMKQkJ
Kz0gaXJxLXJlYWx0ZWstcnRsLm8KK29iai0kKENPTkZJR19XUENNNDUwX0FJQykJCSs9IGlycS13
cGNtNDUwLWFpYy5vCitvYmotJChDT05GSUdfSVJRX0lEVDMyNDNYKQkJKz0gaXJxLWlkdDMyNDN4
Lm8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtYXNwZWVkLXZpYy5jIGIvZHJpdmVy
cy9pcnFjaGlwL2lycS1hc3BlZWQtdmljLmMKaW5kZXggNjU2N2VkNzgyZjgyLi41ODcxN2NkNDRm
OTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtYXNwZWVkLXZpYy5jCisrKyBiL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtYXNwZWVkLXZpYy5jCkBAIC03MSw3ICs3MSw3IEBAIHN0YXRpYyB2
b2lkIHZpY19pbml0X2h3KHN0cnVjdCBhc3BlZWRfdmljICp2aWMpCiAJd3JpdGVsKDAsIHZpYy0+
YmFzZSArIEFWSUNfSU5UX1NFTEVDVCk7CiAJd3JpdGVsKDAsIHZpYy0+YmFzZSArIEFWSUNfSU5U
X1NFTEVDVCArIDQpOwogCi0JLyogU29tZSBpbnRlcnJ1cHRzIGhhdmUgYSBwcm9ncmFtYWJsZSBo
aWdoL2xvdyBsZXZlbCB0cmlnZ2VyCisJLyogU29tZSBpbnRlcnJ1cHRzIGhhdmUgYSBwcm9ncmFt
bWFibGUgaGlnaC9sb3cgbGV2ZWwgdHJpZ2dlcgogCSAqICg0IEdQSU8gZGlyZWN0IGlucHV0cyks
IGZvciBub3cgd2UgYXNzdW1lIHRoaXMgd2FzIGNvbmZpZ3VyZWQKIAkgKiBieSBmaXJtd2FyZS4g
V2UgcmVhZCB3aGljaCBvbmVzIGFyZSBlZGdlIG5vdy4KIAkgKi8KQEAgLTIwMyw3ICsyMDMsNyBA
QCBzdGF0aWMgaW50IF9faW5pdCBhdmljX29mX2luaXQoc3RydWN0IGRldmljZV9ub2RlICpub2Rl
LAogCX0KIAl2aWMtPmJhc2UgPSByZWdzOwogCi0JLyogSW5pdGlhbGl6ZSBzb3VyZXMsIGFsbCBt
YXNrZWQgKi8KKwkvKiBJbml0aWFsaXplIHNvdXJjZXMsIGFsbCBtYXNrZWQgKi8KIAl2aWNfaW5p
dF9odyh2aWMpOwogCiAJLyogUmVhZHkgdG8gcmVjZWl2ZSBpbnRlcnJ1cHRzICovCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2lycWNoaXAvaXJxLWJjbTcxMjAtbDIuYyBiL2RyaXZlcnMvaXJxY2hpcC9p
cnEtYmNtNzEyMC1sMi5jCmluZGV4IGM3YzllOTc2YWNiYi4uYWQ1OTY1NmNjYzI4IDEwMDY0NAot
LS0gYS9kcml2ZXJzL2lycWNoaXAvaXJxLWJjbTcxMjAtbDIuYworKysgYi9kcml2ZXJzL2lycWNo
aXAvaXJxLWJjbTcxMjAtbDIuYwpAQCAtMzA5LDcgKzMwOSw3IEBAIHN0YXRpYyBpbnQgX19pbml0
IGJjbTcxMjBfbDJfaW50Y19wcm9iZShzdHJ1Y3QgZGV2aWNlX25vZGUgKmRuLAogCiAJCWlmIChk
YXRhLT5jYW5fd2FrZSkgewogCQkJLyogVGhpcyBJUlEgY2hpcCBjYW4gd2FrZSB0aGUgc3lzdGVt
LCBzZXQgYWxsCi0JCQkgKiByZWxldmFudCBjaGlsZCBpbnRlcnVwdHMgaW4gd2FrZV9lbmFibGVk
IG1hc2sKKwkJCSAqIHJlbGV2YW50IGNoaWxkIGludGVycnVwdHMgaW4gd2FrZV9lbmFibGVkIG1h
c2sKIAkJCSAqLwogCQkJZ2MtPndha2VfZW5hYmxlZCA9IDB4ZmZmZmZmZmY7CiAJCQlnYy0+d2Fr
ZV9lbmFibGVkICY9IH5nYy0+dW51c2VkOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2ly
cS1jc2t5LWFwYi1pbnRjLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWNza3ktYXBiLWludGMuYwpp
bmRleCA1YTJlYzQzYjdkZGQuLmFiOTFhZmE4Njc1NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFj
aGlwL2lycS1jc2t5LWFwYi1pbnRjLmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1jc2t5LWFw
Yi1pbnRjLmMKQEAgLTE3Niw3ICsxNzYsNyBAQCBneF9pbnRjX2luaXQoc3RydWN0IGRldmljZV9u
b2RlICpub2RlLCBzdHJ1Y3QgZGV2aWNlX25vZGUgKnBhcmVudCkKIAl3cml0ZWwoMHgwLCByZWdf
YmFzZSArIEdYX0lOVENfTkVONjNfMzIpOwogCiAJLyoKLQkgKiBJbml0aWFsIG1hc2sgcmVnIHdp
dGggYWxsIHVubWFza2VkLCBiZWNhdXNlIHdlIG9ubHkgdXNlIGVuYWxiZSByZWcKKwkgKiBJbml0
aWFsIG1hc2sgcmVnIHdpdGggYWxsIHVubWFza2VkLCBiZWNhdXNlIHdlIG9ubHkgdXNlIGVuYWJs
ZSByZWcKIAkgKi8KIAl3cml0ZWwoMHgwLCByZWdfYmFzZSArIEdYX0lOVENfTk1BU0szMV8wMCk7
CiAJd3JpdGVsKDB4MCwgcmVnX2Jhc2UgKyBHWF9JTlRDX05NQVNLNjNfMzIpOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjJtLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWdp
Yy12Mm0uYwppbmRleCBmYmVjMDdkNjM0YWQuLjQxMTZiNDhlNjBhZiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9pcnFjaGlwL2lycS1naWMtdjJtLmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1naWMt
djJtLmMKQEAgLTM3MSw3ICszNzEsNyBAQCBzdGF0aWMgaW50IF9faW5pdCBnaWN2Mm1faW5pdF9v
bmUoc3RydWN0IGZ3bm9kZV9oYW5kbGUgKmZ3bm9kZSwKIAkgKiB0aGUgTVNJIGRhdGEgaXMgdGhl
IGFic29sdXRlIHZhbHVlIHdpdGhpbiB0aGUgcmFuZ2UgZnJvbQogCSAqIHNwaV9zdGFydCB0byAo
c3BpX3N0YXJ0ICsgbnVtX3NwaXMpLgogCSAqCi0JICogQnJvYWRvbSBOUzIgR0lDdjJtIGltcGxl
bWVudGF0aW9uIGhhcyBhbiBlcnJhdHVtIHdoZXJlIHRoZSBNU0kgZGF0YQorCSAqIEJyb2FkY29t
IE5TMiBHSUN2Mm0gaW1wbGVtZW50YXRpb24gaGFzIGFuIGVycmF0dW0gd2hlcmUgdGhlIE1TSSBk
YXRhCiAJICogaXMgJ3NwaV9udW1iZXIgLSAzMicKIAkgKgogCSAqIFJlYWRpbmcgdGhhdCByZWdp
c3RlciBmYWlscyBvbiB0aGUgR3Jhdml0b24gaW1wbGVtZW50YXRpb24KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtZ2ljLXYzLWl0cy5jIGIvZHJpdmVycy9pcnFjaGlwL2lycS1naWMt
djMtaXRzLmMKaW5kZXggZWQ0NmU2MDU3ZTMzLi5jMzQ4NWIyMzBkNzAgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtZ2ljLXYzLWl0cy5jCisrKyBiL2RyaXZlcnMvaXJxY2hpcC9pcnEt
Z2ljLXYzLWl0cy5jCkBAIC0xNDkyLDcgKzE0OTIsNyBAQCBzdGF0aWMgdm9pZCBpdHNfdmxwaV9z
ZXRfZG9vcmJlbGwoc3RydWN0IGlycV9kYXRhICpkLCBib29sIGVuYWJsZSkKIAkgKgogCSAqIElk
ZWFsbHksIHdlJ2QgaXNzdWUgYSBWTUFQVEkgdG8gc2V0IHRoZSBkb29yYmVsbCB0byBpdHMgTFBJ
CiAJICogdmFsdWUgb3IgdG8gMTAyMywgZGVwZW5kaW5nIG9uIHRoZSBlbmFibGUgYml0LiBCdXQg
dGhhdAotCSAqIHdvdWxkIGJlIGlzc3VlaW5nIGEgbWFwcGluZyBmb3IgYW4gL2V4aXN0aW5nLyBE
ZXZJRCtFdmVudElECisJICogd291bGQgYmUgaXNzdWluZyBhIG1hcHBpbmcgZm9yIGFuIC9leGlz
dGluZy8gRGV2SUQrRXZlbnRJRAogCSAqIHBhaXIsIHdoaWNoIGlzIFVOUFJFRElDVEFCTEUuIElu
c3RlYWQsIGxldCdzIGlzc3VlIGEgVk1PVkkKIAkgKiB0byB0aGUgL3NhbWUvIHZQRSwgdXNpbmcg
dGhpcyBvcHBvcnR1bml0eSB0byBhZGp1c3QgdGhlCiAJICogZG9vcmJlbGwuIE1vdWFoYWhhaGFo
YS4gV2UgbG92ZXMgaXQsIFByZWNpb3VzLgpAQCAtMzEyMiw3ICszMTIyLDcgQEAgc3RhdGljIHZv
aWQgaXRzX2NwdV9pbml0X2xwaXModm9pZCkKIAogCQkvKgogCQkgKiBJdCdzIHBvc3NpYmxlIGZv
ciBDUFUgdG8gcmVjZWl2ZSBWTFBJcyBiZWZvcmUgaXQgaXMKLQkJICogc2hlZHVsZWQgYXMgYSB2
UEUsIGVzcGVjaWFsbHkgZm9yIHRoZSBmaXJzdCBDUFUsIGFuZCB0aGUKKwkJICogc2NoZWR1bGVk
IGFzIGEgdlBFLCBlc3BlY2lhbGx5IGZvciB0aGUgZmlyc3QgQ1BVLCBhbmQgdGhlCiAJCSAqIFZM
UEkgd2l0aCBJTlRJRCBsYXJnZXIgdGhhbiAyXihJRGJpdHMrMSkgd2lsbCBiZSBjb25zaWRlcmVk
CiAJCSAqIGFzIG91dCBvZiByYW5nZSBhbmQgZHJvcHBlZCBieSBHSUMuCiAJCSAqIFNvIHdlIGlu
aXRpYWxpemUgSURiaXRzIHRvIGtub3duIHZhbHVlIHRvIGF2b2lkIFZMUEkgZHJvcC4KQEAgLTM2
MTYsNyArMzYxNiw3IEBAIHN0YXRpYyB2b2lkIGl0c19pcnFfZG9tYWluX2ZyZWUoc3RydWN0IGly
cV9kb21haW4gKmRvbWFpbiwgdW5zaWduZWQgaW50IHZpcnEsCiAKIAkvKgogCSAqIElmIGFsbCBp
bnRlcnJ1cHRzIGhhdmUgYmVlbiBmcmVlZCwgc3RhcnQgbW9wcGluZyB0aGUKLQkgKiBmbG9vci4g
VGhpcyBpcyBjb25kaXRpb25uZWQgb24gdGhlIGRldmljZSBub3QgYmVpbmcgc2hhcmVkLgorCSAq
IGZsb29yLiBUaGlzIGlzIGNvbmRpdGlvbmVkIG9uIHRoZSBkZXZpY2Ugbm90IGJlaW5nIHNoYXJl
ZC4KIAkgKi8KIAlpZiAoIWl0c19kZXYtPnNoYXJlZCAmJgogCSAgICBiaXRtYXBfZW1wdHkoaXRz
X2Rldi0+ZXZlbnRfbWFwLmxwaV9tYXAsCkBAIC00MTk0LDcgKzQxOTQsNyBAQCBzdGF0aWMgaW50
IGl0c19zZ2lfc2V0X2FmZmluaXR5KHN0cnVjdCBpcnFfZGF0YSAqZCwKIHsKIAkvKgogCSAqIFRo
ZXJlIGlzIG5vIG5vdGlvbiBvZiBhZmZpbml0eSBmb3IgdmlydHVhbCBTR0lzLCBhdCBsZWFzdAot
CSAqIG5vdCBvbiB0aGUgaG9zdCAoc2luY2UgdGhleSBjYW4gb25seSBiZSB0YXJnZXR0aW5nIGEg
dlBFKS4KKwkgKiBub3Qgb24gdGhlIGhvc3QgKHNpbmNlIHRoZXkgY2FuIG9ubHkgYmUgdGFyZ2V0
aW5nIGEgdlBFKS4KIAkgKiBUZWxsIHRoZSBrZXJuZWwgd2UndmUgZG9uZSB3aGF0ZXZlciBpdCBh
c2tlZCBmb3IuCiAJICovCiAJaXJxX2RhdGFfdXBkYXRlX2VmZmVjdGl2ZV9hZmZpbml0eShkLCBt
YXNrX3ZhbCk7CkBAIC00MjM5LDcgKzQyMzksNyBAQCBzdGF0aWMgaW50IGl0c19zZ2lfZ2V0X2ly
cWNoaXBfc3RhdGUoc3RydWN0IGlycV9kYXRhICpkLAogCS8qCiAJICogTG9ja2luZyBnYWxvcmUh
IFdlIGNhbiByYWNlIGFnYWluc3QgdHdvIGRpZmZlcmVudCBldmVudHM6CiAJICoKLQkgKiAtIENv
bmN1cmVudCB2UEUgYWZmaW5pdHkgY2hhbmdlOiB3ZSBtdXN0IG1ha2Ugc3VyZSBpdCBjYW5ub3QK
KwkgKiAtIENvbmN1cnJlbnQgdlBFIGFmZmluaXR5IGNoYW5nZTogd2UgbXVzdCBtYWtlIHN1cmUg
aXQgY2Fubm90CiAJICogICBoYXBwZW4sIG9yIHdlJ2xsIHRhbGsgdG8gdGhlIHdyb25nIHJlZGlz
dHJpYnV0b3IuIFRoaXMgaXMKIAkgKiAgIGlkZW50aWNhbCB0byB3aGF0IGhhcHBlbnMgd2l0aCB2
TFBJcy4KIAkgKgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjMtbWJpLmMg
Yi9kcml2ZXJzL2lycWNoaXAvaXJxLWdpYy12My1tYmkuYwppbmRleCA1NjNhOWIzNjYyOTQuLmU4
MWU4OWE4MWNiNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjMtbWJpLmMK
KysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjMtbWJpLmMKQEAgLTMwMyw3ICszMDMsNyBA
QCBpbnQgX19pbml0IG1iaV9pbml0KHN0cnVjdCBmd25vZGVfaGFuZGxlICpmd25vZGUsIHN0cnVj
dCBpcnFfZG9tYWluICpwYXJlbnQpCiAJcmVnID0gb2ZfZ2V0X3Byb3BlcnR5KG5wLCAibWJpLWFs
aWFzIiwgTlVMTCk7CiAJaWYgKHJlZykgewogCQltYmlfcGh5c19iYXNlID0gb2ZfdHJhbnNsYXRl
X2FkZHJlc3MobnAsIHJlZyk7Ci0JCWlmIChtYmlfcGh5c19iYXNlID09IE9GX0JBRF9BRERSKSB7
CisJCWlmIChtYmlfcGh5c19iYXNlID09IChwaHlzX2FkZHJfdClPRl9CQURfQUREUikgewogCQkJ
cmV0ID0gLUVOWElPOwogCQkJZ290byBlcnJfZnJlZV9tYmk7CiAJCX0KZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtZ2ljLXYzLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWdpYy12My5j
CmluZGV4IGViMGVlMzU2YTYyOS4uMzdhMjNhYTZkZTM3IDEwMDY0NAotLS0gYS9kcml2ZXJzL2ly
cWNoaXAvaXJxLWdpYy12My5jCisrKyBiL2RyaXZlcnMvaXJxY2hpcC9pcnEtZ2ljLXYzLmMKQEAg
LTY0OCw2ICs2NDgsMTAgQEAgc3RhdGljIGFzbWxpbmthZ2Ugdm9pZCBfX2V4Y2VwdGlvbl9pcnFf
ZW50cnkgZ2ljX2hhbmRsZV9pcnEoc3RydWN0IHB0X3JlZ3MgKnJlZ3MKIAogCWlycW5yID0gZ2lj
X3JlYWRfaWFyKCk7CiAKKwkvKiBDaGVjayBmb3Igc3BlY2lhbCBJRHMgZmlyc3QgKi8KKwlpZiAo
KGlycW5yID49IDEwMjAgJiYgaXJxbnIgPD0gMTAyMykpCisJCXJldHVybjsKKwogCWlmIChnaWNf
c3VwcG9ydHNfbm1pKCkgJiYKIAkgICAgdW5saWtlbHkoZ2ljX3JlYWRfcnByKCkgPT0gR0lDRF9J
TlRfTk1JX1BSSSkpIHsKIAkJZ2ljX2hhbmRsZV9ubWkoaXJxbnIsIHJlZ3MpOwpAQCAtNjU5LDEw
ICs2NjMsNiBAQCBzdGF0aWMgYXNtbGlua2FnZSB2b2lkIF9fZXhjZXB0aW9uX2lycV9lbnRyeSBn
aWNfaGFuZGxlX2lycShzdHJ1Y3QgcHRfcmVncyAqcmVncwogCQlnaWNfYXJjaF9lbmFibGVfaXJx
cygpOwogCX0KIAotCS8qIENoZWNrIGZvciBzcGVjaWFsIElEcyBmaXJzdCAqLwotCWlmICgoaXJx
bnIgPj0gMTAyMCAmJiBpcnFuciA8PSAxMDIzKSkKLQkJcmV0dXJuOwotCiAJaWYgKHN0YXRpY19i
cmFuY2hfbGlrZWx5KCZzdXBwb3J0c19kZWFjdGl2YXRlX2tleSkpCiAJCWdpY193cml0ZV9lb2ly
KGlycW5yKTsKIAllbHNlCkBAIC0xMzc5LDcgKzEzNzksNyBAQCBzdGF0aWMgaW50IGdpY19pcnFf
ZG9tYWluX3RyYW5zbGF0ZShzdHJ1Y3QgaXJxX2RvbWFpbiAqZCwKIAogCQkvKgogCQkgKiBNYWtl
IGl0IGNsZWFyIHRoYXQgYnJva2VuIERUcyBhcmUuLi4gYnJva2VuLgotCQkgKiBQYXJ0aXRpb25u
ZWQgUFBJcyBhcmUgYW4gdW5mb3J0dW5hdGUgZXhjZXB0aW9uLgorCQkgKiBQYXJ0aXRpb25lZCBQ
UElzIGFyZSBhbiB1bmZvcnR1bmF0ZSBleGNlcHRpb24uCiAJCSAqLwogCQlXQVJOX09OKCp0eXBl
ID09IElSUV9UWVBFX05PTkUgJiYKIAkJCWZ3c3BlYy0+cGFyYW1bMF0gIT0gR0lDX0lSUV9UWVBF
X1BBUlRJVElPTik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lycWNoaXAvaXJxLWdpYy12NC5jIGIv
ZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjQuYwppbmRleCA1ZDFkYzk5MTUyNzIuLjRlYTcxYjI4
ZjlmNSAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2lycS1naWMtdjQuYworKysgYi9kcml2
ZXJzL2lycWNoaXAvaXJxLWdpYy12NC5jCkBAIC04NywxNyArODcsNDAgQEAgc3RhdGljIHN0cnVj
dCBpcnFfZG9tYWluICpnaWNfZG9tYWluOwogc3RhdGljIGNvbnN0IHN0cnVjdCBpcnFfZG9tYWlu
X29wcyAqdnBlX2RvbWFpbl9vcHM7CiBzdGF0aWMgY29uc3Qgc3RydWN0IGlycV9kb21haW5fb3Bz
ICpzZ2lfZG9tYWluX29wczsKIAorI2lmZGVmIENPTkZJR19BUk02NAorI2luY2x1ZGUgPGFzbS9j
cHVmZWF0dXJlLmg+CisKK2Jvb2wgZ2ljX2NwdWlmX2hhc192c2dpKHZvaWQpCit7CisJdW5zaWdu
ZWQgbG9uZyBmbGQsIHJlZyA9IHJlYWRfc2FuaXRpc2VkX2Z0cl9yZWcoU1lTX0lEX0FBNjRQRlIw
X0VMMSk7CisKKwlmbGQgPSBjcHVpZF9mZWF0dXJlX2V4dHJhY3RfdW5zaWduZWRfZmllbGQocmVn
LCBJRF9BQTY0UEZSMF9HSUNfU0hJRlQpOworCisJcmV0dXJuIGZsZCA+PSAweDM7Cit9CisjZWxz
ZQorYm9vbCBnaWNfY3B1aWZfaGFzX3ZzZ2kodm9pZCkKK3sKKwlyZXR1cm4gZmFsc2U7Cit9Cisj
ZW5kaWYKKwogc3RhdGljIGJvb2wgaGFzX3Y0XzEodm9pZCkKIHsKIAlyZXR1cm4gISFzZ2lfZG9t
YWluX29wczsKIH0KIAorc3RhdGljIGJvb2wgaGFzX3Y0XzFfc2dpKHZvaWQpCit7CisJcmV0dXJu
IGhhc192NF8xKCkgJiYgZ2ljX2NwdWlmX2hhc192c2dpKCk7Cit9CisKIHN0YXRpYyBpbnQgaXRz
X2FsbG9jX3ZjcHVfc2dpcyhzdHJ1Y3QgaXRzX3ZwZSAqdnBlLCBpbnQgaWR4KQogewogCWNoYXIg
Km5hbWU7CiAJaW50IHNnaV9iYXNlOwogCi0JaWYgKCFoYXNfdjRfMSgpKQorCWlmICghaGFzX3Y0
XzFfc2dpKCkpCiAJCXJldHVybiAwOwogCiAJbmFtZSA9IGthc3ByaW50ZihHRlBfS0VSTkVMLCAi
R0lDdjQtc2dpLSVkIiwgdGFza19waWRfbnIoY3VycmVudCkpOwpAQCAtMTgyLDcgKzIwNSw3IEBA
IHN0YXRpYyB2b2lkIGl0c19mcmVlX3NnaV9pcnFzKHN0cnVjdCBpdHNfdm0gKnZtKQogewogCWlu
dCBpOwogCi0JaWYgKCFoYXNfdjRfMSgpKQorCWlmICghaGFzX3Y0XzFfc2dpKCkpCiAJCXJldHVy
bjsKIAogCWZvciAoaSA9IDA7IGkgPCB2bS0+bnJfdnBlczsgaSsrKSB7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2lycWNoaXAvaXJxLWhpcDA0LmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWhpcDA0LmMK
aW5kZXggYTZlZDg3N2Q5ZGQzLi4wNThlYmFlYmUyYzQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaXJx
Y2hpcC9pcnEtaGlwMDQuYworKysgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWhpcDA0LmMKQEAgLTEs
OSArMSw5IEBACiAvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CiAvKgot
ICogSGlzaWxpY29uIEhpUDA0IElOVEMKKyAqIEhpU2lsaWNvbiBIaVAwNCBJTlRDCiAgKgogICog
Q29weXJpZ2h0IChDKSAyMDAyLTIwMTQgQVJNIExpbWl0ZWQuCi0gKiBDb3B5cmlnaHQgKGMpIDIw
MTMtMjAxNCBIaXNpbGljb24gTHRkLgorICogQ29weXJpZ2h0IChjKSAyMDEzLTIwMTQgSGlTaWxp
Y29uIEx0ZC4KICAqIENvcHlyaWdodCAoYykgMjAxMy0yMDE0IExpbmFybyBMdGQuCiAgKgogICog
SW50ZXJydXB0IGFyY2hpdGVjdHVyZSBmb3IgdGhlIEhJUDA0IElOVEM6CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2lycWNoaXAvaXJxLWlkdDMyNDN4LmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWlkdDMy
NDN4LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5mMDk5NjgyMDA3
N2EKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL2lycWNoaXAvaXJxLWlkdDMyNDN4LmMKQEAg
LTAsMCArMSwxMjQgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgor
ICogRHJpdmVyIGZvciBJRFQvUmVuZXNhcyA3OVJDMzI0M3ggSW50ZXJydXB0IENvbnRyb2xsZXIu
CisgKi8KKworI2RlZmluZSBwcl9mbXQoZm10KSBLQlVJTERfTU9ETkFNRSAiOiAiIGZtdAorCisj
aW5jbHVkZSA8bGludXgvaW50ZXJydXB0Lmg+CisjaW5jbHVkZSA8bGludXgvaXJxLmg+CisjaW5j
bHVkZSA8bGludXgvaXJxY2hpcC5oPgorI2luY2x1ZGUgPGxpbnV4L2lycWNoaXAvY2hhaW5lZF9p
cnEuaD4KKyNpbmNsdWRlIDxsaW51eC9pcnFkb21haW4uaD4KKyNpbmNsdWRlIDxsaW51eC9vZl9h
ZGRyZXNzLmg+CisjaW5jbHVkZSA8bGludXgvb2ZfaXJxLmg+CisKKyNkZWZpbmUgSURUX1BJQ19O
Ul9JUlFTCQkzMgorCisjZGVmaW5lIElEVF9QSUNfSVJRX1BFTkQJCTB4MDAKKyNkZWZpbmUgSURU
X1BJQ19JUlFfTUFTSwkJMHgwOAorCitzdHJ1Y3QgaWR0X3BpY19kYXRhIHsKKwl2b2lkIF9faW9t
ZW0gKmJhc2U7CisJc3RydWN0IGlycV9kb21haW4gKmlycV9kb21haW47CisJc3RydWN0IGlycV9j
aGlwX2dlbmVyaWMgKmdjOworfTsKKworc3RhdGljIHZvaWQgaWR0X2lycV9kaXNwYXRjaChzdHJ1
Y3QgaXJxX2Rlc2MgKmRlc2MpCit7CisJc3RydWN0IGlkdF9waWNfZGF0YSAqaWR0cGljID0gaXJx
X2Rlc2NfZ2V0X2hhbmRsZXJfZGF0YShkZXNjKTsKKwlzdHJ1Y3QgaXJxX2NoaXAgKmhvc3RfY2hp
cCA9IGlycV9kZXNjX2dldF9jaGlwKGRlc2MpOworCXUzMiBwZW5kaW5nLCBod2lycSwgdmlycTsK
KworCWNoYWluZWRfaXJxX2VudGVyKGhvc3RfY2hpcCwgZGVzYyk7CisKKwlwZW5kaW5nID0gaXJx
X3JlZ19yZWFkbChpZHRwaWMtPmdjLCBJRFRfUElDX0lSUV9QRU5EKTsKKwlwZW5kaW5nICY9IH5p
ZHRwaWMtPmdjLT5tYXNrX2NhY2hlOworCXdoaWxlIChwZW5kaW5nKSB7CisJCWh3aXJxID0gX19m
bHMocGVuZGluZyk7CisJCXZpcnEgPSBpcnFfbGluZWFyX3Jldm1hcChpZHRwaWMtPmlycV9kb21h
aW4sIGh3aXJxKTsKKwkJaWYgKHZpcnEpCisJCQlnZW5lcmljX2hhbmRsZV9pcnEodmlycSk7CisJ
CXBlbmRpbmcgJj0gfigxIDw8IGh3aXJxKTsKKwl9CisKKwljaGFpbmVkX2lycV9leGl0KGhvc3Rf
Y2hpcCwgZGVzYyk7Cit9CisKK3N0YXRpYyBpbnQgaWR0X3BpY19pbml0KHN0cnVjdCBkZXZpY2Vf
bm9kZSAqb2Zfbm9kZSwgc3RydWN0IGRldmljZV9ub2RlICpwYXJlbnQpCit7CisJc3RydWN0IGly
cV9kb21haW4gKmRvbWFpbjsKKwlzdHJ1Y3QgaWR0X3BpY19kYXRhICppZHRwaWM7CisJc3RydWN0
IGlycV9jaGlwX2dlbmVyaWMgKmdjOworCXN0cnVjdCBpcnFfY2hpcF90eXBlICpjdDsKKwl1bnNp
Z25lZCBpbnQgcGFyZW50X2lycTsKKwlpbnQgcmV0ID0gMDsKKworCWlkdHBpYyA9IGt6YWxsb2Mo
c2l6ZW9mKCppZHRwaWMpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWlkdHBpYykgeworCQlyZXQgPSAt
RU5PTUVNOworCQlnb3RvIG91dF9lcnI7CisJfQorCisJcGFyZW50X2lycSA9IGlycV9vZl9wYXJz
ZV9hbmRfbWFwKG9mX25vZGUsIDApOworCWlmICghcGFyZW50X2lycSkgeworCQlwcl9lcnIoIkZh
aWxlZCB0byBtYXAgcGFyZW50IElSUSFcbiIpOworCQlyZXQgPSAtRUlOVkFMOworCQlnb3RvIG91
dF9mcmVlOworCX0KKworCWlkdHBpYy0+YmFzZSA9IG9mX2lvbWFwKG9mX25vZGUsIDApOworCWlm
ICghaWR0cGljLT5iYXNlKSB7CisJCXByX2VycigiRmFpbGVkIHRvIG1hcCBiYXNlIGFkZHJlc3Mh
XG4iKTsKKwkJcmV0ID0gLUVOT01FTTsKKwkJZ290byBvdXRfdW5tYXBfaXJxOworCX0KKworCWRv
bWFpbiA9IGlycV9kb21haW5fYWRkX2xpbmVhcihvZl9ub2RlLCBJRFRfUElDX05SX0lSUVMsCisJ
CQkJICAgICAgICZpcnFfZ2VuZXJpY19jaGlwX29wcywgTlVMTCk7CisJaWYgKCFkb21haW4pIHsK
KwkJcHJfZXJyKCJGYWlsZWQgdG8gYWRkIGlycWRvbWFpbiFcbiIpOworCQlyZXQgPSAtRU5PTUVN
OworCQlnb3RvIG91dF9pb3VubWFwOworCX0KKwlpZHRwaWMtPmlycV9kb21haW4gPSBkb21haW47
CisKKwlyZXQgPSBpcnFfYWxsb2NfZG9tYWluX2dlbmVyaWNfY2hpcHMoZG9tYWluLCAzMiwgMSwg
IklEVFBJQyIsCisJCQkJCSAgICAgaGFuZGxlX2xldmVsX2lycSwgMCwKKwkJCQkJICAgICBJUlFf
Tk9QUk9CRSB8IElSUV9MRVZFTCwgMCk7CisJaWYgKHJldCkKKwkJZ290byBvdXRfZG9tYWluX3Jl
bW92ZTsKKworCWdjID0gaXJxX2dldF9kb21haW5fZ2VuZXJpY19jaGlwKGRvbWFpbiwgMCk7CisJ
Z2MtPnJlZ19iYXNlID0gaWR0cGljLT5iYXNlOworCWdjLT5wcml2YXRlID0gaWR0cGljOworCisJ
Y3QgPSBnYy0+Y2hpcF90eXBlczsKKwljdC0+cmVncy5tYXNrID0gSURUX1BJQ19JUlFfTUFTSzsK
KwljdC0+Y2hpcC5pcnFfbWFzayA9IGlycV9nY19tYXNrX3NldF9iaXQ7CisJY3QtPmNoaXAuaXJx
X3VubWFzayA9IGlycV9nY19tYXNrX2Nscl9iaXQ7CisJaWR0cGljLT5nYyA9IGdjOworCisJLyog
TWFzayBpbnRlcnJ1cHRzLiAqLworCXdyaXRlbCgweGZmZmZmZmZmLCBpZHRwaWMtPmJhc2UgKyBJ
RFRfUElDX0lSUV9NQVNLKTsKKwlnYy0+bWFza19jYWNoZSA9IDB4ZmZmZmZmZmY7CisKKwlpcnFf
c2V0X2NoYWluZWRfaGFuZGxlcl9hbmRfZGF0YShwYXJlbnRfaXJxLAorCQkJCQkgaWR0X2lycV9k
aXNwYXRjaCwgaWR0cGljKTsKKworCXJldHVybiAwOworCitvdXRfZG9tYWluX3JlbW92ZToKKwlp
cnFfZG9tYWluX3JlbW92ZShkb21haW4pOworb3V0X2lvdW5tYXA6CisJaW91bm1hcChpZHRwaWMt
PmJhc2UpOworb3V0X3VubWFwX2lycToKKwlpcnFfZGlzcG9zZV9tYXBwaW5nKHBhcmVudF9pcnEp
Oworb3V0X2ZyZWU6CisJa2ZyZWUoaWR0cGljKTsKK291dF9lcnI6CisJcHJfZXJyKCJGYWlsZWQg
dG8gaW5pdGlhbGl6ZSEgKGVycm5vID0gJWQpXG4iLCByZXQpOworCXJldHVybiByZXQ7Cit9CisK
K0lSUUNISVBfREVDTEFSRShpZHRfcGljLCAiaWR0LDMyNDM0LXBpYyIsIGlkdF9waWNfaW5pdCk7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL2lycWNoaXAvaXJxLWpjb3JlLWFpYy5jIGIvZHJpdmVycy9p
cnFjaGlwL2lycS1qY29yZS1haWMuYwppbmRleCAwMzNiY2NiNDE0NTUuLjVmNDdkOGVlNGFlMyAx
MDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2lycS1qY29yZS1haWMuYworKysgYi9kcml2ZXJz
L2lycWNoaXAvaXJxLWpjb3JlLWFpYy5jCkBAIC0xMDAsMTEgKzEwMCwxMSBAQCBzdGF0aWMgaW50
IF9faW5pdCBhaWNfaXJxX29mX2luaXQoc3RydWN0IGRldmljZV9ub2RlICpub2RlLAogCWpjb3Jl
X2FpYy5pcnFfdW5tYXNrID0gbm9vcDsKIAlqY29yZV9haWMubmFtZSA9ICJBSUMiOwogCi0JZG9t
YWluID0gaXJxX2RvbWFpbl9hZGRfbGluZWFyKG5vZGUsIGRvbV9zeiwgJmpjb3JlX2FpY19pcnFk
b21haW5fb3BzLAorCWRvbWFpbiA9IGlycV9kb21haW5fYWRkX2xlZ2FjeShub2RlLCBkb21fc3og
LSBtaW5faXJxLCBtaW5faXJxLCBtaW5faXJxLAorCQkJCSAgICAgICAmamNvcmVfYWljX2lycWRv
bWFpbl9vcHMsCiAJCQkJICAgICAgICZqY29yZV9haWMpOwogCWlmICghZG9tYWluKQogCQlyZXR1
cm4gLUVOT01FTTsKLQlpcnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncyhkb21haW4sIG1pbl9pcnEs
IG1pbl9pcnEsIGRvbV9zeiAtIG1pbl9pcnEpOwogCiAJcmV0dXJuIDA7CiB9CmRpZmYgLS1naXQg
YS9kcml2ZXJzL2lycWNoaXAvaXJxLWxvb25nc29uLXBjaC1waWMuYyBiL2RyaXZlcnMvaXJxY2hp
cC9pcnEtbG9vbmdzb24tcGNoLXBpYy5jCmluZGV4IDliZjZiOWE1ZjczNC4uZjc5MGNhNmQ3OGFh
IDEwMDY0NAotLS0gYS9kcml2ZXJzL2lycWNoaXAvaXJxLWxvb25nc29uLXBjaC1waWMuYworKysg
Yi9kcml2ZXJzL2lycWNoaXAvaXJxLWxvb25nc29uLXBjaC1waWMuYwpAQCAtMTYzLDcgKzE2Myw3
IEBAIHN0YXRpYyB2b2lkIHBjaF9waWNfcmVzZXQoc3RydWN0IHBjaF9waWMgKnByaXYpCiAJaW50
IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgUElDX0NPVU5UOyBpKyspIHsKLQkJLyogV3JpdGUgdmVj
dG9yZSBJRCAqLworCQkvKiBXcml0ZSB2ZWN0b3JlZCBJRCAqLwogCQl3cml0ZWIocHJpdi0+aHRf
dmVjX2Jhc2UgKyBpLCBwcml2LT5iYXNlICsgUENIX0lOVF9IVFZFQyhpKSk7CiAJCS8qIEhhcmRj
b2RlIHJvdXRlIHRvIEhUMCBMbyAqLwogCQl3cml0ZWIoMSwgcHJpdi0+YmFzZSArIFBDSF9JTlRf
Uk9VVEUoaSkpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2lycS1tYmlnZW4uYyBiL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtbWJpZ2VuLmMKaW5kZXggZmY3NjI3YjU3NzcyLi4yY2I0NWM2Yjg1
MDEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtbWJpZ2VuLmMKKysrIGIvZHJpdmVy
cy9pcnFjaGlwL2lycS1tYmlnZW4uYwpAQCAtMSw2ICsxLDYgQEAKIC8vIFNQRFgtTGljZW5zZS1J
ZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKIC8qCi0gKiBDb3B5cmlnaHQgKEMpIDIwMTUgSGlzaWxp
Y29uIExpbWl0ZWQsIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCisgKiBDb3B5cmlnaHQgKEMpIDIwMTUg
SGlTaWxpY29uIExpbWl0ZWQsIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCiAgKiBBdXRob3I6IEp1biBN
YSA8bWFqdW4yNThAaHVhd2VpLmNvbT4KICAqIEF1dGhvcjogWXVuIFd1IDx3dXl1bi53dUBodWF3
ZWkuY29tPgogICovCkBAIC0zOTAsNCArMzkwLDQgQEAgbW9kdWxlX3BsYXRmb3JtX2RyaXZlciht
YmlnZW5fcGxhdGZvcm1fZHJpdmVyKTsKIE1PRFVMRV9BVVRIT1IoIkp1biBNYSA8bWFqdW4yNThA
aHVhd2VpLmNvbT4iKTsKIE1PRFVMRV9BVVRIT1IoIll1biBXdSA8d3V5dW4ud3VAaHVhd2VpLmNv
bT4iKTsKIE1PRFVMRV9MSUNFTlNFKCJHUEwiKTsKLU1PRFVMRV9ERVNDUklQVElPTigiSGlzaWxp
Y29uIE1CSSBHZW5lcmF0b3IgZHJpdmVyIik7CitNT0RVTEVfREVTQ1JJUFRJT04oIkhpU2lsaWNv
biBNQkkgR2VuZXJhdG9yIGRyaXZlciIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2ly
cS1tZXNvbi1ncGlvLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLW1lc29uLWdwaW8uYwppbmRleCBi
YzdhZWJjYzk2ZTkuLmU1MDY3NmNlMmVjOCAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2ly
cS1tZXNvbi1ncGlvLmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1tZXNvbi1ncGlvLmMKQEAg
LTIyNyw3ICsyMjcsNyBAQCBtZXNvbl9ncGlvX2lycV9yZXF1ZXN0X2NoYW5uZWwoc3RydWN0IG1l
c29uX2dwaW9faXJxX2NvbnRyb2xsZXIgKmN0bCwKIAogCS8qCiAJICogR2V0IHRoZSBod2lycSBu
dW1iZXIgYXNzaWduZWQgdG8gdGhpcyBjaGFubmVsIHRocm91Z2gKLQkgKiBhIHBvaW50ZXIgdGhl
IGNoYW5uZWxfaXJxIHRhYmxlLiBUaGUgYWRkZWQgYmVuaWZpdCBvZiB0aGlzCisJICogYSBwb2lu
dGVyIHRoZSBjaGFubmVsX2lycSB0YWJsZS4gVGhlIGFkZGVkIGJlbmVmaXQgb2YgdGhpcwogCSAq
IG1ldGhvZCBpcyB0aGF0IHdlIGNhbiBhbHNvIHJldHJpZXZlIHRoZSBjaGFubmVsIGluZGV4IHdp
dGgKIAkgKiBpdCwgdXNpbmcgdGhlIHRhYmxlIGJhc2UuCiAJICovCmRpZmYgLS1naXQgYS9kcml2
ZXJzL2lycWNoaXAvaXJxLW1zdC1pbnRjLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLW1zdC1pbnRj
LmMKaW5kZXggMTQzNjU3YjBjZjI4Li5mNjEzM2FlMjgxNTUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
aXJxY2hpcC9pcnEtbXN0LWludGMuYworKysgYi9kcml2ZXJzL2lycWNoaXAvaXJxLW1zdC1pbnRj
LmMKQEAgLTEzLDE1ICsxMywyNyBAQAogI2luY2x1ZGUgPGxpbnV4L29mX2lycS5oPgogI2luY2x1
ZGUgPGxpbnV4L3NsYWIuaD4KICNpbmNsdWRlIDxsaW51eC9zcGlubG9jay5oPgorI2luY2x1ZGUg
PGxpbnV4L3N5c2NvcmVfb3BzLmg+CiAKLSNkZWZpbmUgSU5UQ19NQVNLCTB4MAotI2RlZmluZSBJ
TlRDX0VPSQkweDIwCisjZGVmaW5lIE1TVF9JTlRDX01BWF9JUlFTCTY0CisKKyNkZWZpbmUgSU5U
Q19NQVNLCQkweDAKKyNkZWZpbmUgSU5UQ19SRVZfUE9MQVJJVFkJMHgxMAorI2RlZmluZSBJTlRD
X0VPSQkJMHgyMAorCisjaWZkZWYgQ09ORklHX1BNX1NMRUVQCitzdGF0aWMgTElTVF9IRUFEKG1z
dF9pbnRjX2xpc3QpOworI2VuZGlmCiAKIHN0cnVjdCBtc3RfaW50Y19jaGlwX2RhdGEgewogCXJh
d19zcGlubG9ja190CWxvY2s7CiAJdW5zaWduZWQgaW50CWlycV9zdGFydCwgbnJfaXJxczsKIAl2
b2lkIF9faW9tZW0JKmJhc2U7CiAJYm9vbAkJbm9fZW9pOworI2lmZGVmIENPTkZJR19QTV9TTEVF
UAorCXN0cnVjdCBsaXN0X2hlYWQgZW50cnk7CisJdTE2IHNhdmVkX3BvbGFyaXR5X2NvbmZbRElW
X1JPVU5EX1VQKE1TVF9JTlRDX01BWF9JUlFTLCAxNildOworI2VuZGlmCiB9OwogCiBzdGF0aWMg
dm9pZCBtc3Rfc2V0X2lycShzdHJ1Y3QgaXJxX2RhdGEgKmQsIHUzMiBvZmZzZXQpCkBAIC03OCw2
ICs5MCwyNCBAQCBzdGF0aWMgdm9pZCBtc3RfaW50Y19lb2lfaXJxKHN0cnVjdCBpcnFfZGF0YSAq
ZCkKIAlpcnFfY2hpcF9lb2lfcGFyZW50KGQpOwogfQogCitzdGF0aWMgaW50IG1zdF9pcnFfY2hp
cF9zZXRfdHlwZShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEsIHVuc2lnbmVkIGludCB0eXBlKQorewor
CXN3aXRjaCAodHlwZSkgeworCWNhc2UgSVJRX1RZUEVfTEVWRUxfTE9XOgorCWNhc2UgSVJRX1RZ
UEVfRURHRV9GQUxMSU5HOgorCQltc3Rfc2V0X2lycShkYXRhLCBJTlRDX1JFVl9QT0xBUklUWSk7
CisJCWJyZWFrOworCWNhc2UgSVJRX1RZUEVfTEVWRUxfSElHSDoKKwljYXNlIElSUV9UWVBFX0VE
R0VfUklTSU5HOgorCQltc3RfY2xlYXJfaXJxKGRhdGEsIElOVENfUkVWX1BPTEFSSVRZKTsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJcmV0dXJuIGlycV9j
aGlwX3NldF90eXBlX3BhcmVudChkYXRhLCBJUlFfVFlQRV9MRVZFTF9ISUdIKTsKK30KKwogc3Rh
dGljIHN0cnVjdCBpcnFfY2hpcCBtc3RfaW50Y19jaGlwID0gewogCS5uYW1lCQkJPSAibXN0LWlu
dGMiLAogCS5pcnFfbWFzawkJPSBtc3RfaW50Y19tYXNrX2lycSwKQEAgLTg3LDEzICsxMTcsNjIg
QEAgc3RhdGljIHN0cnVjdCBpcnFfY2hpcCBtc3RfaW50Y19jaGlwID0gewogCS5pcnFfc2V0X2ly
cWNoaXBfc3RhdGUJPSBpcnFfY2hpcF9zZXRfcGFyZW50X3N0YXRlLAogCS5pcnFfc2V0X2FmZmlu
aXR5CT0gaXJxX2NoaXBfc2V0X2FmZmluaXR5X3BhcmVudCwKIAkuaXJxX3NldF92Y3B1X2FmZmlu
aXR5CT0gaXJxX2NoaXBfc2V0X3ZjcHVfYWZmaW5pdHlfcGFyZW50LAotCS5pcnFfc2V0X3R5cGUJ
CT0gaXJxX2NoaXBfc2V0X3R5cGVfcGFyZW50LAorCS5pcnFfc2V0X3R5cGUJCT0gbXN0X2lycV9j
aGlwX3NldF90eXBlLAogCS5pcnFfcmV0cmlnZ2VyCQk9IGlycV9jaGlwX3JldHJpZ2dlcl9oaWVy
YXJjaHksCiAJLmZsYWdzCQkJPSBJUlFDSElQX1NFVF9UWVBFX01BU0tFRCB8CiAJCQkJICBJUlFD
SElQX1NLSVBfU0VUX1dBS0UgfAogCQkJCSAgSVJRQ0hJUF9NQVNLX09OX1NVU1BFTkQsCiB9Owog
CisjaWZkZWYgQ09ORklHX1BNX1NMRUVQCitzdGF0aWMgdm9pZCBtc3RfaW50Y19wb2xhcml0eV9z
YXZlKHN0cnVjdCBtc3RfaW50Y19jaGlwX2RhdGEgKmNkKQoreworCWludCBpOworCXZvaWQgX19p
b21lbSAqYWRkciA9IGNkLT5iYXNlICsgSU5UQ19SRVZfUE9MQVJJVFk7CisKKwlmb3IgKGkgPSAw
OyBpIDwgRElWX1JPVU5EX1VQKGNkLT5ucl9pcnFzLCAxNik7IGkrKykKKwkJY2QtPnNhdmVkX3Bv
bGFyaXR5X2NvbmZbaV0gPSByZWFkd19yZWxheGVkKGFkZHIgKyBpICogNCk7Cit9CisKK3N0YXRp
YyB2b2lkIG1zdF9pbnRjX3BvbGFyaXR5X3Jlc3RvcmUoc3RydWN0IG1zdF9pbnRjX2NoaXBfZGF0
YSAqY2QpCit7CisJaW50IGk7CisJdm9pZCBfX2lvbWVtICphZGRyID0gY2QtPmJhc2UgKyBJTlRD
X1JFVl9QT0xBUklUWTsKKworCWZvciAoaSA9IDA7IGkgPCBESVZfUk9VTkRfVVAoY2QtPm5yX2ly
cXMsIDE2KTsgaSsrKQorCQl3cml0ZXdfcmVsYXhlZChjZC0+c2F2ZWRfcG9sYXJpdHlfY29uZltp
XSwgYWRkciArIGkgKiA0KTsKK30KKworc3RhdGljIHZvaWQgbXN0X2lycV9yZXN1bWUodm9pZCkK
K3sKKwlzdHJ1Y3QgbXN0X2ludGNfY2hpcF9kYXRhICpjZDsKKworCWxpc3RfZm9yX2VhY2hfZW50
cnkoY2QsICZtc3RfaW50Y19saXN0LCBlbnRyeSkKKwkJbXN0X2ludGNfcG9sYXJpdHlfcmVzdG9y
ZShjZCk7Cit9CisKK3N0YXRpYyBpbnQgbXN0X2lycV9zdXNwZW5kKHZvaWQpCit7CisJc3RydWN0
IG1zdF9pbnRjX2NoaXBfZGF0YSAqY2Q7CisKKwlsaXN0X2Zvcl9lYWNoX2VudHJ5KGNkLCAmbXN0
X2ludGNfbGlzdCwgZW50cnkpCisJCW1zdF9pbnRjX3BvbGFyaXR5X3NhdmUoY2QpOworCXJldHVy
biAwOworfQorCitzdGF0aWMgc3RydWN0IHN5c2NvcmVfb3BzIG1zdF9pcnFfc3lzY29yZV9vcHMg
PSB7CisJLnN1c3BlbmQJPSBtc3RfaXJxX3N1c3BlbmQsCisJLnJlc3VtZQkJPSBtc3RfaXJxX3Jl
c3VtZSwKK307CisKK3N0YXRpYyBpbnQgX19pbml0IG1zdF9pcnFfcG1faW5pdCh2b2lkKQorewor
CXJlZ2lzdGVyX3N5c2NvcmVfb3BzKCZtc3RfaXJxX3N5c2NvcmVfb3BzKTsKKwlyZXR1cm4gMDsK
K30KK2xhdGVfaW5pdGNhbGwobXN0X2lycV9wbV9pbml0KTsKKyNlbmRpZgorCiBzdGF0aWMgaW50
IG1zdF9pbnRjX2RvbWFpbl90cmFuc2xhdGUoc3RydWN0IGlycV9kb21haW4gKmQsCiAJCQkJICAg
ICBzdHJ1Y3QgaXJxX2Z3c3BlYyAqZndzcGVjLAogCQkJCSAgICAgdW5zaWduZWQgbG9uZyAqaHdp
cnEsCkBAIC0xNDUsNiArMjI0LDE1IEBAIHN0YXRpYyBpbnQgbXN0X2ludGNfZG9tYWluX2FsbG9j
KHN0cnVjdCBpcnFfZG9tYWluICpkb21haW4sIHVuc2lnbmVkIGludCB2aXJxLAogCXBhcmVudF9m
d3NwZWMgPSAqZndzcGVjOwogCXBhcmVudF9md3NwZWMuZndub2RlID0gZG9tYWluLT5wYXJlbnQt
PmZ3bm9kZTsKIAlwYXJlbnRfZndzcGVjLnBhcmFtWzFdID0gY2QtPmlycV9zdGFydCArIGh3aXJx
OworCisJLyoKKwkgKiBtc3QtaW50YyBsYXRjaCB0aGUgaW50ZXJydXB0IHJlcXVlc3QgaWYgaXQn
cyBlZGdlIHRyaWdnZXJlZCwKKwkgKiBzbyB0aGUgb3V0cHV0IHNpZ25hbCB0byBwYXJlbnQgR0lD
IGlzIGFsd2F5cyBsZXZlbCBzZW5zaXRpdmUuCisJICogQW5kIGlmIHRoZSBpcnEgc2lnbmFsIGlz
IGFjdGl2ZSBsb3csIGNvbmZpZ3VyZSBpdCB0byBhY3RpdmUgaGlnaAorCSAqIHRvIG1lZXQgR0lD
IFNQSSBzcGVjIGluIG1zdF9pcnFfY2hpcF9zZXRfdHlwZSB2aWEgUkVWX1BPTEFSSVRZIGJpdC4K
KwkgKi8KKwlwYXJlbnRfZndzcGVjLnBhcmFtWzJdID0gSVJRX1RZUEVfTEVWRUxfSElHSDsKKwog
CXJldHVybiBpcnFfZG9tYWluX2FsbG9jX2lycXNfcGFyZW50KGRvbWFpbiwgdmlycSwgbnJfaXJx
cywgJnBhcmVudF9md3NwZWMpOwogfQogCkBAIC0xOTMsNiArMjgxLDEwIEBAIHN0YXRpYyBpbnQg
X19pbml0IG1zdF9pbnRjX29mX2luaXQoc3RydWN0IGRldmljZV9ub2RlICpkbiwKIAkJcmV0dXJu
IC1FTk9NRU07CiAJfQogCisjaWZkZWYgQ09ORklHX1BNX1NMRUVQCisJSU5JVF9MSVNUX0hFQUQo
JmNkLT5lbnRyeSk7CisJbGlzdF9hZGRfdGFpbCgmY2QtPmVudHJ5LCAmbXN0X2ludGNfbGlzdCk7
CisjZW5kaWYKIAlyZXR1cm4gMDsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2ly
cS1tdGstY2lycS5jIGIvZHJpdmVycy9pcnFjaGlwL2lycS1tdGstY2lycS5jCmluZGV4IDY5YmE4
Y2UzYzE3OC4uOWJjYTA5MTgwNzhlIDEwMDY0NAotLS0gYS9kcml2ZXJzL2lycWNoaXAvaXJxLW10
ay1jaXJxLmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1tdGstY2lycS5jCkBAIC0yMTcsNyAr
MjE3LDcgQEAgc3RhdGljIHZvaWQgbXRrX2NpcnFfcmVzdW1lKHZvaWQpCiB7CiAJdTMyIHZhbHVl
OwogCi0JLyogZmx1c2ggcmVjb3JlZCBpbnRlcnJ1cHRzLCB3aWxsIHNlbmQgc2lnbmFscyB0byBw
YXJlbnQgY29udHJvbGxlciAqLworCS8qIGZsdXNoIHJlY29yZGVkIGludGVycnVwdHMsIHdpbGwg
c2VuZCBzaWduYWxzIHRvIHBhcmVudCBjb250cm9sbGVyICovCiAJdmFsdWUgPSByZWFkbF9yZWxh
eGVkKGNpcnFfZGF0YS0+YmFzZSArIENJUlFfQ09OVFJPTCk7CiAJd3JpdGVsX3JlbGF4ZWQodmFs
dWUgfCBDSVJRX0ZMVVNILCBjaXJxX2RhdGEtPmJhc2UgKyBDSVJRX0NPTlRST0wpOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2lycWNoaXAvaXJxLW14cy5jIGIvZHJpdmVycy9pcnFjaGlwL2lycS1t
eHMuYwppbmRleCBhNjcxOTM4ZmQ5N2YuLmQxZjU3NDBjZDU3NSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy9pcnFjaGlwL2lycS1teHMuYworKysgYi9kcml2ZXJzL2lycWNoaXAvaXJxLW14cy5jCkBAIC01
OCw3ICs1OCw3IEBAIHN0cnVjdCBpY29sbF9wcml2IHsKIHN0YXRpYyBzdHJ1Y3QgaWNvbGxfcHJp
diBpY29sbF9wcml2Owogc3RhdGljIHN0cnVjdCBpcnFfZG9tYWluICppY29sbF9kb21haW47CiAK
LS8qIGNhbGN1bGF0ZSBiaXQgb2Zmc2V0IGRlcGVuZGluZyBvbiBudW1iZXIgb2YgaW50dGVydXB0
IHBlciByZWdpc3RlciAqLworLyogY2FsY3VsYXRlIGJpdCBvZmZzZXQgZGVwZW5kaW5nIG9uIG51
bWJlciBvZiBpbnRlcnJ1cHQgcGVyIHJlZ2lzdGVyICovCiBzdGF0aWMgdTMyIGljb2xsX2ludHJf
Yml0c2hpZnQoc3RydWN0IGlycV9kYXRhICpkLCB1MzIgYml0KQogewogCS8qCkBAIC02OCw3ICs2
OCw3IEBAIHN0YXRpYyB1MzIgaWNvbGxfaW50cl9iaXRzaGlmdChzdHJ1Y3QgaXJxX2RhdGEgKmQs
IHUzMiBiaXQpCiAJcmV0dXJuIGJpdCA8PCAoKGQtPmh3aXJxICYgMykgPDwgMyk7CiB9CiAKLS8q
IGNhbGN1bGF0ZSBtZW0gb2Zmc2V0IGRlcGVuZGluZyBvbiBudW1iZXIgb2YgaW50dGVydXB0IHBl
ciByZWdpc3RlciAqLworLyogY2FsY3VsYXRlIG1lbSBvZmZzZXQgZGVwZW5kaW5nIG9uIG51bWJl
ciBvZiBpbnRlcnJ1cHQgcGVyIHJlZ2lzdGVyICovCiBzdGF0aWMgdm9pZCBfX2lvbWVtICppY29s
bF9pbnRyX3JlZyhzdHJ1Y3QgaXJxX2RhdGEgKmQpCiB7CiAJLyogb2Zmc2V0ID0gaHdpcnEgLyBp
bnRyX3Blcl9yZWcgKiAweDEwICovCmRpZmYgLS1naXQgYS9kcml2ZXJzL2lycWNoaXAvaXJxLXNp
Zml2ZS1wbGljLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLXNpZml2ZS1wbGljLmMKaW5kZXggNmY0
MzJkMmE1Y2ViLi45N2Q0ZDA0YjBhODAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaXJxY2hpcC9pcnEt
c2lmaXZlLXBsaWMuYworKysgYi9kcml2ZXJzL2lycWNoaXAvaXJxLXNpZml2ZS1wbGljLmMKQEAg
LTc3LDggKzc3LDggQEAgc3RydWN0IHBsaWNfaGFuZGxlciB7CiAJdm9pZCBfX2lvbWVtCQkqZW5h
YmxlX2Jhc2U7CiAJc3RydWN0IHBsaWNfcHJpdgkqcHJpdjsKIH07Ci1zdGF0aWMgaW50IHBsaWNf
cGFyZW50X2lycTsKLXN0YXRpYyBib29sIHBsaWNfY3B1aHBfc2V0dXBfZG9uZTsKK3N0YXRpYyBp
bnQgcGxpY19wYXJlbnRfaXJxIF9fcm9fYWZ0ZXJfaW5pdDsKK3N0YXRpYyBib29sIHBsaWNfY3B1
aHBfc2V0dXBfZG9uZSBfX3JvX2FmdGVyX2luaXQ7CiBzdGF0aWMgREVGSU5FX1BFUl9DUFUoc3Ry
dWN0IHBsaWNfaGFuZGxlciwgcGxpY19oYW5kbGVycyk7CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBw
bGljX3RvZ2dsZShzdHJ1Y3QgcGxpY19oYW5kbGVyICpoYW5kbGVyLApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9pcnFjaGlwL2lycS1zdG0zMi1leHRpLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLXN0bTMy
LWV4dGkuYwppbmRleCA4NjYyZDdiN2IyNjIuLmI5ZGI5MGM0YWE1NiAxMDA2NDQKLS0tIGEvZHJp
dmVycy9pcnFjaGlwL2lycS1zdG0zMi1leHRpLmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS1z
dG0zMi1leHRpLmMKQEAgLTE5Myw3ICsxOTMsMTQgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBzdG0z
Ml9kZXNjX2lycSBzdG0zMm1wMV9kZXNjX2lycVtdID0gewogCXsgLmV4dGkgPSAyMywgLmlycV9w
YXJlbnQgPSA3MiwgLmNoaXAgPSAmc3RtMzJfZXh0aV9oX2NoaXBfZGlyZWN0IH0sCiAJeyAuZXh0
aSA9IDI0LCAuaXJxX3BhcmVudCA9IDk1LCAuY2hpcCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJl
Y3QgfSwKIAl7IC5leHRpID0gMjUsIC5pcnFfcGFyZW50ID0gMTA3LCAuY2hpcCA9ICZzdG0zMl9l
eHRpX2hfY2hpcF9kaXJlY3QgfSwKKwl7IC5leHRpID0gMjYsIC5pcnFfcGFyZW50ID0gMzcsIC5j
aGlwID0gJnN0bTMyX2V4dGlfaF9jaGlwX2RpcmVjdCB9LAorCXsgLmV4dGkgPSAyNywgLmlycV9w
YXJlbnQgPSAzOCwgLmNoaXAgPSAmc3RtMzJfZXh0aV9oX2NoaXBfZGlyZWN0IH0sCisJeyAuZXh0
aSA9IDI4LCAuaXJxX3BhcmVudCA9IDM5LCAuY2hpcCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJl
Y3QgfSwKKwl7IC5leHRpID0gMjksIC5pcnFfcGFyZW50ID0gNzEsIC5jaGlwID0gJnN0bTMyX2V4
dGlfaF9jaGlwX2RpcmVjdCB9LAogCXsgLmV4dGkgPSAzMCwgLmlycV9wYXJlbnQgPSA1MiwgLmNo
aXAgPSAmc3RtMzJfZXh0aV9oX2NoaXBfZGlyZWN0IH0sCisJeyAuZXh0aSA9IDMxLCAuaXJxX3Bh
cmVudCA9IDUzLCAuY2hpcCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJlY3QgfSwKKwl7IC5leHRp
ID0gMzIsIC5pcnFfcGFyZW50ID0gODIsIC5jaGlwID0gJnN0bTMyX2V4dGlfaF9jaGlwX2RpcmVj
dCB9LAorCXsgLmV4dGkgPSAzMywgLmlycV9wYXJlbnQgPSA4MywgLmNoaXAgPSAmc3RtMzJfZXh0
aV9oX2NoaXBfZGlyZWN0IH0sCiAJeyAuZXh0aSA9IDQ3LCAuaXJxX3BhcmVudCA9IDkzLCAuY2hp
cCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJlY3QgfSwKIAl7IC5leHRpID0gNDgsIC5pcnFfcGFy
ZW50ID0gMTM4LCAuY2hpcCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJlY3QgfSwKIAl7IC5leHRp
ID0gNTAsIC5pcnFfcGFyZW50ID0gMTM5LCAuY2hpcCA9ICZzdG0zMl9leHRpX2hfY2hpcF9kaXJl
Y3QgfSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtc3VuNGkuYyBiL2RyaXZlcnMv
aXJxY2hpcC9pcnEtc3VuNGkuYwppbmRleCBmYjc4ZDY2MjM1NTYuLjllYTk0NDU2YjE3OCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2lycS1zdW40aS5jCisrKyBiL2RyaXZlcnMvaXJxY2hp
cC9pcnEtc3VuNGkuYwpAQCAtMTg5LDcgKzE4OSw3IEBAIHN0YXRpYyB2b2lkIF9fZXhjZXB0aW9u
X2lycV9lbnRyeSBzdW40aV9oYW5kbGVfaXJxKHN0cnVjdCBwdF9yZWdzICpyZWdzKQogCSAqIDMp
IHNwdXJpb3VzIGlycQogCSAqIFNvIGlmIHdlIGltbWVkaWF0ZWx5IGdldCBhIHJlYWRpbmcgb2Yg
MCwgY2hlY2sgdGhlIGlycS1wZW5kaW5nIHJlZwogCSAqIHRvIGRpZmZlcmVudGlhdGUgYmV0d2Vl
biAyIGFuZCAzLiBXZSBvbmx5IGRvIHRoaXMgb25jZSB0byBhdm9pZAotCSAqIHRoZSBleHRyYSBj
aGVjayBpbiB0aGUgY29tbW9uIGNhc2Ugb2YgMSBoYXBlbmluZyBhZnRlciBoYXZpbmcKKwkgKiB0
aGUgZXh0cmEgY2hlY2sgaW4gdGhlIGNvbW1vbiBjYXNlIG9mIDEgaGFwcGVuaW5nIGFmdGVyIGhh
dmluZwogCSAqIHJlYWQgdGhlIHZlY3Rvci1yZWcgb25jZS4KIAkgKi8KIAlod2lycSA9IHJlYWRs
KGlycV9pY19kYXRhLT5pcnFfYmFzZSArIFNVTjRJX0lSUV9WRUNUT1JfUkVHKSA+PiAyOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2lycS10YjEweC5jIGIvZHJpdmVycy9pcnFjaGlwL2ly
cS10YjEweC5jCmluZGV4IDllNDU2NDk3YzFjNC4uOWE2M2IwMmI4MTc2IDEwMDY0NAotLS0gYS9k
cml2ZXJzL2lycWNoaXAvaXJxLXRiMTB4LmMKKysrIGIvZHJpdmVycy9pcnFjaGlwL2lycS10YjEw
eC5jCkBAIC02MCw2ICs2MCw3IEBAIHN0YXRpYyBpbnQgdGIxMHhfaXJxX3NldF90eXBlKHN0cnVj
dCBpcnFfZGF0YSAqZGF0YSwgdW5zaWduZWQgaW50IGZsb3dfdHlwZSkKIAkJYnJlYWs7CiAJY2Fz
ZSBJUlFfVFlQRV9OT05FOgogCQlmbG93X3R5cGUgPSBJUlFfVFlQRV9MRVZFTF9MT1c7CisJCWZh
bGx0aHJvdWdoOwogCWNhc2UgSVJRX1RZUEVfTEVWRUxfTE9XOgogCQltb2QgXj0gaW07CiAJCXBv
bCBePSBpbTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hpcC9pcnEtdGktc2NpLWludGEuYyBi
L2RyaXZlcnMvaXJxY2hpcC9pcnEtdGktc2NpLWludGEuYwppbmRleCA1MzJkMGFlMTcyZDkuLmNh
MWY1OTNmNGQxMyAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFjaGlwL2lycS10aS1zY2ktaW50YS5j
CisrKyBiL2RyaXZlcnMvaXJxY2hpcC9pcnEtdGktc2NpLWludGEuYwpAQCAtNzgsNyArNzgsNyBA
QCBzdHJ1Y3QgdGlfc2NpX2ludGFfdmludF9kZXNjIHsKICAqIHN0cnVjdCB0aV9zY2lfaW50YV9p
cnFfZG9tYWluIC0gU3RydWN0dXJlIHJlcHJlc2VudGluZyBhIFRJU0NJIGJhc2VkCiAgKgkJCQkg
ICBJbnRlcnJ1cHQgQWdncmVnYXRvciBJUlEgZG9tYWluLgogICogQHNjaToJCVBvaW50ZXIgdG8g
VElTQ0kgaGFuZGxlCi0gKiBAdmludDoJCVRJU0NJIHJlc291cmNlIHBvaW50ZXIgcmVwcmVzZW50
aW5nIElBIGluZXJydXB0cy4KKyAqIEB2aW50OgkJVElTQ0kgcmVzb3VyY2UgcG9pbnRlciByZXBy
ZXNlbnRpbmcgSUEgaW50ZXJydXB0cy4KICAqIEBnbG9iYWxfZXZlbnQ6CVRJU0NJIHJlc291cmNl
IHBvaW50ZXIgcmVwcmVzZW50aW5nIGdsb2JhbCBldmVudHMuCiAgKiBAdmludF9saXN0OgkJTGlz
dCBvZiB0aGUgdmludHMgYWN0aXZlIGluIHRoZSBzeXN0ZW0KICAqIEB2aW50X211dGV4OgkJTXV0
ZXggdG8gcHJvdGVjdCB2aW50X2xpc3QKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hpcC9pcnEt
dmljLmMgYi9kcml2ZXJzL2lycWNoaXAvaXJxLXZpYy5jCmluZGV4IGU0NjAzNjM3NDIyNy4uNjJm
M2QyOWY5MDQyIDEwMDY0NAotLS0gYS9kcml2ZXJzL2lycWNoaXAvaXJxLXZpYy5jCisrKyBiL2Ry
aXZlcnMvaXJxY2hpcC9pcnEtdmljLmMKQEAgLTE2Myw3ICsxNjMsNyBAQCBzdGF0aWMgc3RydWN0
IHN5c2NvcmVfb3BzIHZpY19zeXNjb3JlX29wcyA9IHsKIH07CiAKIC8qKgotICogdmljX3BtX2lu
aXQgLSBpbml0aWNhbGwgdG8gcmVnaXN0ZXIgVklDIHBtCisgKiB2aWNfcG1faW5pdCAtIGluaXRj
YWxsIHRvIHJlZ2lzdGVyIFZJQyBwbQogICoKICAqIFRoaXMgaXMgY2FsbGVkIHZpYSBsYXRlX2lu
aXRjYWxsKCkgdG8gcmVnaXN0ZXIKICAqIHRoZSByZXNvdXJjZXMgZm9yIHRoZSBWSUNzIGR1ZSB0
byB0aGUgZWFybHkKQEAgLTM5Nyw3ICszOTcsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgdmljX2Ns
ZWFyX2ludGVycnVwdHModm9pZCBfX2lvbWVtICpiYXNlKQogLyoKICAqIFRoZSBQTDE5MCBjZWxs
IGZyb20gQVJNIGhhcyBiZWVuIG1vZGlmaWVkIGJ5IFNUIHRvIGhhbmRsZSA2NCBpbnRlcnJ1cHRz
LgogICogVGhlIG9yaWdpbmFsIGNlbGwgaGFzIDMyIGludGVycnVwdHMsIHdoaWxlIHRoZSBtb2Rp
ZmllZCBvbmUgaGFzIDY0LAotICogcmVwbG9jYXRpbmcgdHdvIGJsb2NrcyAweDAwLi4weDFmIGlu
IDB4MjAuLjB4M2YuIEluIHRoYXQgY2FzZQorICogcmVwbGljYXRpbmcgdHdvIGJsb2NrcyAweDAw
Li4weDFmIGluIDB4MjAuLjB4M2YuIEluIHRoYXQgY2FzZQogICogdGhlIHByb2JlIGZ1bmN0aW9u
IGlzIGNhbGxlZCB0d2ljZSwgd2l0aCBiYXNlIHNldCB0byBvZmZzZXQgMDAwCiAgKiAgYW5kIDAy
MCB3aXRoaW4gdGhlIHBhZ2UuIFdlIGNhbGwgdGhpcyAic2Vjb25kIGJsb2NrIi4KICAqLwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9pcnFjaGlwL2lycS13cGNtNDUwLWFpYy5jIGIvZHJpdmVycy9pcnFj
aGlwL2lycS13cGNtNDUwLWFpYy5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAw
MDAwMC4uZjNhYzM5MmQ1YmM4Ci0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy9pcnFjaGlwL2ly
cS13cGNtNDUwLWFpYy5jCkBAIC0wLDAgKzEsMTYxIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRp
ZmllcjogR1BMLTIuMC1vbmx5CisvLyBDb3B5cmlnaHQgMjAyMSBKb25hdGhhbiBOZXVzY2jDpGZl
cgorCisjaW5jbHVkZSA8bGludXgvaXJxY2hpcC5oPgorI2luY2x1ZGUgPGxpbnV4L29mX2FkZHJl
c3MuaD4KKyNpbmNsdWRlIDxsaW51eC9vZl9pcnEuaD4KKyNpbmNsdWRlIDxsaW51eC9wcmludGsu
aD4KKworI2luY2x1ZGUgPGFzbS9leGNlcHRpb24uaD4KKworI2RlZmluZSBBSUNfU0NSKHgpCSgo
eCkqNCkJLyogU291cmNlIGNvbnRyb2wgcmVnaXN0ZXJzICovCisjZGVmaW5lIEFJQ19HRU4JCTB4
ODQJLyogSW50ZXJydXB0IGdyb3VwIGVuYWJsZSBjb250cm9sIHJlZ2lzdGVyICovCisjZGVmaW5l
IEFJQ19HUlNSCTB4ODgJLyogSW50ZXJydXB0IGdyb3VwIHJhdyBzdGF0dXMgcmVnaXN0ZXIgKi8K
KyNkZWZpbmUgQUlDX0lSU1IJMHgxMDAJLyogSW50ZXJydXB0IHJhdyBzdGF0dXMgcmVnaXN0ZXIg
Ki8KKyNkZWZpbmUgQUlDX0lBU1IJMHgxMDQJLyogSW50ZXJydXB0IGFjdGl2ZSBzdGF0dXMgcmVn
aXN0ZXIgKi8KKyNkZWZpbmUgQUlDX0lTUgkJMHgxMDgJLyogSW50ZXJydXB0IHN0YXR1cyByZWdp
c3RlciAqLworI2RlZmluZSBBSUNfSVBFUgkweDEwYwkvKiBJbnRlcnJ1cHQgcHJpb3JpdHkgZW5j
b2RpbmcgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX0lTTlIJMHgxMTAJLyogSW50ZXJydXB0IHNv
dXJjZSBudW1iZXIgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX0lNUgkJMHgxMTQJLyogSW50ZXJy
dXB0IG1hc2sgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX09JU1IJMHgxMTgJLyogT3V0cHV0IGlu
dGVycnVwdCBzdGF0dXMgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX01FQ1IJMHgxMjAJLyogTWFz
ayBlbmFibGUgY29tbWFuZCByZWdpc3RlciAqLworI2RlZmluZSBBSUNfTURDUgkweDEyNAkvKiBN
YXNrIGRpc2FibGUgY29tbWFuZCByZWdpc3RlciAqLworI2RlZmluZSBBSUNfU1NDUgkweDEyOAkv
KiBTb3VyY2Ugc2V0IGNvbW1hbmQgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX1NDQ1IJMHgxMmMJ
LyogU291cmNlIGNsZWFyIGNvbW1hbmQgcmVnaXN0ZXIgKi8KKyNkZWZpbmUgQUlDX0VPU0NSCTB4
MTMwCS8qIEVuZCBvZiBzZXJ2aWNlIGNvbW1hbmQgcmVnaXN0ZXIgKi8KKworI2RlZmluZSBBSUNf
U0NSX1NSQ1RZUEVfTE9XX0xFVkVMCSgwIDw8IDYpCisjZGVmaW5lIEFJQ19TQ1JfU1JDVFlQRV9I
SUdIX0xFVkVMCSgxIDw8IDYpCisjZGVmaW5lIEFJQ19TQ1JfU1JDVFlQRV9ORUdfRURHRQkoMiA8
PCA2KQorI2RlZmluZSBBSUNfU0NSX1NSQ1RZUEVfUE9TX0VER0UJKDMgPDwgNikKKyNkZWZpbmUg
QUlDX1NDUl9QUklPUklUWSh4KQkJKHgpCisjZGVmaW5lIEFJQ19TQ1JfUFJJT1JJVFlfTUFTSwkJ
MHg3CisKKyNkZWZpbmUgQUlDX05VTV9JUlFTCQkzMgorCitzdHJ1Y3Qgd3BjbTQ1MF9haWMgewor
CXZvaWQgX19pb21lbSAqcmVnczsKKwlzdHJ1Y3QgaXJxX2RvbWFpbiAqZG9tYWluOworfTsKKwor
c3RhdGljIHN0cnVjdCB3cGNtNDUwX2FpYyAqYWljOworCitzdGF0aWMgdm9pZCB3cGNtNDUwX2Fp
Y19pbml0X2h3KHZvaWQpCit7CisJaW50IGk7CisKKwkvKiBEaXNhYmxlIChtYXNrKSBhbGwgaW50
ZXJydXB0cyAqLworCXdyaXRlbCgweGZmZmZmZmZmLCBhaWMtPnJlZ3MgKyBBSUNfTURDUik7CisK
KwkvKgorCSAqIE1ha2Ugc3VyZSB0aGUgaW50ZXJydXB0IGNvbnRyb2xsZXIgaXMgcmVhZHkgdG8g
c2VydmUgbmV3IGludGVycnVwdHMuCisJICogUmVhZGluZyBmcm9tIElQRVIgaW5kaWNhdGVzIHRo
YXQgdGhlIG5JUlEgc2lnbmFsIG1heSBiZSBkZWFzc2VydGVkLAorCSAqIGFuZCB3cml0aW5nIHRv
IEVPU0NSIGluZGljYXRlcyB0aGF0IGludGVycnVwdCBoYW5kbGluZyBoYXMgZmluaXNoZWQuCisJ
ICovCisJcmVhZGwoYWljLT5yZWdzICsgQUlDX0lQRVIpOworCXdyaXRlbCgwLCBhaWMtPnJlZ3Mg
KyBBSUNfRU9TQ1IpOworCisJLyogSW5pdGlhbGl6ZSB0cmlnZ2VyIG1vZGUgYW5kIHByaW9yaXR5
IG9mIGVhY2ggaW50ZXJydXB0IHNvdXJjZSAqLworCWZvciAoaSA9IDA7IGkgPCBBSUNfTlVNX0lS
UVM7IGkrKykKKwkJd3JpdGVsKEFJQ19TQ1JfU1JDVFlQRV9ISUdIX0xFVkVMIHwgQUlDX1NDUl9Q
UklPUklUWSg3KSwKKwkJICAgICAgIGFpYy0+cmVncyArIEFJQ19TQ1IoaSkpOworfQorCitzdGF0
aWMgdm9pZCBfX2V4Y2VwdGlvbl9pcnFfZW50cnkgd3BjbTQ1MF9haWNfaGFuZGxlX2lycShzdHJ1
Y3QgcHRfcmVncyAqcmVncykKK3sKKwlpbnQgaHdpcnE7CisKKwkvKiBEZXRlcm1pbmUgdGhlIGlu
dGVycnVwdCBzb3VyY2UgKi8KKwkvKiBSZWFkIElQRVIgdG8gc2lnbmFsIHRoYXQgbklSUSBjYW4g
YmUgZGUtYXNzZXJ0ZWQgKi8KKwlod2lycSA9IHJlYWRsKGFpYy0+cmVncyArIEFJQ19JUEVSKSAv
IDQ7CisKKwloYW5kbGVfZG9tYWluX2lycShhaWMtPmRvbWFpbiwgaHdpcnEsIHJlZ3MpOworfQor
CitzdGF0aWMgdm9pZCB3cGNtNDUwX2FpY19lb2koc3RydWN0IGlycV9kYXRhICpkKQoreworCS8q
IFNpZ25hbCBlbmQtb2Ytc2VydmljZSAqLworCXdyaXRlbCgwLCBhaWMtPnJlZ3MgKyBBSUNfRU9T
Q1IpOworfQorCitzdGF0aWMgdm9pZCB3cGNtNDUwX2FpY19tYXNrKHN0cnVjdCBpcnFfZGF0YSAq
ZCkKK3sKKwl1bnNpZ25lZCBpbnQgbWFzayA9IEJJVChkLT5od2lycSk7CisKKwkvKiBEaXNhYmxl
IChtYXNrKSB0aGUgaW50ZXJydXB0ICovCisJd3JpdGVsKG1hc2ssIGFpYy0+cmVncyArIEFJQ19N
RENSKTsKK30KKworc3RhdGljIHZvaWQgd3BjbTQ1MF9haWNfdW5tYXNrKHN0cnVjdCBpcnFfZGF0
YSAqZCkKK3sKKwl1bnNpZ25lZCBpbnQgbWFzayA9IEJJVChkLT5od2lycSk7CisKKwkvKiBFbmFi
bGUgKHVubWFzaykgdGhlIGludGVycnVwdCAqLworCXdyaXRlbChtYXNrLCBhaWMtPnJlZ3MgKyBB
SUNfTUVDUik7Cit9CisKK3N0YXRpYyBpbnQgd3BjbTQ1MF9haWNfc2V0X3R5cGUoc3RydWN0IGly
cV9kYXRhICpkLCB1bnNpZ25lZCBpbnQgZmxvd190eXBlKQoreworCS8qCisJICogVGhlIGhhcmR3
YXJlIHN1cHBvcnRzIGhpZ2gvbG93IGxldmVsLCBhcyB3ZWxsIGFzIHJpc2luZy9mYWxsaW5nIGVk
Z2UKKwkgKiBtb2RlcywgYW5kIHRoZSBEVCBiaW5kaW5nIGFjY29tbW9kYXRlcyBmb3IgdGhhdCwg
YnV0IGFzIGxvbmcgYXMKKwkgKiBvdGhlciBtb2RlcyB0aGFuIGhpZ2ggbGV2ZWwgbW9kZSBhcmUg
bm90IHVzZWQgYW5kIGNhbid0IGJlIHRlc3RlZCwKKwkgKiB0aGV5IGFyZSByZWplY3RlZCBpbiB0
aGlzIGRyaXZlci4KKwkgKi8KKwlpZiAoKGZsb3dfdHlwZSAmIElSUV9UWVBFX1NFTlNFX01BU0sp
ICE9IElSUV9UWVBFX0xFVkVMX0hJR0gpCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIDA7
Cit9CisKK3N0YXRpYyBzdHJ1Y3QgaXJxX2NoaXAgd3BjbTQ1MF9haWNfY2hpcCA9IHsKKwkubmFt
ZSA9ICJ3cGNtNDUwLWFpYyIsCisJLmlycV9lb2kgPSB3cGNtNDUwX2FpY19lb2ksCisJLmlycV9t
YXNrID0gd3BjbTQ1MF9haWNfbWFzaywKKwkuaXJxX3VubWFzayA9IHdwY200NTBfYWljX3VubWFz
aywKKwkuaXJxX3NldF90eXBlID0gd3BjbTQ1MF9haWNfc2V0X3R5cGUsCit9OworCitzdGF0aWMg
aW50IHdwY200NTBfYWljX21hcChzdHJ1Y3QgaXJxX2RvbWFpbiAqZCwgdW5zaWduZWQgaW50IGly
cSwgaXJxX2h3X251bWJlcl90IGh3aXJxKQoreworCWlmIChod2lycSA+PSBBSUNfTlVNX0lSUVMp
CisJCXJldHVybiAtRVBFUk07CisKKwlpcnFfc2V0X2NoaXBfYW5kX2hhbmRsZXIoaXJxLCAmd3Bj
bTQ1MF9haWNfY2hpcCwgaGFuZGxlX2Zhc3Rlb2lfaXJxKTsKKwlpcnFfc2V0X2NoaXBfZGF0YShp
cnEsIGFpYyk7CisJaXJxX3NldF9wcm9iZShpcnEpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRp
YyBjb25zdCBzdHJ1Y3QgaXJxX2RvbWFpbl9vcHMgd3BjbTQ1MF9haWNfb3BzID0geworCS5tYXAg
PSB3cGNtNDUwX2FpY19tYXAsCisJLnhsYXRlID0gaXJxX2RvbWFpbl94bGF0ZV90d29jZWxsLAor
fTsKKworc3RhdGljIGludCBfX2luaXQgd3BjbTQ1MF9haWNfb2ZfaW5pdChzdHJ1Y3QgZGV2aWNl
X25vZGUgKm5vZGUsCisJCQkJICAgICAgc3RydWN0IGRldmljZV9ub2RlICpwYXJlbnQpCit7CisJ
aWYgKHBhcmVudCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlhaWMgPSBremFsbG9jKHNpemVvZigq
YWljKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFhaWMpCisJCXJldHVybiAtRU5PTUVNOworCisJYWlj
LT5yZWdzID0gb2ZfaW9tYXAobm9kZSwgMCk7CisJaWYgKCFhaWMtPnJlZ3MpIHsKKwkJcHJfZXJy
KCJGYWlsZWQgdG8gbWFwIFdQQ000NTAgQUlDIHJlZ2lzdGVyc1xuIik7CisJCXJldHVybiAtRU5P
TUVNOworCX0KKworCXdwY200NTBfYWljX2luaXRfaHcoKTsKKworCXNldF9oYW5kbGVfaXJxKHdw
Y200NTBfYWljX2hhbmRsZV9pcnEpOworCisJYWljLT5kb21haW4gPSBpcnFfZG9tYWluX2FkZF9s
aW5lYXIobm9kZSwgQUlDX05VTV9JUlFTLCAmd3BjbTQ1MF9haWNfb3BzLCBhaWMpOworCisJcmV0
dXJuIDA7Cit9CisKK0lSUUNISVBfREVDTEFSRSh3cGNtNDUwX2FpYywgIm51dm90b24sd3BjbTQ1
MC1haWMiLCB3cGNtNDUwX2FpY19vZl9pbml0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvaXJxY2hp
cC9pcnEteGlsaW54LWludGMuYyBiL2RyaXZlcnMvaXJxY2hpcC9pcnEteGlsaW54LWludGMuYwpp
bmRleCAxZDNkMjczMzA5YmQuLjhjZDFiZmM3MzA1NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9pcnFj
aGlwL2lycS14aWxpbngtaW50Yy5jCisrKyBiL2RyaXZlcnMvaXJxY2hpcC9pcnEteGlsaW54LWlu
dGMuYwpAQCAtMjEwLDcgKzIxMCw3IEBAIHN0YXRpYyBpbnQgX19pbml0IHhpbGlueF9pbnRjX29m
X2luaXQoc3RydWN0IGRldmljZV9ub2RlICppbnRjLAogCiAJLyoKIAkgKiBEaXNhYmxlIGFsbCBl
eHRlcm5hbCBpbnRlcnJ1cHRzIHVudGlsIHRoZXkgYXJlCi0JICogZXhwbGljaXR5IHJlcXVlc3Rl
ZC4KKwkgKiBleHBsaWNpdGx5IHJlcXVlc3RlZC4KIAkgKi8KIAl4aW50Y193cml0ZShpcnFjLCBJ
RVIsIDApOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9kbGluay9zdW5kYW5j
ZS5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvZGxpbmsvc3VuZGFuY2UuYwppbmRleCBlM2E4ODU4
OTE1YjMuLmRmMGVhYjQ3OWQ1MSAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvZGxp
bmsvc3VuZGFuY2UuYworKysgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9kbGluay9zdW5kYW5jZS5j
CkBAIC05NjMsNyArOTYzLDcgQEAgc3RhdGljIHZvaWQgdHhfdGltZW91dChzdHJ1Y3QgbmV0X2Rl
dmljZSAqZGV2LCB1bnNpZ25lZCBpbnQgdHhxdWV1ZSkKIAl1bnNpZ25lZCBsb25nIGZsYWc7CiAK
IAluZXRpZl9zdG9wX3F1ZXVlKGRldik7Ci0JdGFza2xldF9kaXNhYmxlKCZucC0+dHhfdGFza2xl
dCk7CisJdGFza2xldF9kaXNhYmxlX2luX2F0b21pYygmbnAtPnR4X3Rhc2tsZXQpOwogCWlvd3Jp
dGUxNigwLCBpb2FkZHIgKyBJbnRyRW5hYmxlKTsKIAlwcmludGsoS0VSTl9XQVJOSU5HICIlczog
VHJhbnNtaXQgdGltZWQgb3V0LCBUeFN0YXR1cyAlMi4yeCAiCiAJCSAgICJUeEZyYW1lSWQgJTIu
MngsIgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvam1lLmMgYi9kcml2ZXJzL25l
dC9ldGhlcm5ldC9qbWUuYwppbmRleCBlOWVmZTA3NGVkYzEuLmYxYjkyODRlMGJlYSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvam1lLmMKKysrIGIvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvam1lLmMKQEAgLTEyNjUsOSArMTI2NSw5IEBAIGptZV9zdG9wX3NodXRkb3duX3RpbWVyKHN0
cnVjdCBqbWVfYWRhcHRlciAqam1lKQogCWp3cml0ZTMyZihqbWUsIEpNRV9BUE1DLCBhcG1jKTsK
IH0KIAotc3RhdGljIHZvaWQgam1lX2xpbmtfY2hhbmdlX3Rhc2tsZXQoc3RydWN0IHRhc2tsZXRf
c3RydWN0ICp0KQorc3RhdGljIHZvaWQgam1lX2xpbmtfY2hhbmdlX3dvcmsoc3RydWN0IHdvcmtf
c3RydWN0ICp3b3JrKQogewotCXN0cnVjdCBqbWVfYWRhcHRlciAqam1lID0gZnJvbV90YXNrbGV0
KGptZSwgdCwgbGlua2NoX3Rhc2spOworCXN0cnVjdCBqbWVfYWRhcHRlciAqam1lID0gY29udGFp
bmVyX29mKHdvcmssIHN0cnVjdCBqbWVfYWRhcHRlciwgbGlua2NoX3Rhc2spOwogCXN0cnVjdCBu
ZXRfZGV2aWNlICpuZXRkZXYgPSBqbWUtPmRldjsKIAlpbnQgcmM7CiAKQEAgLTE1MTAsNyArMTUx
MCw3IEBAIGptZV9pbnRyX21zaShzdHJ1Y3Qgam1lX2FkYXB0ZXIgKmptZSwgdTMyIGludHJzdGF0
KQogCQkgKiBhbGwgb3RoZXIgZXZlbnRzIGFyZSBpZ25vcmVkCiAJCSAqLwogCQlqd3JpdGUzMihq
bWUsIEpNRV9JRVZFLCBpbnRyc3RhdCk7Ci0JCXRhc2tsZXRfc2NoZWR1bGUoJmptZS0+bGlua2No
X3Rhc2spOworCQlzY2hlZHVsZV93b3JrKCZqbWUtPmxpbmtjaF90YXNrKTsKIAkJZ290byBvdXRf
cmVlbmFibGU7CiAJfQogCkBAIC0xODMyLDcgKzE4MzIsNiBAQCBqbWVfb3BlbihzdHJ1Y3QgbmV0
X2RldmljZSAqbmV0ZGV2KQogCWptZV9jbGVhcl9wbV9kaXNhYmxlX3dvbChqbWUpOwogCUpNRV9O
QVBJX0VOQUJMRShqbWUpOwogCi0JdGFza2xldF9zZXR1cCgmam1lLT5saW5rY2hfdGFzaywgam1l
X2xpbmtfY2hhbmdlX3Rhc2tsZXQpOwogCXRhc2tsZXRfc2V0dXAoJmptZS0+dHhjbGVhbl90YXNr
LCBqbWVfdHhfY2xlYW5fdGFza2xldCk7CiAJdGFza2xldF9zZXR1cCgmam1lLT5yeGNsZWFuX3Rh
c2ssIGptZV9yeF9jbGVhbl90YXNrbGV0KTsKIAl0YXNrbGV0X3NldHVwKCZqbWUtPnJ4ZW1wdHlf
dGFzaywgam1lX3J4X2VtcHR5X3Rhc2tsZXQpOwpAQCAtMTkyMCw3ICsxOTE5LDcgQEAgam1lX2Ns
b3NlKHN0cnVjdCBuZXRfZGV2aWNlICpuZXRkZXYpCiAKIAlKTUVfTkFQSV9ESVNBQkxFKGptZSk7
CiAKLQl0YXNrbGV0X2tpbGwoJmptZS0+bGlua2NoX3Rhc2spOworCWNhbmNlbF93b3JrX3N5bmMo
JmptZS0+bGlua2NoX3Rhc2spOwogCXRhc2tsZXRfa2lsbCgmam1lLT50eGNsZWFuX3Rhc2spOwog
CXRhc2tsZXRfa2lsbCgmam1lLT5yeGNsZWFuX3Rhc2spOwogCXRhc2tsZXRfa2lsbCgmam1lLT5y
eGVtcHR5X3Rhc2spOwpAQCAtMzAzNSw2ICszMDM0LDcgQEAgam1lX2luaXRfb25lKHN0cnVjdCBw
Y2lfZGV2ICpwZGV2LAogCWF0b21pY19zZXQoJmptZS0+cnhfZW1wdHksIDEpOwogCiAJdGFza2xl
dF9zZXR1cCgmam1lLT5wY2NfdGFzaywgam1lX3BjY190YXNrbGV0KTsKKwlJTklUX1dPUksoJmpt
ZS0+bGlua2NoX3Rhc2ssIGptZV9saW5rX2NoYW5nZV93b3JrKTsKIAlqbWUtPmRwaS5jdXIgPSBQ
Q0NfUDE7CiAKIAlqbWUtPnJlZ19naGMgPSAwOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRo
ZXJuZXQvam1lLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9qbWUuaAppbmRleCBhMmMzYjAwZDkz
OWQuLjJhZjc2MzI5YjRhMiAxMDA2NDQKLS0tIGEvZHJpdmVycy9uZXQvZXRoZXJuZXQvam1lLmgK
KysrIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvam1lLmgKQEAgLTQxMSw3ICs0MTEsNyBAQCBzdHJ1
Y3Qgam1lX2FkYXB0ZXIgewogCXN0cnVjdCB0YXNrbGV0X3N0cnVjdAlyeGVtcHR5X3Rhc2s7CiAJ
c3RydWN0IHRhc2tsZXRfc3RydWN0CXJ4Y2xlYW5fdGFzazsKIAlzdHJ1Y3QgdGFza2xldF9zdHJ1
Y3QJdHhjbGVhbl90YXNrOwotCXN0cnVjdCB0YXNrbGV0X3N0cnVjdAlsaW5rY2hfdGFzazsKKwlz
dHJ1Y3Qgd29ya19zdHJ1Y3QJbGlua2NoX3Rhc2s7CiAJc3RydWN0IHRhc2tsZXRfc3RydWN0CXBj
Y190YXNrOwogCXVuc2lnbmVkIGxvbmcJCWZsYWdzOwogCXUzMgkJCXJlZ190eGNzOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy9uZXQvd2lyZWxlc3MvYXRoL2F0aDlrL2JlYWNvbi5jIGIvZHJpdmVycy9u
ZXQvd2lyZWxlc3MvYXRoL2F0aDlrL2JlYWNvbi5jCmluZGV4IDcxZTJhZGE4Njc5My4uNzJlMmU3
MWFhYzBlIDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC93aXJlbGVzcy9hdGgvYXRoOWsvYmVhY29u
LmMKKysrIGIvZHJpdmVycy9uZXQvd2lyZWxlc3MvYXRoL2F0aDlrL2JlYWNvbi5jCkBAIC0yNTEs
NyArMjUxLDcgQEAgdm9pZCBhdGg5a19iZWFjb25fZW5zdXJlX3ByaW1hcnlfc2xvdChzdHJ1Y3Qg
YXRoX3NvZnRjICpzYykKIAlpbnQgZmlyc3Rfc2xvdCA9IEFUSF9CQ0JVRjsKIAlpbnQgc2xvdDsK
IAotCXRhc2tsZXRfZGlzYWJsZSgmc2MtPmJjb25fdGFza2xldCk7CisJdGFza2xldF9kaXNhYmxl
X2luX2F0b21pYygmc2MtPmJjb25fdGFza2xldCk7CiAKIAkvKiBGaW5kIGZpcnN0IHRha2VuIHNs
b3QuICovCiAJZm9yIChzbG90ID0gMDsgc2xvdCA8IEFUSF9CQ0JVRjsgc2xvdCsrKSB7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL3BjaS9jb250cm9sbGVyL3BjaS1oeXBlcnYuYyBiL2RyaXZlcnMvcGNp
L2NvbnRyb2xsZXIvcGNpLWh5cGVydi5jCmluZGV4IDI3YTE3YTFlNGE3Yy4uYTMxMzcwOGJjZjc1
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3BjaS9jb250cm9sbGVyL3BjaS1oeXBlcnYuYworKysgYi9k
cml2ZXJzL3BjaS9jb250cm9sbGVyL3BjaS1oeXBlcnYuYwpAQCAtMTQ1OCw3ICsxNDU4LDcgQEAg
c3RhdGljIHZvaWQgaHZfY29tcG9zZV9tc2lfbXNnKHN0cnVjdCBpcnFfZGF0YSAqZGF0YSwgc3Ry
dWN0IG1zaV9tc2cgKm1zZykKIAkgKiBQcmV2ZW50cyBodl9wY2lfb25jaGFubmVsY2FsbGJhY2so
KSBmcm9tIHJ1bm5pbmcgY29uY3VycmVudGx5CiAJICogaW4gdGhlIHRhc2tsZXQuCiAJICovCi0J
dGFza2xldF9kaXNhYmxlKCZjaGFubmVsLT5jYWxsYmFja19ldmVudCk7CisJdGFza2xldF9kaXNh
YmxlX2luX2F0b21pYygmY2hhbm5lbC0+Y2FsbGJhY2tfZXZlbnQpOwogCiAJLyoKIAkgKiBTaW5j
ZSB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIElSUSBsb2NrcyBoZWxkLCBjYW4ndApkaWZm
IC0tZ2l0IGEvZHJpdmVycy9zaC9pbnRjL2NvcmUuYyBiL2RyaXZlcnMvc2gvaW50Yy9jb3JlLmMK
aW5kZXggYTE0Njg0ZmZlNGMxLi5jYTRmNGNhNDEzZjEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvc2gv
aW50Yy9jb3JlLmMKKysrIGIvZHJpdmVycy9zaC9pbnRjL2NvcmUuYwpAQCAtMTc5LDYgKzE3OSwy
MSBAQCBzdGF0aWMgdW5zaWduZWQgaW50IF9faW5pdCBzYXZlX3JlZyhzdHJ1Y3QgaW50Y19kZXNj
X2ludCAqZCwKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGJvb2wgX19pbml0IGludGNfbWFwKHN0
cnVjdCBpcnFfZG9tYWluICpkb21haW4sIGludCBpcnEpCit7CisJaWYgKCFpcnFfdG9fZGVzYyhp
cnEpICYmIGlycV9hbGxvY19kZXNjX2F0KGlycSwgTlVNQV9OT19OT0RFKSAhPSBpcnEpIHsKKwkJ
cHJfZXJyKCJ1bmFtZSB0byBhbGxvY2F0ZSBJUlEgJWRcbiIsIGlycSk7CisJCXJldHVybiBmYWxz
ZTsKKwl9CisKKwlpZiAoaXJxX2RvbWFpbl9hc3NvY2lhdGUoZG9tYWluLCBpcnEsIGlycSkpIHsK
KwkJcHJfZXJyKCJkb21haW4gYXNzb2NpYXRpb24gZmFpbHVyZVxuIik7CisJCXJldHVybiBmYWxz
ZTsKKwl9CisKKwlyZXR1cm4gdHJ1ZTsKK30KKwogaW50IF9faW5pdCByZWdpc3Rlcl9pbnRjX2Nv
bnRyb2xsZXIoc3RydWN0IGludGNfZGVzYyAqZGVzYykKIHsKIAl1bnNpZ25lZCBpbnQgaSwgaywg
c21wOwpAQCAtMzExLDI0ICszMjYsMTIgQEAgaW50IF9faW5pdCByZWdpc3Rlcl9pbnRjX2NvbnRy
b2xsZXIoc3RydWN0IGludGNfZGVzYyAqZGVzYykKIAlmb3IgKGkgPSAwOyBpIDwgaHctPm5yX3Zl
Y3RvcnM7IGkrKykgewogCQlzdHJ1Y3QgaW50Y192ZWN0ICp2ZWN0ID0gaHctPnZlY3RvcnMgKyBp
OwogCQl1bnNpZ25lZCBpbnQgaXJxID0gZXZ0MmlycSh2ZWN0LT52ZWN0KTsKLQkJaW50IHJlczsK
IAogCQlpZiAoIXZlY3QtPmVudW1faWQpCiAJCQljb250aW51ZTsKIAotCQlyZXMgPSBpcnFfY3Jl
YXRlX2lkZW50aXR5X21hcHBpbmcoZC0+ZG9tYWluLCBpcnEpOwotCQlpZiAodW5saWtlbHkocmVz
KSkgewotCQkJaWYgKHJlcyA9PSAtRUVYSVNUKSB7Ci0JCQkJcmVzID0gaXJxX2RvbWFpbl9hc3Nv
Y2lhdGUoZC0+ZG9tYWluLCBpcnEsIGlycSk7Ci0JCQkJaWYgKHVubGlrZWx5KHJlcykpIHsKLQkJ
CQkJcHJfZXJyKCJkb21haW4gYXNzb2NpYXRpb24gZmFpbHVyZVxuIik7Ci0JCQkJCWNvbnRpbnVl
OwotCQkJCX0KLQkJCX0gZWxzZSB7Ci0JCQkJcHJfZXJyKCJjYW4ndCBpZGVudGl0eSBtYXAgSVJR
ICVkXG4iLCBpcnEpOwotCQkJCWNvbnRpbnVlOwotCQkJfQotCQl9CisJCWlmICghaW50Y19tYXAo
ZC0+ZG9tYWluLCBpcnEpKQorCQkJY29udGludWU7CiAKIAkJaW50Y19pcnFfeGxhdGVfc2V0KGly
cSwgdmVjdC0+ZW51bV9pZCwgZCk7CiAJCWludGNfcmVnaXN0ZXJfaXJxKGRlc2MsIGQsIHZlY3Qt
PmVudW1faWQsIGlycSk7CkBAIC0zNDUsMjIgKzM0OCw4IEBAIGludCBfX2luaXQgcmVnaXN0ZXJf
aW50Y19jb250cm9sbGVyKHN0cnVjdCBpbnRjX2Rlc2MgKmRlc2MpCiAJCQkgKiBJUlEgc3VwcG9y
dCwgZWFjaCB2ZWN0b3Igc3RpbGwgbmVlZHMgdG8gaGF2ZQogCQkJICogaXRzIG93biBiYWNraW5n
IGlycV9kZXNjLgogCQkJICovCi0JCQlyZXMgPSBpcnFfY3JlYXRlX2lkZW50aXR5X21hcHBpbmco
ZC0+ZG9tYWluLCBpcnEyKTsKLQkJCWlmICh1bmxpa2VseShyZXMpKSB7Ci0JCQkJaWYgKHJlcyA9
PSAtRUVYSVNUKSB7Ci0JCQkJCXJlcyA9IGlycV9kb21haW5fYXNzb2NpYXRlKGQtPmRvbWFpbiwK
LQkJCQkJCQkJICAgaXJxMiwgaXJxMik7Ci0JCQkJCWlmICh1bmxpa2VseShyZXMpKSB7Ci0JCQkJ
CQlwcl9lcnIoImRvbWFpbiBhc3NvY2lhdGlvbiAiCi0JCQkJCQkgICAgICAgImZhaWx1cmVcbiIp
OwotCQkJCQkJY29udGludWU7Ci0JCQkJCX0KLQkJCQl9IGVsc2UgewotCQkJCQlwcl9lcnIoImNh
bid0IGlkZW50aXR5IG1hcCBJUlEgJWRcbiIsCi0JCQkJCSAgICAgICBpcnEpOwotCQkJCQljb250
aW51ZTsKLQkJCQl9Ci0JCQl9CisJCQlpZiAoIWludGNfbWFwKGQtPmRvbWFpbiwgaXJxMikpCisJ
CQkJY29udGludWU7CiAKIAkJCXZlY3QyLT5lbnVtX2lkID0gMDsKIApkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9saW51eC9ib3R0b21faGFsZi5oIGIvaW5jbHVkZS9saW51eC9ib3R0b21faGFsZi5oCmlu
ZGV4IGExOTUxOWY0MjQxZC4uZWVkODZlYjBhMWRlIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4
L2JvdHRvbV9oYWxmLmgKKysrIGIvaW5jbHVkZS9saW51eC9ib3R0b21faGFsZi5oCkBAIC00LDcg
KzQsNyBAQAogCiAjaW5jbHVkZSA8bGludXgvcHJlZW1wdC5oPgogCi0jaWZkZWYgQ09ORklHX1RS
QUNFX0lSUUZMQUdTCisjaWYgZGVmaW5lZChDT05GSUdfUFJFRU1QVF9SVCkgfHwgZGVmaW5lZChD
T05GSUdfVFJBQ0VfSVJRRkxBR1MpCiBleHRlcm4gdm9pZCBfX2xvY2FsX2JoX2Rpc2FibGVfaXAo
dW5zaWduZWQgbG9uZyBpcCwgdW5zaWduZWQgaW50IGNudCk7CiAjZWxzZQogc3RhdGljIF9fYWx3
YXlzX2lubGluZSB2b2lkIF9fbG9jYWxfYmhfZGlzYWJsZV9pcCh1bnNpZ25lZCBsb25nIGlwLCB1
bnNpZ25lZCBpbnQgY250KQpAQCAtMzIsNCArMzIsMTAgQEAgc3RhdGljIGlubGluZSB2b2lkIGxv
Y2FsX2JoX2VuYWJsZSh2b2lkKQogCV9fbG9jYWxfYmhfZW5hYmxlX2lwKF9USElTX0lQXywgU09G
VElSUV9ESVNBQkxFX09GRlNFVCk7CiB9CiAKKyNpZmRlZiBDT05GSUdfUFJFRU1QVF9SVAorZXh0
ZXJuIGJvb2wgbG9jYWxfYmhfYmxvY2tlZCh2b2lkKTsKKyNlbHNlCitzdGF0aWMgaW5saW5lIGJv
b2wgbG9jYWxfYmhfYmxvY2tlZCh2b2lkKSB7IHJldHVybiBmYWxzZTsgfQorI2VuZGlmCisKICNl
bmRpZiAvKiBfTElOVVhfQkhfSCAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9oYXJkaXJx
LmggYi9pbmNsdWRlL2xpbnV4L2hhcmRpcnEuaAppbmRleCA3YzlkNmEyZDdlOTAuLjY5YmM4NmVh
MzgyYyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9oYXJkaXJxLmgKKysrIGIvaW5jbHVkZS9s
aW51eC9oYXJkaXJxLmgKQEAgLTYsNiArNiw3IEBACiAjaW5jbHVkZSA8bGludXgvcHJlZW1wdC5o
PgogI2luY2x1ZGUgPGxpbnV4L2xvY2tkZXAuaD4KICNpbmNsdWRlIDxsaW51eC9mdHJhY2VfaXJx
Lmg+CisjaW5jbHVkZSA8bGludXgvc2NoZWQuaD4KICNpbmNsdWRlIDxsaW51eC92dGltZS5oPgog
I2luY2x1ZGUgPGFzbS9oYXJkaXJxLmg+CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvaW50
ZXJydXB0LmggYi9pbmNsdWRlL2xpbnV4L2ludGVycnVwdC5oCmluZGV4IDk2N2UyNTc2NzE1My4u
NDc3Nzg1MGE2ZGM3IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2ludGVycnVwdC5oCisrKyBi
L2luY2x1ZGUvbGludXgvaW50ZXJydXB0LmgKQEAgLTYxLDYgKzYxLDkgQEAKICAqICAgICAgICAg
ICAgICAgIGludGVycnVwdCBoYW5kbGVyIGFmdGVyIHN1c3BlbmRpbmcgaW50ZXJydXB0cy4gRm9y
IHN5c3RlbQogICogICAgICAgICAgICAgICAgd2FrZXVwIGRldmljZXMgdXNlcnMgbmVlZCB0byBp
bXBsZW1lbnQgd2FrZXVwIGRldGVjdGlvbiBpbgogICogICAgICAgICAgICAgICAgdGhlaXIgaW50
ZXJydXB0IGhhbmRsZXJzLgorICogSVJRRl9OT19BVVRPRU4gLSBEb24ndCBlbmFibGUgSVJRIG9y
IE5NSSBhdXRvbWF0aWNhbGx5IHdoZW4gdXNlcnMgcmVxdWVzdCBpdC4KKyAqICAgICAgICAgICAg
ICAgIFVzZXJzIHdpbGwgZW5hYmxlIGl0IGV4cGxpY2l0bHkgYnkgZW5hYmxlX2lycSgpIG9yIGVu
YWJsZV9ubWkoKQorICogICAgICAgICAgICAgICAgbGF0ZXIuCiAgKi8KICNkZWZpbmUgSVJRRl9T
SEFSRUQJCTB4MDAwMDAwODAKICNkZWZpbmUgSVJRRl9QUk9CRV9TSEFSRUQJMHgwMDAwMDEwMApA
QCAtNzQsNiArNzcsNyBAQAogI2RlZmluZSBJUlFGX05PX1RIUkVBRAkJMHgwMDAxMDAwMAogI2Rl
ZmluZSBJUlFGX0VBUkxZX1JFU1VNRQkweDAwMDIwMDAwCiAjZGVmaW5lIElSUUZfQ09ORF9TVVNQ
RU5ECTB4MDAwNDAwMDAKKyNkZWZpbmUgSVJRRl9OT19BVVRPRU4JCTB4MDAwODAwMDAKIAogI2Rl
ZmluZSBJUlFGX1RJTUVSCQkoX19JUlFGX1RJTUVSIHwgSVJRRl9OT19TVVNQRU5EIHwgSVJRRl9O
T19USFJFQUQpCiAKQEAgLTY1NCwyNiArNjU4LDIxIEBAIGVudW0KIAlUQVNLTEVUX1NUQVRFX1JV
TgkvKiBUYXNrbGV0IGlzIHJ1bm5pbmcgKFNNUCBvbmx5KSAqLwogfTsKIAotI2lmZGVmIENPTkZJ
R19TTVAKKyNpZiBkZWZpbmVkKENPTkZJR19TTVApIHx8IGRlZmluZWQoQ09ORklHX1BSRUVNUFRf
UlQpCiBzdGF0aWMgaW5saW5lIGludCB0YXNrbGV0X3RyeWxvY2soc3RydWN0IHRhc2tsZXRfc3Ry
dWN0ICp0KQogewogCXJldHVybiAhdGVzdF9hbmRfc2V0X2JpdChUQVNLTEVUX1NUQVRFX1JVTiwg
Jih0KS0+c3RhdGUpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQgdGFza2xldF91bmxvY2soc3Ry
dWN0IHRhc2tsZXRfc3RydWN0ICp0KQotewotCXNtcF9tYl9fYmVmb3JlX2F0b21pYygpOwotCWNs
ZWFyX2JpdChUQVNLTEVUX1NUQVRFX1JVTiwgJih0KS0+c3RhdGUpOwotfQordm9pZCB0YXNrbGV0
X3VubG9jayhzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpOwordm9pZCB0YXNrbGV0X3VubG9ja193
YWl0KHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCk7Cit2b2lkIHRhc2tsZXRfdW5sb2NrX3NwaW5f
d2FpdChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpOwogCi1zdGF0aWMgaW5saW5lIHZvaWQgdGFz
a2xldF91bmxvY2tfd2FpdChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCi17Ci0Jd2hpbGUgKHRl
c3RfYml0KFRBU0tMRVRfU1RBVEVfUlVOLCAmKHQpLT5zdGF0ZSkpIHsgYmFycmllcigpOyB9Ci19
CiAjZWxzZQotI2RlZmluZSB0YXNrbGV0X3RyeWxvY2sodCkgMQotI2RlZmluZSB0YXNrbGV0X3Vu
bG9ja193YWl0KHQpIGRvIHsgfSB3aGlsZSAoMCkKLSNkZWZpbmUgdGFza2xldF91bmxvY2sodCkg
ZG8geyB9IHdoaWxlICgwKQorc3RhdGljIGlubGluZSBpbnQgdGFza2xldF90cnlsb2NrKHN0cnVj
dCB0YXNrbGV0X3N0cnVjdCAqdCkgeyByZXR1cm4gMTsgfQorc3RhdGljIGlubGluZSB2b2lkIHRh
c2tsZXRfdW5sb2NrKHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkgeyB9CitzdGF0aWMgaW5saW5l
IHZvaWQgdGFza2xldF91bmxvY2tfd2FpdChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpIHsgfQor
c3RhdGljIGlubGluZSB2b2lkIHRhc2tsZXRfdW5sb2NrX3NwaW5fd2FpdChzdHJ1Y3QgdGFza2xl
dF9zdHJ1Y3QgKnQpIHsgfQogI2VuZGlmCiAKIGV4dGVybiB2b2lkIF9fdGFza2xldF9zY2hlZHVs
ZShzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpOwpAQCAtNjk4LDYgKzY5NywxNyBAQCBzdGF0aWMg
aW5saW5lIHZvaWQgdGFza2xldF9kaXNhYmxlX25vc3luYyhzdHJ1Y3QgdGFza2xldF9zdHJ1Y3Qg
KnQpCiAJc21wX21iX19hZnRlcl9hdG9taWMoKTsKIH0KIAorLyoKKyAqIERvIG5vdCB1c2UgaW4g
bmV3IGNvZGUuIERpc2FibGluZyB0YXNrbGV0cyBmcm9tIGF0b21pYyBjb250ZXh0cyBpcworICog
ZXJyb3IgcHJvbmUgYW5kIHNob3VsZCBiZSBhdm9pZGVkLgorICovCitzdGF0aWMgaW5saW5lIHZv
aWQgdGFza2xldF9kaXNhYmxlX2luX2F0b21pYyhzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCit7
CisJdGFza2xldF9kaXNhYmxlX25vc3luYyh0KTsKKwl0YXNrbGV0X3VubG9ja19zcGluX3dhaXQo
dCk7CisJc21wX21iKCk7Cit9CisKIHN0YXRpYyBpbmxpbmUgdm9pZCB0YXNrbGV0X2Rpc2FibGUo
c3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQogewogCXRhc2tsZXRfZGlzYWJsZV9ub3N5bmModCk7
CkBAIC03MTIsNyArNzIyLDYgQEAgc3RhdGljIGlubGluZSB2b2lkIHRhc2tsZXRfZW5hYmxlKHN0
cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKIH0KIAogZXh0ZXJuIHZvaWQgdGFza2xldF9raWxsKHN0
cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCk7Ci1leHRlcm4gdm9pZCB0YXNrbGV0X2tpbGxfaW1tZWRp
YXRlKHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCwgdW5zaWduZWQgaW50IGNwdSk7CiBleHRlcm4g
dm9pZCB0YXNrbGV0X2luaXQoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0LAogCQkJIHZvaWQgKCpm
dW5jKSh1bnNpZ25lZCBsb25nKSwgdW5zaWduZWQgbG9uZyBkYXRhKTsKIGV4dGVybiB2b2lkIHRh
c2tsZXRfc2V0dXAoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0LApkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9saW51eC9pcnEuaCBiL2luY2x1ZGUvbGludXgvaXJxLmgKaW5kZXggMmVmZGU2YTc5YjdlLi5i
ZWU4MjgwOTEwN2MgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvaXJxLmgKKysrIGIvaW5jbHVk
ZS9saW51eC9pcnEuaApAQCAtMTE2LDcgKzExNiw3IEBAIGVudW0gewogICogSVJRX1NFVF9NQVNL
X05PQ1BZCS0gT0ssIGNoaXAgZGlkIHVwZGF0ZSBpcnFfY29tbW9uX2RhdGEuYWZmaW5pdHkKICAq
IElSUV9TRVRfTUFTS19PS19ET05FCS0gU2FtZSBhcyBJUlFfU0VUX01BU0tfT0sgZm9yIGNvcmUu
IFNwZWNpYWwgY29kZSB0bwogICoJCQkgIHN1cHBvcnQgc3RhY2tlZCBpcnFjaGlwcywgd2hpY2gg
aW5kaWNhdGVzIHNraXBwaW5nCi0gKgkJCSAgYWxsIGRlc2NlbmRlbnQgaXJxY2hpcHMuCisgKgkJ
CSAgYWxsIGRlc2NlbmRhbnQgaXJxY2hpcHMuCiAgKi8KIGVudW0gewogCUlSUV9TRVRfTUFTS19P
SyA9IDAsCkBAIC0zMDIsNyArMzAyLDcgQEAgc3RhdGljIGlubGluZSBib29sIGlycWRfaXNfbGV2
ZWxfdHlwZShzdHJ1Y3QgaXJxX2RhdGEgKmQpCiAKIC8qCiAgKiBNdXN0IG9ubHkgYmUgY2FsbGVk
IG9mIGlycWNoaXAuaXJxX3NldF9hZmZpbml0eSgpIG9yIGxvdyBsZXZlbAotICogaGllYXJhcmNo
eSBkb21haW4gYWxsb2NhdGlvbiBmdW5jdGlvbnMuCisgKiBoaWVyYXJjaHkgZG9tYWluIGFsbG9j
YXRpb24gZnVuY3Rpb25zLgogICovCiBzdGF0aWMgaW5saW5lIHZvaWQgaXJxZF9zZXRfc2luZ2xl
X3RhcmdldChzdHJ1Y3QgaXJxX2RhdGEgKmQpCiB7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4
L2lycWNoaXAvYXJtLWdpYy12NC5oIGIvaW5jbHVkZS9saW51eC9pcnFjaGlwL2FybS1naWMtdjQu
aAppbmRleCA5NDNjMzQxMWNhMTAuLjJjNjMzNzViYmQ0MyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9s
aW51eC9pcnFjaGlwL2FybS1naWMtdjQuaAorKysgYi9pbmNsdWRlL2xpbnV4L2lycWNoaXAvYXJt
LWdpYy12NC5oCkBAIC0xNDUsNCArMTQ1LDYgQEAgaW50IGl0c19pbml0X3Y0KHN0cnVjdCBpcnFf
ZG9tYWluICpkb21haW4sCiAJCWNvbnN0IHN0cnVjdCBpcnFfZG9tYWluX29wcyAqdnBlX29wcywK
IAkJY29uc3Qgc3RydWN0IGlycV9kb21haW5fb3BzICpzZ2lfb3BzKTsKIAorYm9vbCBnaWNfY3B1
aWZfaGFzX3ZzZ2kodm9pZCk7CisKICNlbmRpZgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9p
cnFkZXNjLmggYi9pbmNsdWRlL2xpbnV4L2lycWRlc2MuaAppbmRleCA4OTFiMzIzMjY2ZGYuLmRm
NDY1MTI1MDc4NSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9pcnFkZXNjLmgKKysrIGIvaW5j
bHVkZS9saW51eC9pcnFkZXNjLmgKQEAgLTMyLDcgKzMyLDcgQEAgc3RydWN0IHB0X3JlZ3M7CiAg
KiBAbGFzdF91bmhhbmRsZWQ6CWFnaW5nIHRpbWVyIGZvciB1bmhhbmRsZWQgY291bnQKICAqIEBp
cnFzX3VuaGFuZGxlZDoJc3RhdHMgZmllbGQgZm9yIHNwdXJpb3VzIHVuaGFuZGxlZCBpbnRlcnJ1
cHRzCiAgKiBAdGhyZWFkc19oYW5kbGVkOglzdGF0cyBmaWVsZCBmb3IgZGVmZXJyZWQgc3B1cmlv
dXMgZGV0ZWN0aW9uIG9mIHRocmVhZGVkIGhhbmRsZXJzCi0gKiBAdGhyZWFkc19oYW5kbGVkX2xh
c3Q6IGNvbXBhcmF0b3IgZmllbGQgZm9yIGRlZmVycmVkIHNwdXJpb3VzIGRldGVjdGlvbiBvZiB0
aGVyYWRlZCBoYW5kbGVycworICogQHRocmVhZHNfaGFuZGxlZF9sYXN0OiBjb21wYXJhdG9yIGZp
ZWxkIGZvciBkZWZlcnJlZCBzcHVyaW91cyBkZXRlY3Rpb24gb2YgdGhyZWFkZWQgaGFuZGxlcnMK
ICAqIEBsb2NrOgkJbG9ja2luZyBmb3IgU01QCiAgKiBAYWZmaW5pdHlfaGludDoJaGludCB0byB1
c2VyIHNwYWNlIGZvciBwcmVmZXJyZWQgaXJxIGFmZmluaXR5CiAgKiBAYWZmaW5pdHlfbm90aWZ5
Ogljb250ZXh0IGZvciBub3RpZmljYXRpb24gb2YgYWZmaW5pdHkgY2hhbmdlcwpkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC9pcnFkb21haW4uaCBiL2luY2x1ZGUvbGludXgvaXJxZG9tYWluLmgK
aW5kZXggMzNjYWNjOGFmMjZkLi43YTFkZDdiOTY5YjYgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGlu
dXgvaXJxZG9tYWluLmgKKysrIGIvaW5jbHVkZS9saW51eC9pcnFkb21haW4uaApAQCAtNDE1LDE1
ICs0MTUsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGludCBpcnFfbGluZWFyX3Jldm1hcChz
dHJ1Y3QgaXJxX2RvbWFpbiAqZG9tYWluLAogZXh0ZXJuIHVuc2lnbmVkIGludCBpcnFfZmluZF9t
YXBwaW5nKHN0cnVjdCBpcnFfZG9tYWluICpob3N0LAogCQkJCSAgICAgaXJxX2h3X251bWJlcl90
IGh3aXJxKTsKIGV4dGVybiB1bnNpZ25lZCBpbnQgaXJxX2NyZWF0ZV9kaXJlY3RfbWFwcGluZyhz
dHJ1Y3QgaXJxX2RvbWFpbiAqaG9zdCk7Ci1leHRlcm4gaW50IGlycV9jcmVhdGVfc3RyaWN0X21h
cHBpbmdzKHN0cnVjdCBpcnFfZG9tYWluICpkb21haW4sCi0JCQkJICAgICAgdW5zaWduZWQgaW50
IGlycV9iYXNlLAotCQkJCSAgICAgIGlycV9od19udW1iZXJfdCBod2lycV9iYXNlLCBpbnQgY291
bnQpOwotCi1zdGF0aWMgaW5saW5lIGludCBpcnFfY3JlYXRlX2lkZW50aXR5X21hcHBpbmcoc3Ry
dWN0IGlycV9kb21haW4gKmhvc3QsCi0JCQkJCSAgICAgIGlycV9od19udW1iZXJfdCBod2lycSkK
LXsKLQlyZXR1cm4gaXJxX2NyZWF0ZV9zdHJpY3RfbWFwcGluZ3MoaG9zdCwgaHdpcnEsIGh3aXJx
LCAxKTsKLX0KIAogZXh0ZXJuIGNvbnN0IHN0cnVjdCBpcnFfZG9tYWluX29wcyBpcnFfZG9tYWlu
X3NpbXBsZV9vcHM7CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvcHJlZW1wdC5oIGIvaW5j
bHVkZS9saW51eC9wcmVlbXB0LmgKaW5kZXggNjljYzhiNjRhYTNhLi45ODgxZWFjMDY5OGYgMTAw
NjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcHJlZW1wdC5oCisrKyBiL2luY2x1ZGUvbGludXgvcHJl
ZW1wdC5oCkBAIC03OSw3ICs3OSwxMSBAQAogCiAjZGVmaW5lIG5taV9jb3VudCgpCShwcmVlbXB0
X2NvdW50KCkgJiBOTUlfTUFTSykKICNkZWZpbmUgaGFyZGlycV9jb3VudCgpCShwcmVlbXB0X2Nv
dW50KCkgJiBIQVJESVJRX01BU0spCi0jZGVmaW5lIHNvZnRpcnFfY291bnQoKQkocHJlZW1wdF9j
b3VudCgpICYgU09GVElSUV9NQVNLKQorI2lmZGVmIENPTkZJR19QUkVFTVBUX1JUCisjIGRlZmlu
ZSBzb2Z0aXJxX2NvdW50KCkJKGN1cnJlbnQtPnNvZnRpcnFfZGlzYWJsZV9jbnQgJiBTT0ZUSVJR
X01BU0spCisjZWxzZQorIyBkZWZpbmUgc29mdGlycV9jb3VudCgpCShwcmVlbXB0X2NvdW50KCkg
JiBTT0ZUSVJRX01BU0spCisjZW5kaWYKICNkZWZpbmUgaXJxX2NvdW50KCkJKG5taV9jb3VudCgp
IHwgaGFyZGlycV9jb3VudCgpIHwgc29mdGlycV9jb3VudCgpKQogCiAvKgpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oIGIvaW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oCmluZGV4
IGJkMDRmNzIyNzE0Zi4uNmQ4NTVlZjA5MWJhIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3Jj
dXBkYXRlLmgKKysrIGIvaW5jbHVkZS9saW51eC9yY3VwZGF0ZS5oCkBAIC0zMzQsNyArMzM0LDgg
QEAgc3RhdGljIGlubGluZSB2b2lkIHJjdV9wcmVlbXB0X3NsZWVwX2NoZWNrKHZvaWQpIHsgfQog
I2RlZmluZSByY3Vfc2xlZXBfY2hlY2soKQkJCQkJCVwKIAlkbyB7CQkJCQkJCQlcCiAJCXJjdV9w
cmVlbXB0X3NsZWVwX2NoZWNrKCk7CQkJCVwKLQkJUkNVX0xPQ0tERVBfV0FSTihsb2NrX2lzX2hl
bGQoJnJjdV9iaF9sb2NrX21hcCksCVwKKwkJaWYgKCFJU19FTkFCTEVEKENPTkZJR19QUkVFTVBU
X1JUKSkJCQlcCisJCSAgICBSQ1VfTE9DS0RFUF9XQVJOKGxvY2tfaXNfaGVsZCgmcmN1X2JoX2xv
Y2tfbWFwKSwJXAogCQkJCSAiSWxsZWdhbCBjb250ZXh0IHN3aXRjaCBpbiBSQ1UtYmggcmVhZC1z
aWRlIGNyaXRpY2FsIHNlY3Rpb24iKTsgXAogCQlSQ1VfTE9DS0RFUF9XQVJOKGxvY2tfaXNfaGVs
ZCgmcmN1X3NjaGVkX2xvY2tfbWFwKSwJXAogCQkJCSAiSWxsZWdhbCBjb250ZXh0IHN3aXRjaCBp
biBSQ1Utc2NoZWQgcmVhZC1zaWRlIGNyaXRpY2FsIHNlY3Rpb24iKTsgXApkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9saW51eC9zY2hlZC5oIGIvaW5jbHVkZS9saW51eC9zY2hlZC5oCmluZGV4IGVmMDBi
YjIyMTY0Yy4uNzQzYTYxM2M5Y2YzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NjaGVkLmgK
KysrIGIvaW5jbHVkZS9saW51eC9zY2hlZC5oCkBAIC0xMDQ0LDYgKzEwNDQsOSBAQCBzdHJ1Y3Qg
dGFza19zdHJ1Y3QgewogCWludAkJCQlzb2Z0aXJxX2NvbnRleHQ7CiAJaW50CQkJCWlycV9jb25m
aWc7CiAjZW5kaWYKKyNpZmRlZiBDT05GSUdfUFJFRU1QVF9SVAorCWludAkJCQlzb2Z0aXJxX2Rp
c2FibGVfY250OworI2VuZGlmCiAKICNpZmRlZiBDT05GSUdfTE9DS0RFUAogIyBkZWZpbmUgTUFY
X0xPQ0tfREVQVEgJCQk0OFVMCmRpZmYgLS1naXQgYS9rZXJuZWwvaXJxL2NoaXAuYyBiL2tlcm5l
bC9pcnEvY2hpcC5jCmluZGV4IDZkODllMzNmZTNhYS4uOGNjOGU1NzEzMjg3IDEwMDY0NAotLS0g
YS9rZXJuZWwvaXJxL2NoaXAuYworKysgYi9rZXJuZWwvaXJxL2NoaXAuYwpAQCAtNzYxLDcgKzc2
MSw3IEBAIEVYUE9SVF9TWU1CT0xfR1BMKGhhbmRsZV9mYXN0ZW9pX25taSk7CiAgKgloYW5kbGVf
ZWRnZV9pcnEgLSBlZGdlIHR5cGUgSVJRIGhhbmRsZXIKICAqCUBkZXNjOgl0aGUgaW50ZXJydXB0
IGRlc2NyaXB0aW9uIHN0cnVjdHVyZSBmb3IgdGhpcyBpcnEKICAqCi0gKglJbnRlcnJ1cHQgb2Nj
dXJlcyBvbiB0aGUgZmFsbGluZyBhbmQvb3IgcmlzaW5nIGVkZ2Ugb2YgYSBoYXJkd2FyZQorICoJ
SW50ZXJydXB0IG9jY3VycyBvbiB0aGUgZmFsbGluZyBhbmQvb3IgcmlzaW5nIGVkZ2Ugb2YgYSBo
YXJkd2FyZQogICoJc2lnbmFsLiBUaGUgb2NjdXJyZW5jZSBpcyBsYXRjaGVkIGludG8gdGhlIGly
cSBjb250cm9sbGVyIGhhcmR3YXJlCiAgKglhbmQgbXVzdCBiZSBhY2tlZCBpbiBvcmRlciB0byBi
ZSByZWVuYWJsZWQuIEFmdGVyIHRoZSBhY2sgYW5vdGhlcgogICoJaW50ZXJydXB0IGNhbiBoYXBw
ZW4gb24gdGhlIHNhbWUgc291cmNlIGV2ZW4gYmVmb3JlIHRoZSBmaXJzdCBvbmUKQEAgLTgwOCw3
ICs4MDgsNyBAQCB2b2lkIGhhbmRsZV9lZGdlX2lycShzdHJ1Y3QgaXJxX2Rlc2MgKmRlc2MpCiAJ
CS8qCiAJCSAqIFdoZW4gYW5vdGhlciBpcnEgYXJyaXZlZCB3aGlsZSB3ZSB3ZXJlIGhhbmRsaW5n
CiAJCSAqIG9uZSwgd2UgY291bGQgaGF2ZSBtYXNrZWQgdGhlIGlycS4KLQkJICogUmVuYWJsZSBp
dCwgaWYgaXQgd2FzIG5vdCBkaXNhYmxlZCBpbiBtZWFudGltZS4KKwkJICogUmVlbmFibGUgaXQs
IGlmIGl0IHdhcyBub3QgZGlzYWJsZWQgaW4gbWVhbnRpbWUuCiAJCSAqLwogCQlpZiAodW5saWtl
bHkoZGVzYy0+aXN0YXRlICYgSVJRU19QRU5ESU5HKSkgewogCQkJaWYgKCFpcnFkX2lycV9kaXNh
YmxlZCgmZGVzYy0+aXJxX2RhdGEpICYmCkBAIC0xNDE5LDcgKzE0MTksNyBAQCBFWFBPUlRfU1lN
Qk9MX0dQTChpcnFfY2hpcF9lb2lfcGFyZW50KTsKICAqIEBkZXN0OglUaGUgYWZmaW5pdHkgbWFz
ayB0byBzZXQKICAqIEBmb3JjZToJRmxhZyB0byBlbmZvcmNlIHNldHRpbmcgKGRpc2FibGUgb25s
aW5lIGNoZWNrcykKICAqCi0gKiBDb25kaXRpbmFsLCBhcyB0aGUgdW5kZXJseWluZyBwYXJlbnQg
Y2hpcCBtaWdodCBub3QgaW1wbGVtZW50IGl0LgorICogQ29uZGl0aW9uYWwsIGFzIHRoZSB1bmRl
cmx5aW5nIHBhcmVudCBjaGlwIG1pZ2h0IG5vdCBpbXBsZW1lbnQgaXQuCiAgKi8KIGludCBpcnFf
Y2hpcF9zZXRfYWZmaW5pdHlfcGFyZW50KHN0cnVjdCBpcnFfZGF0YSAqZGF0YSwKIAkJCQkgY29u
c3Qgc3RydWN0IGNwdW1hc2sgKmRlc3QsIGJvb2wgZm9yY2UpCkBAIC0xNTMxLDcgKzE1MzEsNyBA
QCBFWFBPUlRfU1lNQk9MX0dQTChpcnFfY2hpcF9yZWxlYXNlX3Jlc291cmNlc19wYXJlbnQpOwog
I2VuZGlmCiAKIC8qKgotICogaXJxX2NoaXBfY29tcG9zZV9tc2lfbXNnIC0gQ29tcG9uc2UgbXNp
IG1lc3NhZ2UgZm9yIGEgaXJxIGNoaXAKKyAqIGlycV9jaGlwX2NvbXBvc2VfbXNpX21zZyAtIENv
bXBvc2UgbXNpIG1lc3NhZ2UgZm9yIGEgaXJxIGNoaXAKICAqIEBkYXRhOglQb2ludGVyIHRvIGlu
dGVycnVwdCBzcGVjaWZpYyBkYXRhCiAgKiBAbXNnOglQb2ludGVyIHRvIHRoZSBNU0kgbWVzc2Fn
ZQogICoKZGlmZiAtLWdpdCBhL2tlcm5lbC9pcnEvZHVtbXljaGlwLmMgYi9rZXJuZWwvaXJxL2R1
bW15Y2hpcC5jCmluZGV4IDBiMGNkZjIwNmRjNC4uN2ZlNmNmZmU3ZDBkIDEwMDY0NAotLS0gYS9r
ZXJuZWwvaXJxL2R1bW15Y2hpcC5jCisrKyBiL2tlcm5lbC9pcnEvZHVtbXljaGlwLmMKQEAgLTEz
LDcgKzEzLDcgQEAKIAogLyoKICAqIFdoYXQgc2hvdWxkIHdlIGRvIGlmIHdlIGdldCBhIGh3IGly
cSBldmVudCBvbiBhbiBpbGxlZ2FsIHZlY3Rvcj8KLSAqIEVhY2ggYXJjaGl0ZWN0dXJlIGhhcyB0
byBhbnN3ZXIgdGhpcyB0aGVtc2VsZi4KKyAqIEVhY2ggYXJjaGl0ZWN0dXJlIGhhcyB0byBhbnN3
ZXIgdGhpcyB0aGVtc2VsdmVzLgogICovCiBzdGF0aWMgdm9pZCBhY2tfYmFkKHN0cnVjdCBpcnFf
ZGF0YSAqZGF0YSkKIHsKZGlmZiAtLWdpdCBhL2tlcm5lbC9pcnEvaXBpLmMgYi9rZXJuZWwvaXJx
L2lwaS5jCmluZGV4IDQzZTNkMWJlNjIyYy4uNTJmMTFjNzkxYmY4IDEwMDY0NAotLS0gYS9rZXJu
ZWwvaXJxL2lwaS5jCisrKyBiL2tlcm5lbC9pcnEvaXBpLmMKQEAgLTEwNyw3ICsxMDcsNyBAQCBp
bnQgaXJxX3Jlc2VydmVfaXBpKHN0cnVjdCBpcnFfZG9tYWluICpkb21haW4sCiAgKiBAaXJxOgls
aW51eCBpcnEgbnVtYmVyIHRvIGJlIGRlc3Ryb3llZAogICogQGRlc3Q6CWNwdW1hc2sgb2YgY3B1
cyB3aGljaCBzaG91bGQgaGF2ZSB0aGUgSVBJIHJlbW92ZWQKICAqCi0gKiBUaGUgSVBJcyBhbGxv
Y2F0ZWQgd2l0aCBpcnFfcmVzZXJ2ZV9pcGkoKSBhcmUgcmV0dWVybmVkIHRvIHRoZSBzeXN0ZW0K
KyAqIFRoZSBJUElzIGFsbG9jYXRlZCB3aXRoIGlycV9yZXNlcnZlX2lwaSgpIGFyZSByZXR1cm5l
ZCB0byB0aGUgc3lzdGVtCiAgKiBkZXN0cm95aW5nIGFsbCB2aXJxcyBhc3NvY2lhdGVkIHdpdGgg
dGhlbS4KICAqCiAgKiBSZXR1cm4gMCBvbiBzdWNjZXNzIG9yIGVycm9yIGNvZGUgb24gZmFpbHVy
ZS4KZGlmZiAtLWdpdCBhL2tlcm5lbC9pcnEvaXJxX3NpbS5jIGIva2VybmVsL2lycS9pcnFfc2lt
LmMKaW5kZXggNDgwMDY2MDhiYWYwLi42ZTkzNWQ0ZDFlYzUgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9p
cnEvaXJxX3NpbS5jCisrKyBiL2tlcm5lbC9pcnEvaXJxX3NpbS5jCkBAIC0yNCwxMCArMjQsNiBA
QCBzdHJ1Y3QgaXJxX3NpbV9pcnFfY3R4IHsKIAlzdHJ1Y3QgaXJxX3NpbV93b3JrX2N0eAkqd29y
a19jdHg7CiB9OwogCi1zdHJ1Y3QgaXJxX3NpbV9kZXZyZXMgewotCXN0cnVjdCBpcnFfZG9tYWlu
CSpkb21haW47Ci19OwotCiBzdGF0aWMgdm9pZCBpcnFfc2ltX2lycW1hc2soc3RydWN0IGlycV9k
YXRhICpkYXRhKQogewogCXN0cnVjdCBpcnFfc2ltX2lycV9jdHggKmlycV9jdHggPSBpcnFfZGF0
YV9nZXRfaXJxX2NoaXBfZGF0YShkYXRhKTsKQEAgLTIxNiwxMSArMjEyLDExIEBAIHZvaWQgaXJx
X2RvbWFpbl9yZW1vdmVfc2ltKHN0cnVjdCBpcnFfZG9tYWluICpkb21haW4pCiB9CiBFWFBPUlRf
U1lNQk9MX0dQTChpcnFfZG9tYWluX3JlbW92ZV9zaW0pOwogCi1zdGF0aWMgdm9pZCBkZXZtX2ly
cV9kb21haW5fcmVsZWFzZV9zaW0oc3RydWN0IGRldmljZSAqZGV2LCB2b2lkICpyZXMpCitzdGF0
aWMgdm9pZCBkZXZtX2lycV9kb21haW5fcmVtb3ZlX3NpbSh2b2lkICpkYXRhKQogewotCXN0cnVj
dCBpcnFfc2ltX2RldnJlcyAqdGhpcyA9IHJlczsKKwlzdHJ1Y3QgaXJxX2RvbWFpbiAqZG9tYWlu
ID0gZGF0YTsKIAotCWlycV9kb21haW5fcmVtb3ZlX3NpbSh0aGlzLT5kb21haW4pOworCWlycV9k
b21haW5fcmVtb3ZlX3NpbShkb21haW4pOwogfQogCiAvKioKQEAgLTIzOCwyMCArMjM0LDE3IEBA
IHN0cnVjdCBpcnFfZG9tYWluICpkZXZtX2lycV9kb21haW5fY3JlYXRlX3NpbShzdHJ1Y3QgZGV2
aWNlICpkZXYsCiAJCQkJCSAgICAgIHN0cnVjdCBmd25vZGVfaGFuZGxlICpmd25vZGUsCiAJCQkJ
CSAgICAgIHVuc2lnbmVkIGludCBudW1faXJxcykKIHsKLQlzdHJ1Y3QgaXJxX3NpbV9kZXZyZXMg
KmRyOworCXN0cnVjdCBpcnFfZG9tYWluICpkb21haW47CisJaW50IHJldDsKIAotCWRyID0gZGV2
cmVzX2FsbG9jKGRldm1faXJxX2RvbWFpbl9yZWxlYXNlX3NpbSwKLQkJCSAgc2l6ZW9mKCpkciks
IEdGUF9LRVJORUwpOwotCWlmICghZHIpCi0JCXJldHVybiBFUlJfUFRSKC1FTk9NRU0pOworCWRv
bWFpbiA9IGlycV9kb21haW5fY3JlYXRlX3NpbShmd25vZGUsIG51bV9pcnFzKTsKKwlpZiAoSVNf
RVJSKGRvbWFpbikpCisJCXJldHVybiBkb21haW47CiAKLQlkci0+ZG9tYWluID0gaXJxX2RvbWFp
bl9jcmVhdGVfc2ltKGZ3bm9kZSwgbnVtX2lycXMpOwotCWlmIChJU19FUlIoZHItPmRvbWFpbikp
IHsKLQkJZGV2cmVzX2ZyZWUoZHIpOwotCQlyZXR1cm4gZHItPmRvbWFpbjsKLQl9CisJcmV0ID0g
ZGV2bV9hZGRfYWN0aW9uX29yX3Jlc2V0KGRldiwgZGV2bV9pcnFfZG9tYWluX3JlbW92ZV9zaW0s
IGRvbWFpbik7CisJaWYgKHJldCkKKwkJcmV0dXJuIEVSUl9QVFIocmV0KTsKIAotCWRldnJlc19h
ZGQoZGV2LCBkcik7Ci0JcmV0dXJuIGRyLT5kb21haW47CisJcmV0dXJuIGRvbWFpbjsKIH0KIEVY
UE9SVF9TWU1CT0xfR1BMKGRldm1faXJxX2RvbWFpbl9jcmVhdGVfc2ltKTsKZGlmZiAtLWdpdCBh
L2tlcm5lbC9pcnEvaXJxZGVzYy5jIGIva2VybmVsL2lycS9pcnFkZXNjLmMKaW5kZXggY2MxYTA5
NDA2YzZlLi40YTYxN2Q3MzEyYTQgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9pcnEvaXJxZGVzYy5jCisr
KyBiL2tlcm5lbC9pcnEvaXJxZGVzYy5jCkBAIC0zMSw3ICszMSw3IEBAIHN0YXRpYyBpbnQgX19p
bml0IGlycV9hZmZpbml0eV9zZXR1cChjaGFyICpzdHIpCiAJY3B1bGlzdF9wYXJzZShzdHIsIGly
cV9kZWZhdWx0X2FmZmluaXR5KTsKIAkvKgogCSAqIFNldCBhdCBsZWFzdCB0aGUgYm9vdCBjcHUu
IFdlIGRvbid0IHdhbnQgdG8gZW5kIHVwIHdpdGgKLQkgKiBidWdyZXBvcnRzIGNhdXNlZCBieSBy
YW5kb20gY29tYW5kbGluZSBtYXNrcworCSAqIGJ1Z3JlcG9ydHMgY2F1c2VkIGJ5IHJhbmRvbSBj
b21tYW5kbGluZSBtYXNrcwogCSAqLwogCWNwdW1hc2tfc2V0X2NwdShzbXBfcHJvY2Vzc29yX2lk
KCksIGlycV9kZWZhdWx0X2FmZmluaXR5KTsKIAlyZXR1cm4gMTsKZGlmZiAtLWdpdCBhL2tlcm5l
bC9pcnEvaXJxZG9tYWluLmMgYi9rZXJuZWwvaXJxL2lycWRvbWFpbi5jCmluZGV4IGQxMGFiMWQ2
ODlkNS4uZjQyZWY4NjhlZmQzIDEwMDY0NAotLS0gYS9rZXJuZWwvaXJxL2lycWRvbWFpbi5jCisr
KyBiL2tlcm5lbC9pcnEvaXJxZG9tYWluLmMKQEAgLTYyLDcgKzYyLDcgQEAgRVhQT1JUX1NZTUJP
TF9HUEwoaXJxY2hpcF9md25vZGVfb3BzKTsKICAqIEBuYW1lOglPcHRpb25hbCB1c2VyIHByb3Zp
ZGVkIGRvbWFpbiBuYW1lCiAgKiBAcGE6CQlPcHRpb25hbCB1c2VyLXByb3ZpZGVkIHBoeXNpY2Fs
IGFkZHJlc3MKICAqCi0gKiBBbGxvY2F0ZSBhIHN0cnVjdCBpcnFjaGlwX2Z3aWQsIGFuZCByZXR1
cm4gYSBwb2luZXIgdG8gdGhlIGVtYmVkZGVkCisgKiBBbGxvY2F0ZSBhIHN0cnVjdCBpcnFjaGlw
X2Z3aWQsIGFuZCByZXR1cm4gYSBwb2ludGVyIHRvIHRoZSBlbWJlZGRlZAogICogZndub2RlX2hh
bmRsZSAob3IgTlVMTCBvbiBmYWlsdXJlKS4KICAqCiAgKiBOb3RlOiBUaGUgdHlwZXMgSVJRQ0hJ
UF9GV05PREVfTkFNRUQgYW5kIElSUUNISVBfRldOT0RFX05BTUVEX0lEIGFyZQpAQCAtNjY1LDcg
KzY2NSw3IEBAIHVuc2lnbmVkIGludCBpcnFfY3JlYXRlX21hcHBpbmdfYWZmaW5pdHkoc3RydWN0
IGlycV9kb21haW4gKmRvbWFpbiwKIAogCXByX2RlYnVnKCJpcnFfY3JlYXRlX21hcHBpbmcoMHgl
cCwgMHglbHgpXG4iLCBkb21haW4sIGh3aXJxKTsKIAotCS8qIExvb2sgZm9yIGRlZmF1bHQgZG9t
YWluIGlmIG5lY2Vjc3NhcnkgKi8KKwkvKiBMb29rIGZvciBkZWZhdWx0IGRvbWFpbiBpZiBuZWNl
c3NhcnkgKi8KIAlpZiAoZG9tYWluID09IE5VTEwpCiAJCWRvbWFpbiA9IGlycV9kZWZhdWx0X2Rv
bWFpbjsKIAlpZiAoZG9tYWluID09IE5VTEwpIHsKQEAgLTcwMyw0MSArNzAzLDYgQEAgdW5zaWdu
ZWQgaW50IGlycV9jcmVhdGVfbWFwcGluZ19hZmZpbml0eShzdHJ1Y3QgaXJxX2RvbWFpbiAqZG9t
YWluLAogfQogRVhQT1JUX1NZTUJPTF9HUEwoaXJxX2NyZWF0ZV9tYXBwaW5nX2FmZmluaXR5KTsK
IAotLyoqCi0gKiBpcnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncygpIC0gTWFwIGEgcmFuZ2Ugb2Yg
aHcgaXJxcyB0byBmaXhlZCBsaW51eCBpcnFzCi0gKiBAZG9tYWluOiBkb21haW4gb3duaW5nIHRo
ZSBpbnRlcnJ1cHQgcmFuZ2UKLSAqIEBpcnFfYmFzZTogYmVnaW5uaW5nIG9mIGxpbnV4IElSUSBy
YW5nZQotICogQGh3aXJxX2Jhc2U6IGJlZ2lubmluZyBvZiBoYXJkd2FyZSBJUlEgcmFuZ2UKLSAq
IEBjb3VudDogTnVtYmVyIG9mIGludGVycnVwdHMgdG8gbWFwCi0gKgotICogVGhpcyByb3V0aW5l
IGlzIHVzZWQgZm9yIGFsbG9jYXRpbmcgYW5kIG1hcHBpbmcgYSByYW5nZSBvZiBoYXJkd2FyZQot
ICogaXJxcyB0byBsaW51eCBpcnFzIHdoZXJlIHRoZSBsaW51eCBpcnEgbnVtYmVycyBhcmUgYXQg
cHJlLWRlZmluZWQKLSAqIGxvY2F0aW9ucy4gRm9yIHVzZSBieSBjb250cm9sbGVycyB0aGF0IGFs
cmVhZHkgaGF2ZSBzdGF0aWMgbWFwcGluZ3MKLSAqIHRvIGluc2VydCBpbiB0byB0aGUgZG9tYWlu
LgotICoKLSAqIE5vbi1saW5lYXIgdXNlcnMgY2FuIHVzZSBpcnFfY3JlYXRlX2lkZW50aXR5X21h
cHBpbmcoKSBmb3IgSVJRLWF0LWEtdGltZQotICogZG9tYWluIGluc2VydGlvbi4KLSAqCi0gKiAw
IGlzIHJldHVybmVkIHVwb24gc3VjY2Vzcywgd2hpbGUgYW55IGZhaWx1cmUgdG8gZXN0YWJsaXNo
IGEgc3RhdGljCi0gKiBtYXBwaW5nIGlzIHRyZWF0ZWQgYXMgYW4gZXJyb3IuCi0gKi8KLWludCBp
cnFfY3JlYXRlX3N0cmljdF9tYXBwaW5ncyhzdHJ1Y3QgaXJxX2RvbWFpbiAqZG9tYWluLCB1bnNp
Z25lZCBpbnQgaXJxX2Jhc2UsCi0JCQkgICAgICAgaXJxX2h3X251bWJlcl90IGh3aXJxX2Jhc2Us
IGludCBjb3VudCkKLXsKLQlzdHJ1Y3QgZGV2aWNlX25vZGUgKm9mX25vZGU7Ci0JaW50IHJldDsK
LQotCW9mX25vZGUgPSBpcnFfZG9tYWluX2dldF9vZl9ub2RlKGRvbWFpbik7Ci0JcmV0ID0gaXJx
X2FsbG9jX2Rlc2NzKGlycV9iYXNlLCBpcnFfYmFzZSwgY291bnQsCi0JCQkgICAgICBvZl9ub2Rl
X3RvX25pZChvZl9ub2RlKSk7Ci0JaWYgKHVubGlrZWx5KHJldCA8IDApKQotCQlyZXR1cm4gcmV0
OwotCi0JaXJxX2RvbWFpbl9hc3NvY2lhdGVfbWFueShkb21haW4sIGlycV9iYXNlLCBod2lycV9i
YXNlLCBjb3VudCk7Ci0JcmV0dXJuIDA7Ci19Ci1FWFBPUlRfU1lNQk9MX0dQTChpcnFfY3JlYXRl
X3N0cmljdF9tYXBwaW5ncyk7Ci0KIHN0YXRpYyBpbnQgaXJxX2RvbWFpbl90cmFuc2xhdGUoc3Ry
dWN0IGlycV9kb21haW4gKmQsCiAJCQkJc3RydWN0IGlycV9md3NwZWMgKmZ3c3BlYywKIAkJCQlp
cnFfaHdfbnVtYmVyX3QgKmh3aXJxLCB1bnNpZ25lZCBpbnQgKnR5cGUpCkBAIC05MDYsNyArODcx
LDcgQEAgdW5zaWduZWQgaW50IGlycV9maW5kX21hcHBpbmcoc3RydWN0IGlycV9kb21haW4gKmRv
bWFpbiwKIHsKIAlzdHJ1Y3QgaXJxX2RhdGEgKmRhdGE7CiAKLQkvKiBMb29rIGZvciBkZWZhdWx0
IGRvbWFpbiBpZiBuZWNlY3NzYXJ5ICovCisJLyogTG9vayBmb3IgZGVmYXVsdCBkb21haW4gaWYg
bmVjZXNzYXJ5ICovCiAJaWYgKGRvbWFpbiA9PSBOVUxMKQogCQlkb21haW4gPSBpcnFfZGVmYXVs
dF9kb21haW47CiAJaWYgKGRvbWFpbiA9PSBOVUxMKQpAQCAtMTQzNiw3ICsxNDAxLDcgQEAgaW50
IGlycV9kb21haW5fYWxsb2NfaXJxc19oaWVyYXJjaHkoc3RydWN0IGlycV9kb21haW4gKmRvbWFp
biwKICAqIFRoZSB3aG9sZSBwcm9jZXNzIHRvIHNldHVwIGFuIElSUSBoYXMgYmVlbiBzcGxpdCBp
bnRvIHR3byBzdGVwcy4KICAqIFRoZSBmaXJzdCBzdGVwLCBfX2lycV9kb21haW5fYWxsb2NfaXJx
cygpLCBpcyB0byBhbGxvY2F0ZSBJUlEKICAqIGRlc2NyaXB0b3IgYW5kIHJlcXVpcmVkIGhhcmR3
YXJlIHJlc291cmNlcy4gVGhlIHNlY29uZCBzdGVwLAotICogaXJxX2RvbWFpbl9hY3RpdmF0ZV9p
cnEoKSwgaXMgdG8gcHJvZ3JhbSBoYXJkd2FyZXMgd2l0aCBwcmVhbGxvY2F0ZWQKKyAqIGlycV9k
b21haW5fYWN0aXZhdGVfaXJxKCksIGlzIHRvIHByb2dyYW0gdGhlIGhhcmR3YXJlIHdpdGggcHJl
YWxsb2NhdGVkCiAgKiByZXNvdXJjZXMuIEluIHRoaXMgd2F5LCBpdCdzIGVhc2llciB0byByb2xs
YmFjayB3aGVuIGZhaWxpbmcgdG8KICAqIGFsbG9jYXRlIHJlc291cmNlcy4KICAqLwpAQCAtMTY5
NCwxMiArMTY1OSwxMCBAQCB2b2lkIGlycV9kb21haW5fZnJlZV9pcnFzKHVuc2lnbmVkIGludCB2
aXJxLCB1bnNpZ25lZCBpbnQgbnJfaXJxcykKIAogLyoqCiAgKiBpcnFfZG9tYWluX2FsbG9jX2ly
cXNfcGFyZW50IC0gQWxsb2NhdGUgaW50ZXJydXB0cyBmcm9tIHBhcmVudCBkb21haW4KKyAqIEBk
b21haW46CURvbWFpbiBiZWxvdyB3aGljaCBpbnRlcnJ1cHRzIG11c3QgYmUgYWxsb2NhdGVkCiAg
KiBAaXJxX2Jhc2U6CUJhc2UgSVJRIG51bWJlcgogICogQG5yX2lycXM6CU51bWJlciBvZiBJUlFz
IHRvIGFsbG9jYXRlCiAgKiBAYXJnOglBbGxvY2F0aW9uIGRhdGEgKGFyY2gvZG9tYWluIHNwZWNp
ZmljKQotICoKLSAqIENoZWNrIHdoZXRoZXIgdGhlIGRvbWFpbiBoYXMgYmVlbiBzZXR1cCByZWN1
cnNpdmUuIElmIG5vdCBhbGxvY2F0ZQotICogdGhyb3VnaCB0aGUgcGFyZW50IGRvbWFpbi4KICAq
LwogaW50IGlycV9kb21haW5fYWxsb2NfaXJxc19wYXJlbnQoc3RydWN0IGlycV9kb21haW4gKmRv
bWFpbiwKIAkJCQkgdW5zaWduZWQgaW50IGlycV9iYXNlLCB1bnNpZ25lZCBpbnQgbnJfaXJxcywK
QEAgLTE3MTUsMTEgKzE2NzgsOSBAQCBFWFBPUlRfU1lNQk9MX0dQTChpcnFfZG9tYWluX2FsbG9j
X2lycXNfcGFyZW50KTsKIAogLyoqCiAgKiBpcnFfZG9tYWluX2ZyZWVfaXJxc19wYXJlbnQgLSBG
cmVlIGludGVycnVwdHMgZnJvbSBwYXJlbnQgZG9tYWluCisgKiBAZG9tYWluOglEb21haW4gYmVs
b3cgd2hpY2ggaW50ZXJydXB0cyBtdXN0IGJlIGZyZWVkCiAgKiBAaXJxX2Jhc2U6CUJhc2UgSVJR
IG51bWJlcgogICogQG5yX2lycXM6CU51bWJlciBvZiBJUlFzIHRvIGZyZWUKLSAqCi0gKiBDaGVj
ayB3aGV0aGVyIHRoZSBkb21haW4gaGFzIGJlZW4gc2V0dXAgcmVjdXJzaXZlLiBJZiBub3QgZnJl
ZQotICogdGhyb3VnaCB0aGUgcGFyZW50IGRvbWFpbi4KICAqLwogdm9pZCBpcnFfZG9tYWluX2Zy
ZWVfaXJxc19wYXJlbnQoc3RydWN0IGlycV9kb21haW4gKmRvbWFpbiwKIAkJCQkgdW5zaWduZWQg
aW50IGlycV9iYXNlLCB1bnNpZ25lZCBpbnQgbnJfaXJxcykKZGlmZiAtLWdpdCBhL2tlcm5lbC9p
cnEvbWFuYWdlLmMgYi9rZXJuZWwvaXJxL21hbmFnZS5jCmluZGV4IGRlYzNmNzNlOGRiOS4uZTk3
NmM0OTI3YjI1IDEwMDY0NAotLS0gYS9rZXJuZWwvaXJxL21hbmFnZS5jCisrKyBiL2tlcm5lbC9p
cnEvbWFuYWdlLmMKQEAgLTE3OSw3ICsxNzksNyBAQCBib29sIGlycV9jYW5fc2V0X2FmZmluaXR5
X3Vzcih1bnNpZ25lZCBpbnQgaXJxKQogCiAvKioKICAqCWlycV9zZXRfdGhyZWFkX2FmZmluaXR5
IC0gTm90aWZ5IGlycSB0aHJlYWRzIHRvIGFkanVzdCBhZmZpbml0eQotICoJQGRlc2M6CQlpcnEg
ZGVzY3JpcHRvciB3aGljaCBoYXMgYWZmaXRuaXR5IGNoYW5nZWQKKyAqCUBkZXNjOgkJaXJxIGRl
c2NyaXB0b3Igd2hpY2ggaGFzIGFmZmluaXR5IGNoYW5nZWQKICAqCiAgKglXZSBqdXN0IHNldCBJ
UlFURl9BRkZJTklUWSBhbmQgZGVsZWdhdGUgdGhlIGFmZmluaXR5IHNldHRpbmcKICAqCXRvIHRo
ZSBpbnRlcnJ1cHQgdGhyZWFkIGl0c2VsZi4gV2UgY2FuIG5vdCBjYWxsCkBAIC0zMjYsNyArMzI2
LDcgQEAgc3RhdGljIGJvb2wgaXJxX3NldF9hZmZpbml0eV9kZWFjdGl2YXRlZChzdHJ1Y3QgaXJx
X2RhdGEgKmRhdGEsCiAJICogSWYgdGhlIGludGVycnVwdCBpcyBub3QgeWV0IGFjdGl2YXRlZCwg
anVzdCBzdG9yZSB0aGUgYWZmaW5pdHkKIAkgKiBtYXNrIGFuZCBkbyBub3QgY2FsbCB0aGUgY2hp
cCBkcml2ZXIgYXQgYWxsLiBPbiBhY3RpdmF0aW9uIHRoZQogCSAqIGRyaXZlciBoYXMgdG8gbWFr
ZSBzdXJlIGFueXdheSB0aGF0IHRoZSBpbnRlcnJ1cHQgaXMgaW4gYQotCSAqIHVzZWFibGUgc3Rh
dGUgc28gc3RhcnR1cCB3b3Jrcy4KKwkgKiB1c2FibGUgc3RhdGUgc28gc3RhcnR1cCB3b3Jrcy4K
IAkgKi8KIAlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0lSUV9ET01BSU5fSElFUkFSQ0hZKSB8fAog
CSAgICBpcnFkX2lzX2FjdGl2YXRlZChkYXRhKSB8fCAhaXJxZF9hZmZpbml0eV9vbl9hY3RpdmF0
ZShkYXRhKSkKQEAgLTEwNTQsNyArMTA1NCw3IEBAIHN0YXRpYyB2b2lkIGlycV9maW5hbGl6ZV9v
bmVzaG90KHN0cnVjdCBpcnFfZGVzYyAqZGVzYywKIAkgKiB0byBJUlFTX0lOUFJPR1JFU1MgYW5k
IHRoZSBpcnEgbGluZSBpcyBtYXNrZWQgZm9yZXZlci4KIAkgKgogCSAqIFRoaXMgYWxzbyBzZXJp
YWxpemVzIHRoZSBzdGF0ZSBvZiBzaGFyZWQgb25lc2hvdCBoYW5kbGVycwotCSAqIHZlcnN1cyAi
ZGVzYy0+dGhyZWFkc19vbmVoc290IHw9IGFjdGlvbi0+dGhyZWFkX21hc2s7IiBpbgorCSAqIHZl
cnN1cyAiZGVzYy0+dGhyZWFkc19vbmVzaG90IHw9IGFjdGlvbi0+dGhyZWFkX21hc2s7IiBpbgog
CSAqIGlycV93YWtlX3RocmVhZCgpLiBTZWUgdGhlIGNvbW1lbnQgdGhlcmUgd2hpY2ggZXhwbGFp
bnMgdGhlCiAJICogc2VyaWFsaXphdGlvbi4KIAkgKi8KQEAgLTExNTMsNyArMTE1Myw3IEBAIGly
cV9mb3JjZWRfdGhyZWFkX2ZuKHN0cnVjdCBpcnFfZGVzYyAqZGVzYywgc3RydWN0IGlycWFjdGlv
biAqYWN0aW9uKQogCiAvKgogICogSW50ZXJydXB0cyBleHBsaWNpdGx5IHJlcXVlc3RlZCBhcyB0
aHJlYWRlZCBpbnRlcnJ1cHRzIHdhbnQgdG8gYmUKLSAqIHByZWVtdGlibGUgLSBtYW55IG9mIHRo
ZW0gbmVlZCB0byBzbGVlcCBhbmQgd2FpdCBmb3Igc2xvdyBidXNzZXMgdG8KKyAqIHByZWVtcHRp
YmxlIC0gbWFueSBvZiB0aGVtIG5lZWQgdG8gc2xlZXAgYW5kIHdhaXQgZm9yIHNsb3cgYnVzc2Vz
IHRvCiAgKiBjb21wbGV0ZS4KICAqLwogc3RhdGljIGlycXJldHVybl90IGlycV90aHJlYWRfZm4o
c3RydWN0IGlycV9kZXNjICpkZXNjLApAQCAtMTY5Myw3ICsxNjkzLDggQEAgX19zZXR1cF9pcnEo
dW5zaWduZWQgaW50IGlycSwgc3RydWN0IGlycV9kZXNjICpkZXNjLCBzdHJ1Y3QgaXJxYWN0aW9u
ICpuZXcpCiAJCQlpcnFkX3NldCgmZGVzYy0+aXJxX2RhdGEsIElSUURfTk9fQkFMQU5DSU5HKTsK
IAkJfQogCi0JCWlmIChpcnFfc2V0dGluZ3NfY2FuX2F1dG9lbmFibGUoZGVzYykpIHsKKwkJaWYg
KCEobmV3LT5mbGFncyAmIElSUUZfTk9fQVVUT0VOKSAmJgorCQkgICAgaXJxX3NldHRpbmdzX2Nh
bl9hdXRvZW5hYmxlKGRlc2MpKSB7CiAJCQlpcnFfc3RhcnR1cChkZXNjLCBJUlFfUkVTRU5ELCBJ
UlFfU1RBUlRfQ09ORCk7CiAJCX0gZWxzZSB7CiAJCQkvKgpAQCAtMTkwOCw3ICsxOTA5LDcgQEAg
c3RhdGljIHN0cnVjdCBpcnFhY3Rpb24gKl9fZnJlZV9pcnEoc3RydWN0IGlycV9kZXNjICpkZXNj
LCB2b2lkICpkZXZfaWQpCiAJLyogTGFzdCBhY3Rpb24gcmVsZWFzZXMgcmVzb3VyY2VzICovCiAJ
aWYgKCFkZXNjLT5hY3Rpb24pIHsKIAkJLyoKLQkJICogUmVhcXVpcmUgYnVzIGxvY2sgYXMgaXJx
X3JlbGVhc2VfcmVzb3VyY2VzKCkgbWlnaHQKKwkJICogUmVhY3F1aXJlIGJ1cyBsb2NrIGFzIGly
cV9yZWxlYXNlX3Jlc291cmNlcygpIG1pZ2h0CiAJCSAqIHJlcXVpcmUgaXQgdG8gZGVhbGxvY2F0
ZSByZXNvdXJjZXMgb3ZlciB0aGUgc2xvdyBidXMuCiAJCSAqLwogCQljaGlwX2J1c19sb2NrKGRl
c2MpOwpAQCAtMjA4NiwxMCArMjA4NywxNSBAQCBpbnQgcmVxdWVzdF90aHJlYWRlZF9pcnEodW5z
aWduZWQgaW50IGlycSwgaXJxX2hhbmRsZXJfdCBoYW5kbGVyLAogCSAqIHdoaWNoIGludGVycnVw
dCBpcyB3aGljaCAobWVzc2VzIHVwIHRoZSBpbnRlcnJ1cHQgZnJlZWluZwogCSAqIGxvZ2ljIGV0
YykuCiAJICoKKwkgKiBBbHNvIHNoYXJlZCBpbnRlcnJ1cHRzIGRvIG5vdCBnbyB3ZWxsIHdpdGgg
ZGlzYWJsaW5nIGF1dG8gZW5hYmxlLgorCSAqIFRoZSBzaGFyaW5nIGludGVycnVwdCBtaWdodCBy
ZXF1ZXN0IGl0IHdoaWxlIGl0J3Mgc3RpbGwgZGlzYWJsZWQKKwkgKiBhbmQgdGhlbiB3YWl0IGZv
ciBpbnRlcnJ1cHRzIGZvcmV2ZXIuCisJICoKIAkgKiBBbHNvIElSUUZfQ09ORF9TVVNQRU5EIG9u
bHkgbWFrZXMgc2Vuc2UgZm9yIHNoYXJlZCBpbnRlcnJ1cHRzIGFuZAogCSAqIGl0IGNhbm5vdCBi
ZSBzZXQgYWxvbmcgd2l0aCBJUlFGX05PX1NVU1BFTkQuCiAJICovCiAJaWYgKCgoaXJxZmxhZ3Mg
JiBJUlFGX1NIQVJFRCkgJiYgIWRldl9pZCkgfHwKKwkgICAgKChpcnFmbGFncyAmIElSUUZfU0hB
UkVEKSAmJiAoaXJxZmxhZ3MgJiBJUlFGX05PX0FVVE9FTikpIHx8CiAJICAgICghKGlycWZsYWdz
ICYgSVJRRl9TSEFSRUQpICYmIChpcnFmbGFncyAmIElSUUZfQ09ORF9TVVNQRU5EKSkgfHwKIAkg
ICAgKChpcnFmbGFncyAmIElSUUZfTk9fU1VTUEVORCkgJiYgKGlycWZsYWdzICYgSVJRRl9DT05E
X1NVU1BFTkQpKSkKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC0yMjQ1LDcgKzIyNTEsOCBAQCBpbnQg
cmVxdWVzdF9ubWkodW5zaWduZWQgaW50IGlycSwgaXJxX2hhbmRsZXJfdCBoYW5kbGVyLAogCiAJ
ZGVzYyA9IGlycV90b19kZXNjKGlycSk7CiAKLQlpZiAoIWRlc2MgfHwgaXJxX3NldHRpbmdzX2Nh
bl9hdXRvZW5hYmxlKGRlc2MpIHx8CisJaWYgKCFkZXNjIHx8IChpcnFfc2V0dGluZ3NfY2FuX2F1
dG9lbmFibGUoZGVzYykgJiYKKwkgICAgIShpcnFmbGFncyAmIElSUUZfTk9fQVVUT0VOKSkgfHwK
IAkgICAgIWlycV9zZXR0aW5nc19jYW5fcmVxdWVzdChkZXNjKSB8fAogCSAgICBXQVJOX09OKGly
cV9zZXR0aW5nc19pc19wZXJfY3B1X2RldmlkKGRlc2MpKSB8fAogCSAgICAhaXJxX3N1cHBvcnRz
X25taShkZXNjKSkKQEAgLTI3NDIsNyArMjc0OSw3IEBAIGludCBfX2lycV9nZXRfaXJxY2hpcF9z
dGF0ZShzdHJ1Y3QgaXJxX2RhdGEgKmRhdGEsIGVudW0gaXJxY2hpcF9pcnFfc3RhdGUgd2hpY2gs
CiAgKglpcnFfZ2V0X2lycWNoaXBfc3RhdGUgLSByZXR1cm5zIHRoZSBpcnFjaGlwIHN0YXRlIG9m
IGEgaW50ZXJydXB0LgogICoJQGlycTogSW50ZXJydXB0IGxpbmUgdGhhdCBpcyBmb3J3YXJkZWQg
dG8gYSBWTQogICoJQHdoaWNoOiBPbmUgb2YgSVJRQ0hJUF9TVEFURV8qIHRoZSBjYWxsZXIgd2Fu
dHMgdG8ga25vdyBhYm91dAotICoJQHN0YXRlOiBhIHBvaW50ZXIgdG8gYSBib29sZWFuIHdoZXJl
IHRoZSBzdGF0ZSBpcyB0byBiZSBzdG9yZWVkCisgKglAc3RhdGU6IGEgcG9pbnRlciB0byBhIGJv
b2xlYW4gd2hlcmUgdGhlIHN0YXRlIGlzIHRvIGJlIHN0b3JlZAogICoKICAqCVRoaXMgY2FsbCBz
bmFwc2hvdHMgdGhlIGludGVybmFsIGlycWNoaXAgc3RhdGUgb2YgYW4KICAqCWludGVycnVwdCwg
cmV0dXJuaW5nIGludG8gQHN0YXRlIHRoZSBiaXQgY29ycmVzcG9uZGluZyB0bwpkaWZmIC0tZ2l0
IGEva2VybmVsL2lycS9tYXRyaXguYyBiL2tlcm5lbC9pcnEvbWF0cml4LmMKaW5kZXggNjUxYTRh
ZDZkNzExLi41Nzg1OTZlNDFjYjYgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9pcnEvbWF0cml4LmMKKysr
IGIva2VybmVsL2lycS9tYXRyaXguYwpAQCAtMzM3LDE1ICszMzcsMTQgQEAgdm9pZCBpcnFfbWF0
cml4X2Fzc2lnbihzdHJ1Y3QgaXJxX21hdHJpeCAqbSwgdW5zaWduZWQgaW50IGJpdCkKICAqIGly
cV9tYXRyaXhfcmVzZXJ2ZSAtIFJlc2VydmUgaW50ZXJydXB0cwogICogQG06CQlNYXRyaXggcG9p
bnRlcgogICoKLSAqIFRoaXMgaXMgbWVyaWx5IGEgYm9vayBrZWVwaW5nIGNhbGwuIEl0IGluY3Jl
bWVudHMgdGhlIG51bWJlciBvZiBnbG9iYWxseQorICogVGhpcyBpcyBtZXJlbHkgYSBib29rIGtl
ZXBpbmcgY2FsbC4gSXQgaW5jcmVtZW50cyB0aGUgbnVtYmVyIG9mIGdsb2JhbGx5CiAgKiByZXNl
cnZlZCBpbnRlcnJ1cHQgYml0cyB3L28gYWN0dWFsbHkgYWxsb2NhdGluZyB0aGVtLiBUaGlzIGFs
bG93cyB0bwogICogc2V0dXAgaW50ZXJydXB0IGRlc2NyaXB0b3JzIHcvbyBhc3NpZ25pbmcgbG93
IGxldmVsIHJlc291cmNlcyB0byBpdC4KICAqIFRoZSBhY3R1YWwgYWxsb2NhdGlvbiBoYXBwZW5z
IHdoZW4gdGhlIGludGVycnVwdCBnZXRzIGFjdGl2YXRlZC4KICAqLwogdm9pZCBpcnFfbWF0cml4
X3Jlc2VydmUoc3RydWN0IGlycV9tYXRyaXggKm0pCiB7Ci0JaWYgKG0tPmdsb2JhbF9yZXNlcnZl
ZCA8PSBtLT5nbG9iYWxfYXZhaWxhYmxlICYmCi0JICAgIG0tPmdsb2JhbF9yZXNlcnZlZCArIDEg
PiBtLT5nbG9iYWxfYXZhaWxhYmxlKQorCWlmIChtLT5nbG9iYWxfcmVzZXJ2ZWQgPT0gbS0+Z2xv
YmFsX2F2YWlsYWJsZSkKIAkJcHJfd2FybigiSW50ZXJydXB0IHJlc2VydmF0aW9uIGV4Y2VlZHMg
YXZhaWxhYmxlIHJlc291cmNlc1xuIik7CiAKIAltLT5nbG9iYWxfcmVzZXJ2ZWQrKzsKQEAgLTM1
Niw3ICszNTUsNyBAQCB2b2lkIGlycV9tYXRyaXhfcmVzZXJ2ZShzdHJ1Y3QgaXJxX21hdHJpeCAq
bSkKICAqIGlycV9tYXRyaXhfcmVtb3ZlX3Jlc2VydmVkIC0gUmVtb3ZlIGludGVycnVwdCByZXNl
cnZhdGlvbgogICogQG06CQlNYXRyaXggcG9pbnRlcgogICoKLSAqIFRoaXMgaXMgbWVyaWx5IGEg
Ym9vayBrZWVwaW5nIGNhbGwuIEl0IGRlY3JlbWVudHMgdGhlIG51bWJlciBvZiBnbG9iYWxseQor
ICogVGhpcyBpcyBtZXJlbHkgYSBib29rIGtlZXBpbmcgY2FsbC4gSXQgZGVjcmVtZW50cyB0aGUg
bnVtYmVyIG9mIGdsb2JhbGx5CiAgKiByZXNlcnZlZCBpbnRlcnJ1cHQgYml0cy4gVGhpcyBpcyB1
c2VkIHRvIHVuZG8gaXJxX21hdHJpeF9yZXNlcnZlKCkgd2hlbiB0aGUKICAqIGludGVycnVwdCB3
YXMgbmV2ZXIgaW4gdXNlIGFuZCBhIHJlYWwgdmVjdG9yIGFsbG9jYXRlZCwgd2hpY2ggdW5kaWQg
dGhlCiAgKiByZXNlcnZhdGlvbi4KQEAgLTQyMyw3ICs0MjIsOSBAQCB2b2lkIGlycV9tYXRyaXhf
ZnJlZShzdHJ1Y3QgaXJxX21hdHJpeCAqbSwgdW5zaWduZWQgaW50IGNwdSwKIAlpZiAoV0FSTl9P
Tl9PTkNFKGJpdCA8IG0tPmFsbG9jX3N0YXJ0IHx8IGJpdCA+PSBtLT5hbGxvY19lbmQpKQogCQly
ZXR1cm47CiAKLQljbGVhcl9iaXQoYml0LCBjbS0+YWxsb2NfbWFwKTsKKwlpZiAoV0FSTl9PTl9P
TkNFKCF0ZXN0X2FuZF9jbGVhcl9iaXQoYml0LCBjbS0+YWxsb2NfbWFwKSkpCisJCXJldHVybjsK
KwogCWNtLT5hbGxvY2F0ZWQtLTsKIAlpZihtYW5hZ2VkKQogCQljbS0+bWFuYWdlZF9hbGxvY2F0
ZWQtLTsKZGlmZiAtLWdpdCBhL2tlcm5lbC9pcnEvbWlncmF0aW9uLmMgYi9rZXJuZWwvaXJxL21p
Z3JhdGlvbi5jCmluZGV4IGRlZjQ4NTg5ZWE0OC4uNjFjYTkyNGVmNGI0IDEwMDY0NAotLS0gYS9r
ZXJuZWwvaXJxL21pZ3JhdGlvbi5jCisrKyBiL2tlcm5lbC9pcnEvbWlncmF0aW9uLmMKQEAgLTcs
NyArNyw3IEBACiAKIC8qKgogICogaXJxX2ZpeHVwX21vdmVfcGVuZGluZyAtIENsZWFudXAgaXJx
IG1vdmUgcGVuZGluZyBmcm9tIGEgZHlpbmcgQ1BVCi0gKiBAZGVzYzoJCUludGVycnVwdCBkZXNj
cHJpcHRvciB0byBjbGVhbiB1cAorICogQGRlc2M6CQlJbnRlcnJ1cHQgZGVzY3JpcHRvciB0byBj
bGVhbiB1cAogICogQGZvcmNlX2NsZWFyOglJZiBzZXQgY2xlYXIgdGhlIG1vdmUgcGVuZGluZyBi
aXQgdW5jb25kaXRpb25hbGx5LgogICoJCQlJZiBub3Qgc2V0LCBjbGVhciBpdCBvbmx5IHdoZW4g
dGhlIGR5aW5nIENQVSBpcyB0aGUKICAqCQkJbGFzdCBvbmUgaW4gdGhlIHBlbmRpbmcgbWFzay4K
ZGlmZiAtLWdpdCBhL2tlcm5lbC9pcnEvbXNpLmMgYi9rZXJuZWwvaXJxL21zaS5jCmluZGV4IGIz
MzhkNjIyZjI2ZS4uYzQxOTY1ZTM0OGI1IDEwMDY0NAotLS0gYS9rZXJuZWwvaXJxL21zaS5jCisr
KyBiL2tlcm5lbC9pcnEvbXNpLmMKQEAgLTUsNyArNSw3IEBACiAgKgogICogVGhpcyBmaWxlIGlz
IGxpY2Vuc2VkIHVuZGVyIEdQTHYyLgogICoKLSAqIFRoaXMgZmlsZSBjb250YWlucyBjb21tb24g
Y29kZSB0byBzdXBwb3J0IE1lc3NhZ2UgU2lnbmFsbGVkIEludGVycnVwdCBmb3IKKyAqIFRoaXMg
ZmlsZSBjb250YWlucyBjb21tb24gY29kZSB0byBzdXBwb3J0IE1lc3NhZ2UgU2lnbmFsZWQgSW50
ZXJydXB0cyBmb3IKICAqIFBDSSBjb21wYXRpYmxlIGFuZCBub24gUENJIGNvbXBhdGlibGUgZGV2
aWNlcy4KICAqLwogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CmRpZmYgLS1naXQgYS9rZXJuZWwv
aXJxL3Byb2MuYyBiL2tlcm5lbC9pcnEvcHJvYy5jCmluZGV4IDk4MTM4Nzg4Y2IwNC4uN2M1Y2Q0
MmRmM2I5IDEwMDY0NAotLS0gYS9rZXJuZWwvaXJxL3Byb2MuYworKysgYi9rZXJuZWwvaXJxL3By
b2MuYwpAQCAtMTQ0LDcgKzE0NCw3IEBAIHN0YXRpYyBzc2l6ZV90IHdyaXRlX2lycV9hZmZpbml0
eShpbnQgdHlwZSwgc3RydWN0IGZpbGUgKmZpbGUsCiAJaWYgKCFpcnFfY2FuX3NldF9hZmZpbml0
eV91c3IoaXJxKSB8fCBub19pcnFfYWZmaW5pdHkpCiAJCXJldHVybiAtRUlPOwogCi0JaWYgKCFh
bGxvY19jcHVtYXNrX3ZhcigmbmV3X3ZhbHVlLCBHRlBfS0VSTkVMKSkKKwlpZiAoIXphbGxvY19j
cHVtYXNrX3ZhcigmbmV3X3ZhbHVlLCBHRlBfS0VSTkVMKSkKIAkJcmV0dXJuIC1FTk9NRU07CiAK
IAlpZiAodHlwZSkKQEAgLTIzOCw3ICsyMzgsNyBAQCBzdGF0aWMgc3NpemVfdCBkZWZhdWx0X2Fm
ZmluaXR5X3dyaXRlKHN0cnVjdCBmaWxlICpmaWxlLAogCWNwdW1hc2tfdmFyX3QgbmV3X3ZhbHVl
OwogCWludCBlcnI7CiAKLQlpZiAoIWFsbG9jX2NwdW1hc2tfdmFyKCZuZXdfdmFsdWUsIEdGUF9L
RVJORUwpKQorCWlmICghemFsbG9jX2NwdW1hc2tfdmFyKCZuZXdfdmFsdWUsIEdGUF9LRVJORUwp
KQogCQlyZXR1cm4gLUVOT01FTTsKIAogCWVyciA9IGNwdW1hc2tfcGFyc2VfdXNlcihidWZmZXIs
IGNvdW50LCBuZXdfdmFsdWUpOwpkaWZmIC0tZ2l0IGEva2VybmVsL2lycS9yZXNlbmQuYyBiL2tl
cm5lbC9pcnEvcmVzZW5kLmMKaW5kZXggYmQxZDg1YzYxMGFhLi4wYzQ2ZTlmZTNhODkgMTAwNjQ0
Ci0tLSBhL2tlcm5lbC9pcnEvcmVzZW5kLmMKKysrIGIva2VybmVsL2lycS9yZXNlbmQuYwpAQCAt
MTI4LDcgKzEyOCw3IEBAIGludCBjaGVja19pcnFfcmVzZW5kKHN0cnVjdCBpcnFfZGVzYyAqZGVz
YywgYm9vbCBpbmplY3QpCiAJaWYgKCF0cnlfcmV0cmlnZ2VyKGRlc2MpKQogCQllcnIgPSBpcnFf
c3dfcmVzZW5kKGRlc2MpOwogCi0JLyogSWYgdGhlIHJldHJpZ2dlciB3YXMgc3VjY2Vzc2Z1bGws
IG1hcmsgaXQgd2l0aCB0aGUgUkVQTEFZIGJpdCAqLworCS8qIElmIHRoZSByZXRyaWdnZXIgd2Fz
IHN1Y2Nlc3NmdWwsIG1hcmsgaXQgd2l0aCB0aGUgUkVQTEFZIGJpdCAqLwogCWlmICghZXJyKQog
CQlkZXNjLT5pc3RhdGUgfD0gSVJRU19SRVBMQVk7CiAJcmV0dXJuIGVycjsKZGlmZiAtLWdpdCBh
L2tlcm5lbC9pcnEvc3B1cmlvdXMuYyBiL2tlcm5lbC9pcnEvc3B1cmlvdXMuYwppbmRleCBmODY1
ZTVmNGQzODIuLmM0ODFkODQ1ODMyNSAxMDA2NDQKLS0tIGEva2VybmVsL2lycS9zcHVyaW91cy5j
CisrKyBiL2tlcm5lbC9pcnEvc3B1cmlvdXMuYwpAQCAtNDAzLDYgKzQwMywxMCBAQCB2b2lkIG5v
dGVfaW50ZXJydXB0KHN0cnVjdCBpcnFfZGVzYyAqZGVzYywgaXJxcmV0dXJuX3QgYWN0aW9uX3Jl
dCkKIAkJCWRlc2MtPmlycXNfdW5oYW5kbGVkIC09IG9rOwogCX0KIAorCWlmIChsaWtlbHkoIWRl
c2MtPmlycXNfdW5oYW5kbGVkKSkKKwkJcmV0dXJuOworCisJLyogTm93IGdldHRpbmcgaW50byB1
bmhhbmRsZWQgaXJxIGRldGVjdGlvbiAqLwogCWRlc2MtPmlycV9jb3VudCsrOwogCWlmIChsaWtl
bHkoZGVzYy0+aXJxX2NvdW50IDwgMTAwMDAwKSkKIAkJcmV0dXJuOwpkaWZmIC0tZ2l0IGEva2Vy
bmVsL2lycS90aW1pbmdzLmMgYi9rZXJuZWwvaXJxL3RpbWluZ3MuYwppbmRleCA3NzNiNjEwNWM0
YWUuLmQzMDlkNmZiZjViZCAxMDA2NDQKLS0tIGEva2VybmVsL2lycS90aW1pbmdzLmMKKysrIGIv
a2VybmVsL2lycS90aW1pbmdzLmMKQEAgLTg0LDcgKzg0LDcgQEAgdm9pZCBpcnFfdGltaW5nc19k
aXNhYmxlKHZvaWQpCiAgKiAyLiBMb2cgaW50ZXJ2YWwKICAqCiAgKiBXZSBzYXcgdGhlIGlycSB0
aW1pbmdzIGFsbG93IHRvIGNvbXB1dGUgdGhlIGludGVydmFsIG9mIHRoZQotICogb2NjdXJyZW5j
ZXMgZm9yIGEgc3BlY2lmaWMgaW50ZXJydXB0LiBXZSBjYW4gcmVhc29uaWJseSBhc3N1bWUgdGhl
CisgKiBvY2N1cnJlbmNlcyBmb3IgYSBzcGVjaWZpYyBpbnRlcnJ1cHQuIFdlIGNhbiByZWFzb25h
Ymx5IGFzc3VtZSB0aGUKICAqIGxvbmdlciBpcyB0aGUgaW50ZXJ2YWwsIHRoZSBoaWdoZXIgaXMg
dGhlIGVycm9yIGZvciB0aGUgbmV4dCBldmVudAogICogYW5kIHdlIGNhbiBjb25zaWRlciBzdG9y
aW5nIHRob3NlIGludGVydmFsIHZhbHVlcyBpbnRvIGFuIGFycmF5CiAgKiB3aGVyZSBlYWNoIHNs
b3QgaW4gdGhlIGFycmF5IGNvcnJlc3BvbmQgdG8gYW4gaW50ZXJ2YWwgYXQgdGhlIHBvd2VyCkBA
IC00MTYsNyArNDE2LDcgQEAgc3RhdGljIHU2NCBfX2lycV90aW1pbmdzX25leHRfZXZlbnQoc3Ry
dWN0IGlycXRfc3RhdCAqaXJxcywgaW50IGlycSwgdTY0IG5vdykKIAkgKiBDb3B5IHRoZSBjb250
ZW50IG9mIHRoZSBjaXJjdWxhciBidWZmZXIgaW50byBhbm90aGVyIGJ1ZmZlcgogCSAqIGluIG9y
ZGVyIHRvIGxpbmVhcml6ZSB0aGUgYnVmZmVyIGluc3RlYWQgb2YgZGVhbGluZyB3aXRoCiAJICog
d3JhcHBpbmcgaW5kZXhlcyBhbmQgc2hpZnRlZCBhcnJheSB3aGljaCB3aWxsIGJlIHByb25lIHRv
Ci0JICogZXJyb3IgYW5kIGV4dHJlbWVsbHkgZGlmZmljdWx0IHRvIGRlYnVnLgorCSAqIGVycm9y
IGFuZCBleHRyZW1lbHkgZGlmZmljdWx0IHRvIGRlYnVnLgogCSAqLwogCWZvciAoaSA9IDA7IGkg
PCBjb3VudDsgaSsrKSB7CiAJCWludCBpbmRleCA9IChzdGFydCArIGkpICYgSVJRX1RJTUlOR1Nf
TUFTSzsKQEAgLTQ4NSw3ICs0ODUsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaXJxX3RpbWluZ3Nf
c3RvcmUoaW50IGlycSwgc3RydWN0IGlycXRfc3RhdCAqaXJxcywgdTY0IHRzKQogCiAJLyoKIAkg
KiBUaGUgaW50ZXJydXB0IHRyaWdnZXJlZCBtb3JlIHRoYW4gb25lIHNlY29uZCBhcGFydCwgdGhh
dAotCSAqIGVuZHMgdGhlIHNlcXVlbmNlIGFzIHByZWRpY3RpYmxlIGZvciBvdXIgcHVycG9zZS4g
SW4gdGhpcworCSAqIGVuZHMgdGhlIHNlcXVlbmNlIGFzIHByZWRpY3RhYmxlIGZvciBvdXIgcHVy
cG9zZS4gSW4gdGhpcwogCSAqIGNhc2UsIGFzc3VtZSB3ZSBoYXZlIHRoZSBiZWdpbm5pbmcgb2Yg
YSBzZXF1ZW5jZSBhbmQgdGhlCiAJICogdGltZXN0YW1wIGlzIHRoZSBmaXJzdCB2YWx1ZS4gQXMg
aXQgaXMgaW1wb3NzaWJsZSB0bwogCSAqIHByZWRpY3QgYW55dGhpbmcgYXQgdGhpcyBwb2ludCwg
cmV0dXJuLgpAQCAtNTE0LDcgKzUxNCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpcnFfdGltaW5n
c19zdG9yZShpbnQgaXJxLCBzdHJ1Y3QgaXJxdF9zdGF0ICppcnFzLCB1NjQgdHMpCiAgKiAgICAg
IElmIG1vcmUgdGhhbiB0aGUgYXJyYXkgc2l6ZSBpbnRlcnJ1cHRzIGhhcHBlbmVkIGR1cmluZyB0
aGUKICAqICAgICAgbGFzdCBidXN5L2lkbGUgY3ljbGUsIHRoZSBpbmRleCB3cmFwcGVkIHVwIGFu
ZCB3ZSBoYXZlIHRvCiAgKiAgICAgIGJlZ2luIHdpdGggdGhlIG5leHQgZWxlbWVudCBpbiB0aGUg
YXJyYXkgd2hpY2ggaXMgdGhlIGxhc3Qgb25lCi0gKiAgICAgIGluIHRoZSBzZXF1ZW5jZSwgb3Ro
ZXJ3aXNlIGl0IGlzIGEgdGhlIGluZGV4IDAuCisgKiAgICAgIGluIHRoZSBzZXF1ZW5jZSwgb3Ro
ZXJ3aXNlIGl0IGlzIGF0IHRoZSBpbmRleCAwLgogICoKICAqIC0gaGF2ZSBhbiBpbmRpY2F0aW9u
IG9mIHRoZSBpbnRlcnJ1cHRzIGFjdGl2aXR5IG9uIHRoaXMgQ1BVCiAgKiAgIChlZy4gaXJxL3Nl
YykKZGlmZiAtLWdpdCBhL2tlcm5lbC9wcm9maWxlLmMgYi9rZXJuZWwvcHJvZmlsZS5jCmluZGV4
IDZmNjlhNDE5NWQ1Ni4uYzJlYmRkYjVlOTc0IDEwMDY0NAotLS0gYS9rZXJuZWwvcHJvZmlsZS5j
CisrKyBiL2tlcm5lbC9wcm9maWxlLmMKQEAgLTQzMCw3ICs0MzAsNyBAQCBzdGF0aWMgc3NpemVf
dCBwcm9mX2NwdV9tYXNrX3Byb2Nfd3JpdGUoc3RydWN0IGZpbGUgKmZpbGUsCiAJY3B1bWFza192
YXJfdCBuZXdfdmFsdWU7CiAJaW50IGVycjsKIAotCWlmICghYWxsb2NfY3B1bWFza192YXIoJm5l
d192YWx1ZSwgR0ZQX0tFUk5FTCkpCisJaWYgKCF6YWxsb2NfY3B1bWFza192YXIoJm5ld192YWx1
ZSwgR0ZQX0tFUk5FTCkpCiAJCXJldHVybiAtRU5PTUVNOwogCiAJZXJyID0gY3B1bWFza19wYXJz
ZV91c2VyKGJ1ZmZlciwgY291bnQsIG5ld192YWx1ZSk7CmRpZmYgLS1naXQgYS9rZXJuZWwvc2No
ZWQvY3B1dGltZS5jIGIva2VybmVsL3NjaGVkL2NwdXRpbWUuYwppbmRleCA1ZjYxMTY1OGVlYWIu
LjJjMzZhNWZhZDU4OSAxMDA2NDQKLS0tIGEva2VybmVsL3NjaGVkL2NwdXRpbWUuYworKysgYi9r
ZXJuZWwvc2NoZWQvY3B1dGltZS5jCkBAIC02MCw3ICs2MCw3IEBAIHZvaWQgaXJxdGltZV9hY2Nv
dW50X2lycShzdHJ1Y3QgdGFza19zdHJ1Y3QgKmN1cnIsIHVuc2lnbmVkIGludCBvZmZzZXQpCiAJ
Y3B1ID0gc21wX3Byb2Nlc3Nvcl9pZCgpOwogCWRlbHRhID0gc2NoZWRfY2xvY2tfY3B1KGNwdSkg
LSBpcnF0aW1lLT5pcnFfc3RhcnRfdGltZTsKIAlpcnF0aW1lLT5pcnFfc3RhcnRfdGltZSArPSBk
ZWx0YTsKLQlwYyA9IHByZWVtcHRfY291bnQoKSAtIG9mZnNldDsKKwlwYyA9IGlycV9jb3VudCgp
IC0gb2Zmc2V0OwogCiAJLyoKIAkgKiBXZSBkbyBub3QgYWNjb3VudCBmb3Igc29mdGlycSB0aW1l
IGZyb20ga3NvZnRpcnFkIGhlcmUuCkBAIC00MjEsNyArNDIxLDcgQEAgdm9pZCB2dGltZV90YXNr
X3N3aXRjaChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnByZXYpCiAKIHZvaWQgdnRpbWVfYWNjb3VudF9p
cnEoc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssIHVuc2lnbmVkIGludCBvZmZzZXQpCiB7Ci0JdW5z
aWduZWQgaW50IHBjID0gcHJlZW1wdF9jb3VudCgpIC0gb2Zmc2V0OworCXVuc2lnbmVkIGludCBw
YyA9IGlycV9jb3VudCgpIC0gb2Zmc2V0OwogCiAJaWYgKHBjICYgSEFSRElSUV9PRkZTRVQpIHsK
IAkJdnRpbWVfYWNjb3VudF9oYXJkaXJxKHRzayk7CmRpZmYgLS1naXQgYS9rZXJuZWwvc29mdGly
cS5jIGIva2VybmVsL3NvZnRpcnEuYwppbmRleCA5OTA4ZWM0YTliZmUuLjVhOTk2OTZkYTg2YSAx
MDA2NDQKLS0tIGEva2VybmVsL3NvZnRpcnEuYworKysgYi9rZXJuZWwvc29mdGlycS5jCkBAIC0x
Myw2ICsxMyw3IEBACiAjaW5jbHVkZSA8bGludXgva2VybmVsX3N0YXQuaD4KICNpbmNsdWRlIDxs
aW51eC9pbnRlcnJ1cHQuaD4KICNpbmNsdWRlIDxsaW51eC9pbml0Lmg+CisjaW5jbHVkZSA8bGlu
dXgvbG9jYWxfbG9jay5oPgogI2luY2x1ZGUgPGxpbnV4L21tLmg+CiAjaW5jbHVkZSA8bGludXgv
bm90aWZpZXIuaD4KICNpbmNsdWRlIDxsaW51eC9wZXJjcHUuaD4KQEAgLTI1LDYgKzI2LDcgQEAK
ICNpbmNsdWRlIDxsaW51eC9zbXBib290Lmg+CiAjaW5jbHVkZSA8bGludXgvdGljay5oPgogI2lu
Y2x1ZGUgPGxpbnV4L2lycS5oPgorI2luY2x1ZGUgPGxpbnV4L3dhaXRfYml0Lmg+CiAKICNpbmNs
dWRlIDxhc20vc29mdGlycV9zdGFjay5oPgogCkBAIC0xMDIsMjAgKzEwNCwyMDQgQEAgRVhQT1JU
X1BFUl9DUFVfU1lNQk9MX0dQTChoYXJkaXJxX2NvbnRleHQpOwogI2VuZGlmCiAKIC8qCi0gKiBw
cmVlbXB0X2NvdW50IGFuZCBTT0ZUSVJRX09GRlNFVCB1c2FnZToKLSAqIC0gcHJlZW1wdF9jb3Vu
dCBpcyBjaGFuZ2VkIGJ5IFNPRlRJUlFfT0ZGU0VUIG9uIGVudGVyaW5nIG9yIGxlYXZpbmcKLSAq
ICAgc29mdGlycSBwcm9jZXNzaW5nLgotICogLSBwcmVlbXB0X2NvdW50IGlzIGNoYW5nZWQgYnkg
U09GVElSUV9ESVNBQkxFX09GRlNFVCAoPSAyICogU09GVElSUV9PRkZTRVQpCisgKiBTT0ZUSVJR
X09GRlNFVCB1c2FnZToKKyAqCisgKiBPbiAhUlQga2VybmVscyAnY291bnQnIGlzIHRoZSBwcmVl
bXB0IGNvdW50ZXIsIG9uIFJUIGtlcm5lbHMgdGhpcyBhcHBsaWVzCisgKiB0byBhIHBlciBDUFUg
Y291bnRlciBhbmQgdG8gdGFzazo6c29mdGlycXNfZGlzYWJsZWRfY250LgorICoKKyAqIC0gY291
bnQgaXMgY2hhbmdlZCBieSBTT0ZUSVJRX09GRlNFVCBvbiBlbnRlcmluZyBvciBsZWF2aW5nIHNv
ZnRpcnEKKyAqICAgcHJvY2Vzc2luZy4KKyAqCisgKiAtIGNvdW50IGlzIGNoYW5nZWQgYnkgU09G
VElSUV9ESVNBQkxFX09GRlNFVCAoPSAyICogU09GVElSUV9PRkZTRVQpCiAgKiAgIG9uIGxvY2Fs
X2JoX2Rpc2FibGUgb3IgbG9jYWxfYmhfZW5hYmxlLgorICoKICAqIFRoaXMgbGV0cyB1cyBkaXN0
aW5ndWlzaCBiZXR3ZWVuIHdoZXRoZXIgd2UgYXJlIGN1cnJlbnRseSBwcm9jZXNzaW5nCiAgKiBz
b2Z0aXJxIGFuZCB3aGV0aGVyIHdlIGp1c3QgaGF2ZSBiaCBkaXNhYmxlZC4KICAqLworI2lmZGVm
IENPTkZJR19QUkVFTVBUX1JUCisKKy8qCisgKiBSVCBhY2NvdW50cyBmb3IgQkggZGlzYWJsZWQg
c2VjdGlvbnMgaW4gdGFzazo6c29mdGlycXNfZGlzYWJsZWRfY250IGFuZAorICogYWxzbyBpbiBw
ZXIgQ1BVIHNvZnRpcnFfY3RybDo6Y250LiBUaGlzIGlzIG5lY2Vzc2FyeSB0byBhbGxvdyB0YXNr
cyBpbiBhCisgKiBzb2Z0aXJxIGRpc2FibGVkIHNlY3Rpb24gdG8gYmUgcHJlZW1wdGVkLgorICoK
KyAqIFRoZSBwZXIgdGFzayBjb3VudGVyIGlzIHVzZWQgZm9yIHNvZnRpcnFfY291bnQoKSwgaW5f
c29mdGlycSgpIGFuZAorICogaW5fc2VydmluZ19zb2Z0aXJxcygpIGJlY2F1c2UgdGhlc2UgY291
bnRzIGFyZSBvbmx5IHZhbGlkIHdoZW4gdGhlIHRhc2sKKyAqIGhvbGRpbmcgc29mdGlycV9jdHJs
Ojpsb2NrIGlzIHJ1bm5pbmcuCisgKgorICogVGhlIHBlciBDUFUgY291bnRlciBwcmV2ZW50cyBw
b2ludGxlc3Mgd2FrZXVwcyBvZiBrc29mdGlycWQgaW4gY2FzZSB0aGF0CisgKiB0aGUgdGFzayB3
aGljaCBpcyBpbiBhIHNvZnRpcnEgZGlzYWJsZWQgc2VjdGlvbiBpcyBwcmVlbXB0ZWQgb3IgYmxv
Y2tzLgorICovCitzdHJ1Y3Qgc29mdGlycV9jdHJsIHsKKwlsb2NhbF9sb2NrX3QJbG9jazsKKwlp
bnQJCWNudDsKK307CisKK3N0YXRpYyBERUZJTkVfUEVSX0NQVShzdHJ1Y3Qgc29mdGlycV9jdHJs
LCBzb2Z0aXJxX2N0cmwpID0geworCS5sb2NrCT0gSU5JVF9MT0NBTF9MT0NLKHNvZnRpcnFfY3Ry
bC5sb2NrKSwKK307CisKKy8qKgorICogbG9jYWxfYmhfYmxvY2tlZCgpIC0gQ2hlY2sgZm9yIGlk
bGUgd2hldGhlciBCSCBwcm9jZXNzaW5nIGlzIGJsb2NrZWQKKyAqCisgKiBSZXR1cm5zIGZhbHNl
IGlmIHRoZSBwZXIgQ1BVIHNvZnRpcnE6OmNudCBpcyAwIG90aGVyd2lzZSB0cnVlLgorICoKKyAq
IFRoaXMgaXMgaW52b2tlZCBmcm9tIHRoZSBpZGxlIHRhc2sgdG8gZ3VhcmQgYWdhaW5zdCBmYWxz
ZSBwb3NpdGl2ZQorICogc29mdGlycSBwZW5kaW5nIHdhcm5pbmdzLCB3aGljaCB3b3VsZCBoYXBw
ZW4gd2hlbiB0aGUgdGFzayB3aGljaCBob2xkcworICogc29mdGlycV9jdHJsOjpsb2NrIHdhcyB0
aGUgb25seSBydW5uaW5nIHRhc2sgb24gdGhlIENQVSBhbmQgYmxvY2tzIG9uCisgKiBzb21lIG90
aGVyIGxvY2suCisgKi8KK2Jvb2wgbG9jYWxfYmhfYmxvY2tlZCh2b2lkKQoreworCXJldHVybiBf
X3RoaXNfY3B1X3JlYWQoc29mdGlycV9jdHJsLmNudCkgIT0gMDsKK30KKwordm9pZCBfX2xvY2Fs
X2JoX2Rpc2FibGVfaXAodW5zaWduZWQgbG9uZyBpcCwgdW5zaWduZWQgaW50IGNudCkKK3sKKwl1
bnNpZ25lZCBsb25nIGZsYWdzOworCWludCBuZXdjbnQ7CisKKwlXQVJOX09OX09OQ0UoaW5faGFy
ZGlycSgpKTsKKworCS8qIEZpcnN0IGVudHJ5IG9mIGEgdGFzayBpbnRvIGEgQkggZGlzYWJsZWQg
c2VjdGlvbj8gKi8KKwlpZiAoIWN1cnJlbnQtPnNvZnRpcnFfZGlzYWJsZV9jbnQpIHsKKwkJaWYg
KHByZWVtcHRpYmxlKCkpIHsKKwkJCWxvY2FsX2xvY2soJnNvZnRpcnFfY3RybC5sb2NrKTsKKwkJ
CS8qIFJlcXVpcmVkIHRvIG1lZXQgdGhlIFJDVSBib3R0b21oYWxmIHJlcXVpcmVtZW50cy4gKi8K
KwkJCXJjdV9yZWFkX2xvY2soKTsKKwkJfSBlbHNlIHsKKwkJCURFQlVHX0xPQ0tTX1dBUk5fT04o
dGhpc19jcHVfcmVhZChzb2Z0aXJxX2N0cmwuY250KSk7CisJCX0KKwl9CisKKwkvKgorCSAqIFRy
YWNrIHRoZSBwZXIgQ1BVIHNvZnRpcnEgZGlzYWJsZWQgc3RhdGUuIE9uIFJUIHRoaXMgaXMgcGVy
IENQVQorCSAqIHN0YXRlIHRvIGFsbG93IHByZWVtcHRpb24gb2YgYm90dG9tIGhhbGYgZGlzYWJs
ZWQgc2VjdGlvbnMuCisJICovCisJbmV3Y250ID0gX190aGlzX2NwdV9hZGRfcmV0dXJuKHNvZnRp
cnFfY3RybC5jbnQsIGNudCk7CisJLyoKKwkgKiBSZWZsZWN0IHRoZSByZXN1bHQgaW4gdGhlIHRh
c2sgc3RhdGUgdG8gcHJldmVudCByZWN1cnNpb24gb24gdGhlCisJICogbG9jYWwgbG9jayBhbmQg
dG8gbWFrZSBzb2Z0aXJxX2NvdW50KCkgJiBhbCB3b3JrLgorCSAqLworCWN1cnJlbnQtPnNvZnRp
cnFfZGlzYWJsZV9jbnQgPSBuZXdjbnQ7CisKKwlpZiAoSVNfRU5BQkxFRChDT05GSUdfVFJBQ0Vf
SVJRRkxBR1MpICYmIG5ld2NudCA9PSBjbnQpIHsKKwkJcmF3X2xvY2FsX2lycV9zYXZlKGZsYWdz
KTsKKwkJbG9ja2RlcF9zb2Z0aXJxc19vZmYoaXApOworCQlyYXdfbG9jYWxfaXJxX3Jlc3RvcmUo
ZmxhZ3MpOworCX0KK30KK0VYUE9SVF9TWU1CT0woX19sb2NhbF9iaF9kaXNhYmxlX2lwKTsKKwor
c3RhdGljIHZvaWQgX19sb2NhbF9iaF9lbmFibGUodW5zaWduZWQgaW50IGNudCwgYm9vbCB1bmxv
Y2spCit7CisJdW5zaWduZWQgbG9uZyBmbGFnczsKKwlpbnQgbmV3Y250OworCisJREVCVUdfTE9D
S1NfV0FSTl9PTihjdXJyZW50LT5zb2Z0aXJxX2Rpc2FibGVfY250ICE9CisJCQkgICAgdGhpc19j
cHVfcmVhZChzb2Z0aXJxX2N0cmwuY250KSk7CisKKwlpZiAoSVNfRU5BQkxFRChDT05GSUdfVFJB
Q0VfSVJRRkxBR1MpICYmIHNvZnRpcnFfY291bnQoKSA9PSBjbnQpIHsKKwkJcmF3X2xvY2FsX2ly
cV9zYXZlKGZsYWdzKTsKKwkJbG9ja2RlcF9zb2Z0aXJxc19vbihfUkVUX0lQXyk7CisJCXJhd19s
b2NhbF9pcnFfcmVzdG9yZShmbGFncyk7CisJfQorCisJbmV3Y250ID0gX190aGlzX2NwdV9zdWJf
cmV0dXJuKHNvZnRpcnFfY3RybC5jbnQsIGNudCk7CisJY3VycmVudC0+c29mdGlycV9kaXNhYmxl
X2NudCA9IG5ld2NudDsKKworCWlmICghbmV3Y250ICYmIHVubG9jaykgeworCQlyY3VfcmVhZF91
bmxvY2soKTsKKwkJbG9jYWxfdW5sb2NrKCZzb2Z0aXJxX2N0cmwubG9jayk7CisJfQorfQorCit2
b2lkIF9fbG9jYWxfYmhfZW5hYmxlX2lwKHVuc2lnbmVkIGxvbmcgaXAsIHVuc2lnbmVkIGludCBj
bnQpCit7CisJYm9vbCBwcmVlbXB0X29uID0gcHJlZW1wdGlibGUoKTsKKwl1bnNpZ25lZCBsb25n
IGZsYWdzOworCXUzMiBwZW5kaW5nOworCWludCBjdXJjbnQ7CisKKwlXQVJOX09OX09OQ0UoaW5f
aXJxKCkpOworCWxvY2tkZXBfYXNzZXJ0X2lycXNfZW5hYmxlZCgpOworCisJbG9jYWxfaXJxX3Nh
dmUoZmxhZ3MpOworCWN1cmNudCA9IF9fdGhpc19jcHVfcmVhZChzb2Z0aXJxX2N0cmwuY250KTsK
KworCS8qCisJICogSWYgdGhpcyBpcyBub3QgcmVlbmFibGluZyBzb2Z0IGludGVycnVwdHMsIG5v
IHBvaW50IGluIHRyeWluZyB0bworCSAqIHJ1biBwZW5kaW5nIG9uZXMuCisJICovCisJaWYgKGN1
cmNudCAhPSBjbnQpCisJCWdvdG8gb3V0OworCisJcGVuZGluZyA9IGxvY2FsX3NvZnRpcnFfcGVu
ZGluZygpOworCWlmICghcGVuZGluZyB8fCBrc29mdGlycWRfcnVubmluZyhwZW5kaW5nKSkKKwkJ
Z290byBvdXQ7CisKKwkvKgorCSAqIElmIHRoaXMgd2FzIGNhbGxlZCBmcm9tIG5vbiBwcmVlbXB0
aWJsZSBjb250ZXh0LCB3YWtlIHVwIHRoZQorCSAqIHNvZnRpcnEgZGFlbW9uLgorCSAqLworCWlm
ICghcHJlZW1wdF9vbikgeworCQl3YWtldXBfc29mdGlycWQoKTsKKwkJZ290byBvdXQ7CisJfQor
CisJLyoKKwkgKiBBZGp1c3Qgc29mdGlycSBjb3VudCB0byBTT0ZUSVJRX09GRlNFVCB3aGljaCBt
YWtlcworCSAqIGluX3NlcnZpbmdfc29mdGlycSgpIGJlY29tZSB0cnVlLgorCSAqLworCWNudCA9
IFNPRlRJUlFfT0ZGU0VUOworCV9fbG9jYWxfYmhfZW5hYmxlKGNudCwgZmFsc2UpOworCV9fZG9f
c29mdGlycSgpOworCitvdXQ6CisJX19sb2NhbF9iaF9lbmFibGUoY250LCBwcmVlbXB0X29uKTsK
Kwlsb2NhbF9pcnFfcmVzdG9yZShmbGFncyk7Cit9CitFWFBPUlRfU1lNQk9MKF9fbG9jYWxfYmhf
ZW5hYmxlX2lwKTsKKworLyoKKyAqIEludm9rZWQgZnJvbSBrc29mdGlycWRfcnVuKCkgb3V0c2lk
ZSBvZiB0aGUgaW50ZXJydXB0IGRpc2FibGVkIHNlY3Rpb24KKyAqIHRvIGFjcXVpcmUgdGhlIHBl
ciBDUFUgbG9jYWwgbG9jayBmb3IgcmVlbnRyYW5jeSBwcm90ZWN0aW9uLgorICovCitzdGF0aWMg
aW5saW5lIHZvaWQga3NvZnRpcnFkX3J1bl9iZWdpbih2b2lkKQoreworCV9fbG9jYWxfYmhfZGlz
YWJsZV9pcChfUkVUX0lQXywgU09GVElSUV9PRkZTRVQpOworCWxvY2FsX2lycV9kaXNhYmxlKCk7
Cit9CisKKy8qIENvdW50ZXJwYXJ0IHRvIGtzb2Z0aXJxZF9ydW5fYmVnaW4oKSAqLworc3RhdGlj
IGlubGluZSB2b2lkIGtzb2Z0aXJxZF9ydW5fZW5kKHZvaWQpCit7CisJX19sb2NhbF9iaF9lbmFi
bGUoU09GVElSUV9PRkZTRVQsIHRydWUpOworCVdBUk5fT05fT05DRShpbl9pbnRlcnJ1cHQoKSk7
CisJbG9jYWxfaXJxX2VuYWJsZSgpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgc29mdGlycV9o
YW5kbGVfYmVnaW4odm9pZCkgeyB9CitzdGF0aWMgaW5saW5lIHZvaWQgc29mdGlycV9oYW5kbGVf
ZW5kKHZvaWQpIHsgfQorCitzdGF0aWMgaW5saW5lIGJvb2wgc2hvdWxkX3dha2Vfa3NvZnRpcnFk
KHZvaWQpCit7CisJcmV0dXJuICF0aGlzX2NwdV9yZWFkKHNvZnRpcnFfY3RybC5jbnQpOworfQor
CitzdGF0aWMgaW5saW5lIHZvaWQgaW52b2tlX3NvZnRpcnEodm9pZCkKK3sKKwlpZiAoc2hvdWxk
X3dha2Vfa3NvZnRpcnFkKCkpCisJCXdha2V1cF9zb2Z0aXJxZCgpOworfQorCisjZWxzZSAvKiBD
T05GSUdfUFJFRU1QVF9SVCAqLwogCi0jaWZkZWYgQ09ORklHX1RSQUNFX0lSUUZMQUdTCiAvKgot
ICogVGhpcyBpcyBmb3Igc29mdGlycS5jLWludGVybmFsIHVzZSwgd2hlcmUgaGFyZGlycXMgYXJl
IGRpc2FibGVkCisgKiBUaGlzIG9uZSBpcyBmb3Igc29mdGlycS5jLWludGVybmFsIHVzZSwgd2hl
cmUgaGFyZGlycXMgYXJlIGRpc2FibGVkCiAgKiBsZWdpdGltYXRlbHk6CiAgKi8KKyNpZmRlZiBD
T05GSUdfVFJBQ0VfSVJRRkxBR1MKIHZvaWQgX19sb2NhbF9iaF9kaXNhYmxlX2lwKHVuc2lnbmVk
IGxvbmcgaXAsIHVuc2lnbmVkIGludCBjbnQpCiB7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKQEAg
LTIwNiw2ICszOTIsMzIgQEAgdm9pZCBfX2xvY2FsX2JoX2VuYWJsZV9pcCh1bnNpZ25lZCBsb25n
IGlwLCB1bnNpZ25lZCBpbnQgY250KQogfQogRVhQT1JUX1NZTUJPTChfX2xvY2FsX2JoX2VuYWJs
ZV9pcCk7CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBzb2Z0aXJxX2hhbmRsZV9iZWdpbih2b2lkKQor
eworCV9fbG9jYWxfYmhfZGlzYWJsZV9pcChfUkVUX0lQXywgU09GVElSUV9PRkZTRVQpOworfQor
CitzdGF0aWMgaW5saW5lIHZvaWQgc29mdGlycV9oYW5kbGVfZW5kKHZvaWQpCit7CisJX19sb2Nh
bF9iaF9lbmFibGUoU09GVElSUV9PRkZTRVQpOworCVdBUk5fT05fT05DRShpbl9pbnRlcnJ1cHQo
KSk7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCBrc29mdGlycWRfcnVuX2JlZ2luKHZvaWQpCit7
CisJbG9jYWxfaXJxX2Rpc2FibGUoKTsKK30KKworc3RhdGljIGlubGluZSB2b2lkIGtzb2Z0aXJx
ZF9ydW5fZW5kKHZvaWQpCit7CisJbG9jYWxfaXJxX2VuYWJsZSgpOworfQorCitzdGF0aWMgaW5s
aW5lIGJvb2wgc2hvdWxkX3dha2Vfa3NvZnRpcnFkKHZvaWQpCit7CisJcmV0dXJuIHRydWU7Cit9
CisKIHN0YXRpYyBpbmxpbmUgdm9pZCBpbnZva2Vfc29mdGlycSh2b2lkKQogewogCWlmIChrc29m
dGlycWRfcnVubmluZyhsb2NhbF9zb2Z0aXJxX3BlbmRpbmcoKSkpCkBAIC0yNTAsNiArNDYyLDgg
QEAgYXNtbGlua2FnZSBfX3Zpc2libGUgdm9pZCBkb19zb2Z0aXJxKHZvaWQpCiAJbG9jYWxfaXJx
X3Jlc3RvcmUoZmxhZ3MpOwogfQogCisjZW5kaWYgLyogIUNPTkZJR19QUkVFTVBUX1JUICovCisK
IC8qCiAgKiBXZSByZXN0YXJ0IHNvZnRpcnEgcHJvY2Vzc2luZyBmb3IgYXQgbW9zdCBNQVhfU09G
VElSUV9SRVNUQVJUIHRpbWVzLAogICogYnV0IGJyZWFrIHRoZSBsb29wIGlmIG5lZWRfcmVzY2hl
ZCgpIGlzIHNldCBvciBhZnRlciAyIG1zLgpAQCAtMzE4LDcgKzUzMiw3IEBAIGFzbWxpbmthZ2Ug
X192aXNpYmxlIHZvaWQgX19zb2Z0aXJxX2VudHJ5IF9fZG9fc29mdGlycSh2b2lkKQogCiAJcGVu
ZGluZyA9IGxvY2FsX3NvZnRpcnFfcGVuZGluZygpOwogCi0JX19sb2NhbF9iaF9kaXNhYmxlX2lw
KF9SRVRfSVBfLCBTT0ZUSVJRX09GRlNFVCk7CisJc29mdGlycV9oYW5kbGVfYmVnaW4oKTsKIAlp
bl9oYXJkaXJxID0gbG9ja2RlcF9zb2Z0aXJxX3N0YXJ0KCk7CiAJYWNjb3VudF9zb2Z0aXJxX2Vu
dGVyKGN1cnJlbnQpOwogCkBAIC0zNTQsOCArNTY4LDEwIEBAIGFzbWxpbmthZ2UgX192aXNpYmxl
IHZvaWQgX19zb2Z0aXJxX2VudHJ5IF9fZG9fc29mdGlycSh2b2lkKQogCQlwZW5kaW5nID4+PSBz
b2Z0aXJxX2JpdDsKIAl9CiAKLQlpZiAoX190aGlzX2NwdV9yZWFkKGtzb2Z0aXJxZCkgPT0gY3Vy
cmVudCkKKwlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX1BSRUVNUFRfUlQpICYmCisJICAgIF9fdGhp
c19jcHVfcmVhZChrc29mdGlycWQpID09IGN1cnJlbnQpCiAJCXJjdV9zb2Z0aXJxX3FzKCk7CisK
IAlsb2NhbF9pcnFfZGlzYWJsZSgpOwogCiAJcGVuZGluZyA9IGxvY2FsX3NvZnRpcnFfcGVuZGlu
ZygpOwpAQCAtMzY5LDggKzU4NSw3IEBAIGFzbWxpbmthZ2UgX192aXNpYmxlIHZvaWQgX19zb2Z0
aXJxX2VudHJ5IF9fZG9fc29mdGlycSh2b2lkKQogCiAJYWNjb3VudF9zb2Z0aXJxX2V4aXQoY3Vy
cmVudCk7CiAJbG9ja2RlcF9zb2Z0aXJxX2VuZChpbl9oYXJkaXJxKTsKLQlfX2xvY2FsX2JoX2Vu
YWJsZShTT0ZUSVJRX09GRlNFVCk7Ci0JV0FSTl9PTl9PTkNFKGluX2ludGVycnVwdCgpKTsKKwlz
b2Z0aXJxX2hhbmRsZV9lbmQoKTsKIAljdXJyZW50X3Jlc3RvcmVfZmxhZ3Mob2xkX2ZsYWdzLCBQ
Rl9NRU1BTExPQyk7CiB9CiAKQEAgLTQ2NSw3ICs2ODAsNyBAQCBpbmxpbmUgdm9pZCByYWlzZV9z
b2Z0aXJxX2lycW9mZih1bnNpZ25lZCBpbnQgbnIpCiAJICogT3RoZXJ3aXNlIHdlIHdha2UgdXAg
a3NvZnRpcnFkIHRvIG1ha2Ugc3VyZSB3ZQogCSAqIHNjaGVkdWxlIHRoZSBzb2Z0aXJxIHNvb24u
CiAJICovCi0JaWYgKCFpbl9pbnRlcnJ1cHQoKSkKKwlpZiAoIWluX2ludGVycnVwdCgpICYmIHNo
b3VsZF93YWtlX2tzb2Z0aXJxZCgpKQogCQl3YWtldXBfc29mdGlycWQoKTsKIH0KIApAQCAtNTMx
LDYgKzc0NiwyMCBAQCB2b2lkIF9fdGFza2xldF9oaV9zY2hlZHVsZShzdHJ1Y3QgdGFza2xldF9z
dHJ1Y3QgKnQpCiB9CiBFWFBPUlRfU1lNQk9MKF9fdGFza2xldF9oaV9zY2hlZHVsZSk7CiAKK3N0
YXRpYyBib29sIHRhc2tsZXRfY2xlYXJfc2NoZWQoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQor
eworCWlmICh0ZXN0X2FuZF9jbGVhcl9iaXQoVEFTS0xFVF9TVEFURV9TQ0hFRCwgJnQtPnN0YXRl
KSkgeworCQl3YWtlX3VwX3ZhcigmdC0+c3RhdGUpOworCQlyZXR1cm4gdHJ1ZTsKKwl9CisKKwlX
QVJOX09OQ0UoMSwgInRhc2tsZXQgU0NIRUQgc3RhdGUgbm90IHNldDogJXMgJXBTXG4iLAorCQkg
IHQtPnVzZV9jYWxsYmFjayA/ICJjYWxsYmFjayIgOiAiZnVuYyIsCisJCSAgdC0+dXNlX2NhbGxi
YWNrID8gKHZvaWQgKil0LT5jYWxsYmFjayA6ICh2b2lkICopdC0+ZnVuYyk7CisKKwlyZXR1cm4g
ZmFsc2U7Cit9CisKIHN0YXRpYyB2b2lkIHRhc2tsZXRfYWN0aW9uX2NvbW1vbihzdHJ1Y3Qgc29m
dGlycV9hY3Rpb24gKmEsCiAJCQkJICBzdHJ1Y3QgdGFza2xldF9oZWFkICp0bF9oZWFkLAogCQkJ
CSAgdW5zaWduZWQgaW50IHNvZnRpcnFfbnIpCkBAIC01NTAsMTMgKzc3OSwxMiBAQCBzdGF0aWMg
dm9pZCB0YXNrbGV0X2FjdGlvbl9jb21tb24oc3RydWN0IHNvZnRpcnFfYWN0aW9uICphLAogCiAJ
CWlmICh0YXNrbGV0X3RyeWxvY2sodCkpIHsKIAkJCWlmICghYXRvbWljX3JlYWQoJnQtPmNvdW50
KSkgewotCQkJCWlmICghdGVzdF9hbmRfY2xlYXJfYml0KFRBU0tMRVRfU1RBVEVfU0NIRUQsCi0J
CQkJCQkJJnQtPnN0YXRlKSkKLQkJCQkJQlVHKCk7Ci0JCQkJaWYgKHQtPnVzZV9jYWxsYmFjaykK
LQkJCQkJdC0+Y2FsbGJhY2sodCk7Ci0JCQkJZWxzZQotCQkJCQl0LT5mdW5jKHQtPmRhdGEpOwor
CQkJCWlmICh0YXNrbGV0X2NsZWFyX3NjaGVkKHQpKSB7CisJCQkJCWlmICh0LT51c2VfY2FsbGJh
Y2spCisJCQkJCQl0LT5jYWxsYmFjayh0KTsKKwkJCQkJZWxzZQorCQkJCQkJdC0+ZnVuYyh0LT5k
YXRhKTsKKwkJCQl9CiAJCQkJdGFza2xldF91bmxvY2sodCk7CiAJCQkJY29udGludWU7CiAJCQl9
CkBAIC02MDYsMjEgKzgzNCw2MiBAQCB2b2lkIHRhc2tsZXRfaW5pdChzdHJ1Y3QgdGFza2xldF9z
dHJ1Y3QgKnQsCiB9CiBFWFBPUlRfU1lNQk9MKHRhc2tsZXRfaW5pdCk7CiAKKyNpZiBkZWZpbmVk
KENPTkZJR19TTVApIHx8IGRlZmluZWQoQ09ORklHX1BSRUVNUFRfUlQpCisvKgorICogRG8gbm90
IHVzZSBpbiBuZXcgY29kZS4gV2FpdGluZyBmb3IgdGFza2xldHMgZnJvbSBhdG9taWMgY29udGV4
dHMgaXMKKyAqIGVycm9yIHByb25lIGFuZCBzaG91bGQgYmUgYXZvaWRlZC4KKyAqLwordm9pZCB0
YXNrbGV0X3VubG9ja19zcGluX3dhaXQoc3RydWN0IHRhc2tsZXRfc3RydWN0ICp0KQoreworCXdo
aWxlICh0ZXN0X2JpdChUQVNLTEVUX1NUQVRFX1JVTiwgJih0KS0+c3RhdGUpKSB7CisJCWlmIChJ
U19FTkFCTEVEKENPTkZJR19QUkVFTVBUX1JUKSkgeworCQkJLyoKKwkJCSAqIFByZXZlbnQgYSBs
aXZlIGxvY2sgd2hlbiBjdXJyZW50IHByZWVtcHRlZCBzb2Z0CisJCQkgKiBpbnRlcnJ1cHQgcHJv
Y2Vzc2luZyBvciBwcmV2ZW50cyBrc29mdGlycWQgZnJvbQorCQkJICogcnVubmluZy4gSWYgdGhl
IHRhc2tsZXQgcnVucyBvbiBhIGRpZmZlcmVudCBDUFUKKwkJCSAqIHRoZW4gdGhpcyBoYXMgbm8g
ZWZmZWN0IG90aGVyIHRoYW4gZG9pbmcgdGhlIEJICisJCQkgKiBkaXNhYmxlL2VuYWJsZSBkYW5j
ZSBmb3Igbm90aGluZy4KKwkJCSAqLworCQkJbG9jYWxfYmhfZGlzYWJsZSgpOworCQkJbG9jYWxf
YmhfZW5hYmxlKCk7CisJCX0gZWxzZSB7CisJCQljcHVfcmVsYXgoKTsKKwkJfQorCX0KK30KK0VY
UE9SVF9TWU1CT0wodGFza2xldF91bmxvY2tfc3Bpbl93YWl0KTsKKyNlbmRpZgorCiB2b2lkIHRh
c2tsZXRfa2lsbChzdHJ1Y3QgdGFza2xldF9zdHJ1Y3QgKnQpCiB7CiAJaWYgKGluX2ludGVycnVw
dCgpKQogCQlwcl9ub3RpY2UoIkF0dGVtcHQgdG8ga2lsbCB0YXNrbGV0IGZyb20gaW50ZXJydXB0
XG4iKTsKIAotCXdoaWxlICh0ZXN0X2FuZF9zZXRfYml0KFRBU0tMRVRfU1RBVEVfU0NIRUQsICZ0
LT5zdGF0ZSkpIHsKLQkJZG8gewotCQkJeWllbGQoKTsKLQkJfSB3aGlsZSAodGVzdF9iaXQoVEFT
S0xFVF9TVEFURV9TQ0hFRCwgJnQtPnN0YXRlKSk7Ci0JfQorCXdoaWxlICh0ZXN0X2FuZF9zZXRf
Yml0KFRBU0tMRVRfU1RBVEVfU0NIRUQsICZ0LT5zdGF0ZSkpCisJCXdhaXRfdmFyX2V2ZW50KCZ0
LT5zdGF0ZSwgIXRlc3RfYml0KFRBU0tMRVRfU1RBVEVfU0NIRUQsICZ0LT5zdGF0ZSkpOworCiAJ
dGFza2xldF91bmxvY2tfd2FpdCh0KTsKLQljbGVhcl9iaXQoVEFTS0xFVF9TVEFURV9TQ0hFRCwg
JnQtPnN0YXRlKTsKKwl0YXNrbGV0X2NsZWFyX3NjaGVkKHQpOwogfQogRVhQT1JUX1NZTUJPTCh0
YXNrbGV0X2tpbGwpOwogCisjaWYgZGVmaW5lZChDT05GSUdfU01QKSB8fCBkZWZpbmVkKENPTkZJ
R19QUkVFTVBUX1JUKQordm9pZCB0YXNrbGV0X3VubG9jayhzdHJ1Y3QgdGFza2xldF9zdHJ1Y3Qg
KnQpCit7CisJc21wX21iX19iZWZvcmVfYXRvbWljKCk7CisJY2xlYXJfYml0KFRBU0tMRVRfU1RB
VEVfUlVOLCAmdC0+c3RhdGUpOworCXNtcF9tYl9fYWZ0ZXJfYXRvbWljKCk7CisJd2FrZV91cF92
YXIoJnQtPnN0YXRlKTsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKHRhc2tsZXRfdW5sb2NrKTsKKwor
dm9pZCB0YXNrbGV0X3VubG9ja193YWl0KHN0cnVjdCB0YXNrbGV0X3N0cnVjdCAqdCkKK3sKKwl3
YWl0X3Zhcl9ldmVudCgmdC0+c3RhdGUsICF0ZXN0X2JpdChUQVNLTEVUX1NUQVRFX1JVTiwgJnQt
PnN0YXRlKSk7Cit9CitFWFBPUlRfU1lNQk9MX0dQTCh0YXNrbGV0X3VubG9ja193YWl0KTsKKyNl
bmRpZgorCiB2b2lkIF9faW5pdCBzb2Z0aXJxX2luaXQodm9pZCkKIHsKIAlpbnQgY3B1OwpAQCAt
NjQzLDUzICs5MTIsMjEgQEAgc3RhdGljIGludCBrc29mdGlycWRfc2hvdWxkX3J1bih1bnNpZ25l
ZCBpbnQgY3B1KQogCiBzdGF0aWMgdm9pZCBydW5fa3NvZnRpcnFkKHVuc2lnbmVkIGludCBjcHUp
CiB7Ci0JbG9jYWxfaXJxX2Rpc2FibGUoKTsKKwlrc29mdGlycWRfcnVuX2JlZ2luKCk7CiAJaWYg
KGxvY2FsX3NvZnRpcnFfcGVuZGluZygpKSB7CiAJCS8qCiAJCSAqIFdlIGNhbiBzYWZlbHkgcnVu
IHNvZnRpcnEgb24gaW5saW5lIHN0YWNrLCBhcyB3ZSBhcmUgbm90IGRlZXAKIAkJICogaW4gdGhl
IHRhc2sgc3RhY2sgaGVyZS4KIAkJICovCiAJCV9fZG9fc29mdGlycSgpOwotCQlsb2NhbF9pcnFf
ZW5hYmxlKCk7CisJCWtzb2Z0aXJxZF9ydW5fZW5kKCk7CiAJCWNvbmRfcmVzY2hlZCgpOwogCQly
ZXR1cm47CiAJfQotCWxvY2FsX2lycV9lbmFibGUoKTsKKwlrc29mdGlycWRfcnVuX2VuZCgpOwog
fQogCiAjaWZkZWYgQ09ORklHX0hPVFBMVUdfQ1BVCi0vKgotICogdGFza2xldF9raWxsX2ltbWVk
aWF0ZSBpcyBjYWxsZWQgdG8gcmVtb3ZlIGEgdGFza2xldCB3aGljaCBjYW4gYWxyZWFkeSBiZQot
ICogc2NoZWR1bGVkIGZvciBleGVjdXRpb24gb24gQGNwdS4KLSAqCi0gKiBVbmxpa2UgdGFza2xl
dF9raWxsLCB0aGlzIGZ1bmN0aW9uIHJlbW92ZXMgdGhlIHRhc2tsZXQKLSAqIF9pbW1lZGlhdGVs
eV8sIGV2ZW4gaWYgdGhlIHRhc2tsZXQgaXMgaW4gVEFTS0xFVF9TVEFURV9TQ0hFRCBzdGF0ZS4K
LSAqCi0gKiBXaGVuIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkLCBAY3B1IG11c3QgYmUgaW4gdGhl
IENQVV9ERUFEIHN0YXRlLgotICovCi12b2lkIHRhc2tsZXRfa2lsbF9pbW1lZGlhdGUoc3RydWN0
IHRhc2tsZXRfc3RydWN0ICp0LCB1bnNpZ25lZCBpbnQgY3B1KQotewotCXN0cnVjdCB0YXNrbGV0
X3N0cnVjdCAqKmk7Ci0KLQlCVUdfT04oY3B1X29ubGluZShjcHUpKTsKLQlCVUdfT04odGVzdF9i
aXQoVEFTS0xFVF9TVEFURV9SVU4sICZ0LT5zdGF0ZSkpOwotCi0JaWYgKCF0ZXN0X2JpdChUQVNL
TEVUX1NUQVRFX1NDSEVELCAmdC0+c3RhdGUpKQotCQlyZXR1cm47Ci0KLQkvKiBDUFUgaXMgZGVh
ZCwgc28gbm8gbG9jayBuZWVkZWQuICovCi0JZm9yIChpID0gJnBlcl9jcHUodGFza2xldF92ZWMs
IGNwdSkuaGVhZDsgKmk7IGkgPSAmKCppKS0+bmV4dCkgewotCQlpZiAoKmkgPT0gdCkgewotCQkJ
KmkgPSB0LT5uZXh0OwotCQkJLyogSWYgdGhpcyB3YXMgdGhlIHRhaWwgZWxlbWVudCwgbW92ZSB0
aGUgdGFpbCBwdHIgKi8KLQkJCWlmICgqaSA9PSBOVUxMKQotCQkJCXBlcl9jcHUodGFza2xldF92
ZWMsIGNwdSkudGFpbCA9IGk7Ci0JCQlyZXR1cm47Ci0JCX0KLQl9Ci0JQlVHKCk7Ci19Ci0KIHN0
YXRpYyBpbnQgdGFrZW92ZXJfdGFza2xldHModW5zaWduZWQgaW50IGNwdSkKIHsKIAkvKiBDUFUg
aXMgZGVhZCwgc28gbm8gbG9jayBuZWVkZWQuICovCmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS90
aWNrLXNjaGVkLmMgYi9rZXJuZWwvdGltZS90aWNrLXNjaGVkLmMKaW5kZXggZTEwYTRhZjg4NzM3
Li4wY2M1NTc5MWIyYjYgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL3RpY2stc2NoZWQuYworKysg
Yi9rZXJuZWwvdGltZS90aWNrLXNjaGVkLmMKQEAgLTk3Myw3ICs5NzMsNyBAQCBzdGF0aWMgYm9v
bCBjYW5fc3RvcF9pZGxlX3RpY2soaW50IGNwdSwgc3RydWN0IHRpY2tfc2NoZWQgKnRzKQogCWlm
ICh1bmxpa2VseShsb2NhbF9zb2Z0aXJxX3BlbmRpbmcoKSkpIHsKIAkJc3RhdGljIGludCByYXRl
bGltaXQ7CiAKLQkJaWYgKHJhdGVsaW1pdCA8IDEwICYmCisJCWlmIChyYXRlbGltaXQgPCAxMCAm
JiAhbG9jYWxfYmhfYmxvY2tlZCgpICYmCiAJCSAgICAobG9jYWxfc29mdGlycV9wZW5kaW5nKCkg
JiBTT0ZUSVJRX1NUT1BfSURMRV9NQVNLKSkgewogCQkJcHJfd2FybigiTk9IWiB0aWNrLXN0b3Ag
ZXJyb3I6IE5vbi1SQ1UgbG9jYWwgc29mdGlycSB3b3JrIGlzIHBlbmRpbmcsIGhhbmRsZXIgIyUw
MnghISFcbiIsCiAJCQkJKHVuc2lnbmVkIGludCkgbG9jYWxfc29mdGlycV9wZW5kaW5nKCkpOwpk
aWZmIC0tZ2l0IGEva2VybmVsL3RyYWNlL3RyYWNlLmMgYi9rZXJuZWwvdHJhY2UvdHJhY2UuYwpp
bmRleCBlY2NiNGUxMTg3Y2MuLjc2MDdkYzhhMjBiMiAxMDA2NDQKLS0tIGEva2VybmVsL3RyYWNl
L3RyYWNlLmMKKysrIGIva2VybmVsL3RyYWNlL3RyYWNlLmMKQEAgLTQ4MjcsNyArNDgyNyw3IEBA
IHRyYWNpbmdfY3B1bWFza193cml0ZShzdHJ1Y3QgZmlsZSAqZmlscCwgY29uc3QgY2hhciBfX3Vz
ZXIgKnVidWYsCiAJY3B1bWFza192YXJfdCB0cmFjaW5nX2NwdW1hc2tfbmV3OwogCWludCBlcnI7
CiAKLQlpZiAoIWFsbG9jX2NwdW1hc2tfdmFyKCZ0cmFjaW5nX2NwdW1hc2tfbmV3LCBHRlBfS0VS
TkVMKSkKKwlpZiAoIXphbGxvY19jcHVtYXNrX3ZhcigmdHJhY2luZ19jcHVtYXNrX25ldywgR0ZQ
X0tFUk5FTCkpCiAJCXJldHVybiAtRU5PTUVNOwogCiAJZXJyID0gY3B1bWFza19wYXJzZV91c2Vy
KHVidWYsIGNvdW50LCB0cmFjaW5nX2NwdW1hc2tfbmV3KTsKCg==
