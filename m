Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id C79EA45DBE3
	for <lists+linux-kernel@lfdr.de>; Thu, 25 Nov 2021 15:05:44 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1355552AbhKYOIv convert rfc822-to-8bit (ORCPT
        <rfc822;lists+linux-kernel@lfdr.de>); Thu, 25 Nov 2021 09:08:51 -0500
Received: from mail.kernel.org ([198.145.29.99]:37334 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S239231AbhKYOGu (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 25 Nov 2021 09:06:50 -0500
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 2F59E60FD8;
        Thu, 25 Nov 2021 14:03:39 +0000 (UTC)
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1mqFLc-007oyD-VE; Thu, 25 Nov 2021 14:03:37 +0000
Date:   Thu, 25 Nov 2021 14:03:36 +0000
Message-ID: <87a6hscoxz.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Pali =?UTF-8?B?Um9ow6Fy?= <pali@kernel.org>
Cc:     Andrew Lunn <andrew@lunn.ch>,
        Gregory Clement <gregory.clement@bootlin.com>,
        Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
        Thomas Gleixner <tglx@linutronix.de>,
        Marek =?UTF-8?B?QmVow7pu?= <kabel@kernel.org>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH 2/2] irqchip/armada-370-xp: Fix support for Multi-MSI interrupts
In-Reply-To: <20211125130057.26705-2-pali@kernel.org>
References: <20211125130057.26705-1-pali@kernel.org>
        <20211125130057.26705-2-pali@kernel.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8BIT
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: pali@kernel.org, andrew@lunn.ch, gregory.clement@bootlin.com, sebastian.hesselbarth@gmail.com, tglx@linutronix.de, kabel@kernel.org, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 25 Nov 2021 13:00:57 +0000,
Pali Rohár <pali@kernel.org> wrote:
> 
> irq-armada-370-xp driver already sets MSI_FLAG_MULTI_PCI_MSI flag into
> msi_domain_info structure. But allocated interrupt numbers for Multi-MSI
> needs to be properly aligned otherwise devices send MSI interrupt with
> wrong number.
> 
> Fix this issue by using function bitmap_find_free_region() instead of
> bitmap_find_next_zero_area() to allocate aligned interrupt numbers.
> 
> Signed-off-by: Pali Rohár <pali@kernel.org>
> Fixes: a71b9412c90c ("irqchip/armada-370-xp: Allow allocation of multiple MSIs")
> Cc: stable@vger.kernel.org
> ---
>  drivers/irqchip/irq-armada-370-xp.c | 14 +++++---------
>  1 file changed, 5 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/irqchip/irq-armada-370-xp.c b/drivers/irqchip/irq-armada-370-xp.c
> index 41ad745cf343..5b8d571c041d 100644
> --- a/drivers/irqchip/irq-armada-370-xp.c
> +++ b/drivers/irqchip/irq-armada-370-xp.c
> @@ -232,16 +232,12 @@ static int armada_370_xp_msi_alloc(struct irq_domain *domain, unsigned int virq,
>  	int hwirq, i;
>  
>  	mutex_lock(&msi_used_lock);
> +	hwirq = bitmap_find_free_region(msi_used, PCI_MSI_DOORBELL_NR,
> +					order_base_2(nr_irqs));
> +	mutex_unlock(&msi_used_lock);
>  
> -	hwirq = bitmap_find_next_zero_area(msi_used, PCI_MSI_DOORBELL_NR,
> -					   0, nr_irqs, 0);
> -	if (hwirq >= PCI_MSI_DOORBELL_NR) {
> -		mutex_unlock(&msi_used_lock);
> +	if (hwirq < 0)
>  		return -ENOSPC;
> -	}
> -
> -	bitmap_set(msi_used, hwirq, nr_irqs);
> -	mutex_unlock(&msi_used_lock);
>  
>  	for (i = 0; i < nr_irqs; i++) {
>  		irq_domain_set_info(domain, virq + i, hwirq + i,
> @@ -259,7 +255,7 @@ static void armada_370_xp_msi_free(struct irq_domain *domain,
>  	struct irq_data *d = irq_domain_get_irq_data(domain, virq);
>  
>  	mutex_lock(&msi_used_lock);
> -	bitmap_clear(msi_used, d->hwirq, nr_irqs);
> +	bitmap_release_region(msi_used, d->hwirq, order_base_2(nr_irqs));
>  	mutex_unlock(&msi_used_lock);
>  }
>  
> -- 
> 2.20.1
> 
> 

Acked-by: Marc Zyngier <maz@kernel.org>

	M.

-- 
Without deviation from the norm, progress is not possible.
