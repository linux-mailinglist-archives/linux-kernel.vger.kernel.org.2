Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id B0C34348278
	for <lists+linux-kernel@lfdr.de>; Wed, 24 Mar 2021 21:01:37 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S238143AbhCXUBL (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Wed, 24 Mar 2021 16:01:11 -0400
Received: from mail-io1-f51.google.com ([209.85.166.51]:33312 "EHLO
        mail-io1-f51.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S238118AbhCXUBB (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 24 Mar 2021 16:01:01 -0400
Received: by mail-io1-f51.google.com with SMTP id n198so22845926iod.0;
        Wed, 24 Mar 2021 13:01:00 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to;
        bh=pqHL5U4E7/yoY3sVYftQGMctv7Qfffc3iQESBPm0jD8=;
        b=lvgMmbcWezTggoHtLiWmUmMmSJTPO6bxXodc2elF6tGvcbrzR1GdWF0XvrJ6tRg+qq
         C2CM6uy00uzKwXaQl8BwesFc2fZEMyv2McXNW2uKNmhlwpZfYlCivqG5V2o8MGmz4vh9
         dL3/RZzXvNn1mXkaECaadzs8FIJQMF2PMgEtAGFofAKLZBM3WCPqCfgAsdHTLzbYmk7c
         DsMbHZyAoz3BEo+ocLAlpZ97mdM8mLrONY7tAVeBCvKMHOxr2q3I4a5GE4WKWHZIi3+T
         0Y2nUTG7D0nesPOkns2X8fkQBVqVzUC7gF7mK0Jr3heaIzV00qiew1Wpqzj71nVlFzWC
         n20A==
X-Gm-Message-State: AOAM532ulnSamu8ptsXgclK+H9TeIKp8G0Y5Rr/XNziPWOhjSeeqwduO
        um4bvnsOnB5IjBW0TYe3fw==
X-Google-Smtp-Source: ABdhPJzeSNegfSJui5GdiprTN3lHHAOGbyP2O6um47G1egEiceAVSNtSw2sdZj21cuuvpuRoaseGZQ==
X-Received: by 2002:a05:6602:2e95:: with SMTP id m21mr3817303iow.9.1616616060419;
        Wed, 24 Mar 2021 13:01:00 -0700 (PDT)
Received: from robh.at.kernel.org ([64.188.179.253])
        by smtp.gmail.com with ESMTPSA id w1sm1500392iom.53.2021.03.24.13.00.59
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 24 Mar 2021 13:00:59 -0700 (PDT)
Received: (nullmailer pid 3528653 invoked by uid 1000);
        Wed, 24 Mar 2021 20:00:12 -0000
Date:   Wed, 24 Mar 2021 14:00:12 -0600
From:   Rob Herring <robh@kernel.org>
To:     Julia Lawall <julia.lawall@inria.fr>
Cc:     linux-kernel@vger.kernel.org,
        Pantelis Antoniou <pantelis.antoniou@konsulko.com>,
        Sumera Priyadarsini <sylphrenadin@gmail.com>,
        Rob Herring <robh+dt@kernel.org>, devicetree@vger.kernel.org,
        Frank Rowand <frowand.list@gmail.com>, kbuild-all@lists.01.org
Subject: Re: [PATCH] of: overlay: fix for_each_child.cocci warnings
Message-ID: <20210324200012.GA3528542@robh.at.kernel.org>
References: <alpine.DEB.2.22.394.2103221918450.2918@hadrien>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <alpine.DEB.2.22.394.2103221918450.2918@hadrien>
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 22 Mar 2021 19:21:39 +0100, Julia Lawall wrote:
> From: kernel test robot <lkp@intel.com>
> 
> Function "for_each_child_of_node" should have of_node_put() before goto.
> 
> Generated by: scripts/coccinelle/iterators/for_each_child.cocci
> 
> Fixes: 82c2d81361ec ("coccinelle: iterators: Add for_each_child.cocci script")
> CC: Sumera Priyadarsini <sylphrenadin@gmail.com>
> Reported-by: kernel test robot <lkp@intel.com>
> Signed-off-by: kernel test robot <lkp@intel.com>
> Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
> ---
> 
> tree:   https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git master
> head:   812da4d39463a060738008a46cfc9f775e4bfcf6
> commit: 82c2d81361ecd142a54e84a9da1e287113314a4f coccinelle: iterators: Add for_each_child.cocci script
> :::::: branch date: 13 hours ago
> :::::: commit date: 5 months ago
> 
>  overlay.c |    1 +
>  1 file changed, 1 insertion(+)
> 
> --- a/drivers/of/overlay.c
> +++ b/drivers/of/overlay.c
> @@ -796,6 +796,7 @@ static int init_overlay_changeset(struct
>  		if (!fragment->target) {
>  			of_node_put(fragment->overlay);
>  			ret = -EINVAL;
> +			of_node_put(node);
>  			goto err_free_fragments;
>  		}
> 
> 
> 

Applied, thanks!
