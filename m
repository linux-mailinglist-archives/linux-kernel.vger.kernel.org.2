Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 3EEAE456FC5
	for <lists+linux-kernel@lfdr.de>; Fri, 19 Nov 2021 14:37:29 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235545AbhKSNk2 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Fri, 19 Nov 2021 08:40:28 -0500
Received: from smtp-out2.suse.de ([195.135.220.29]:43728 "EHLO
        smtp-out2.suse.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S235541AbhKSNk1 (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 19 Nov 2021 08:40:27 -0500
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
        by smtp-out2.suse.de (Postfix) with ESMTP id DE7441FD3C;
        Fri, 19 Nov 2021 13:37:24 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1637329044; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=j8acmjTyYItyhDW19Le4TEryHiL5Ik8YXs+Eg5uTD1Y=;
        b=BoGtjA44TegmtJqFuURZs4KhoVvzTfKAmYTcT3R3Uyq0al9fviQgKewg+PMvAo9xczYQBM
        MpTxdfmcIeB753VxJFYPjhZPvX2ZLvPJLId+NcKXPV0CgKjsagCLQr7ZMCci4C5Zxr56rN
        7V1nm9gf1/0UyF/ykldftJ9wlqqmmA4=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1637329044;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=j8acmjTyYItyhDW19Le4TEryHiL5Ik8YXs+Eg5uTD1Y=;
        b=+eKvZO2KwqojJ/xcudgb0j3Ka/H1YwDtXv4sti8Jq11W4jYNqm+KCyd7we2PljyPqtWQCm
        nXQqrk0ngfCe2KBA==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
        by relay2.suse.de (Postfix) with ESMTP id D515EA3B85;
        Fri, 19 Nov 2021 13:37:24 +0000 (UTC)
Date:   Fri, 19 Nov 2021 14:37:24 +0100
Message-ID: <s5hee7cfeqz.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Dinh Nguyen <dinguyen@kernel.org>
Cc:     Takashi Iwai <tiwai@suse.de>, Kees Cook <keescook@chromium.org>,
        "Ivan T . Ivanov" <iivanov@suse.de>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] ARM: socfpga: Fix crash with CONFIG_FORTIRY_SOURCE
In-Reply-To: <91f8a48f-512d-ea18-3af9-fa444d826b23@kernel.org>
References: <20211118142508.19200-1-tiwai@suse.de>
        <91f8a48f-512d-ea18-3af9-fa444d826b23@kernel.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 18 Nov 2021 23:08:27 +0100,
Dinh Nguyen wrote:
> 
> Hi Iwai,
> 
> Should this have the following tag:
> 
> Fixes: 9c4566a117a6 ("ARM: socfpga: Enable SMP for socfpga")
> 
> As well?

Yes, that'd be helpful, too.


thanks,

Takashi

> 
> On 11/18/21 8:25 AM, Takashi Iwai wrote:
> > When CONFIG_FORTIFY_SOURCE is set, memcpy() checks the potential
> > buffer overflow and panics.  The code in sofcpga bootstrapping
> > contains the memcpy() calls are mistakenly translated as the shorter
> > size, hence it triggers a panic as if it were overflowing.
> >
> > This patch changes the secondary_trampoline and *_end definitions
> > to arrays for avoiding the false-positive crash above.
> >
> > Suggested-by: Kees Cook <keescook@chromium.org>
> > Buglink: https://bugzilla.suse.com/show_bug.cgi?id=1192473
> > Link: https://lore.kernel.org/r/20211117193244.31162-1-tiwai@suse.de
> > Signed-off-by: Takashi Iwai <tiwai@suse.de>
> > ---
> >
> > v1->v2: Use arrays for trampoline area instead of hackish workaround
> > 	with __NO_FORTIFY
> >
> >   arch/arm/mach-socfpga/core.h    | 2 +-
> >   arch/arm/mach-socfpga/platsmp.c | 8 ++++----
> >   2 files changed, 5 insertions(+), 5 deletions(-)
> >
> > diff --git a/arch/arm/mach-socfpga/core.h b/arch/arm/mach-socfpga/core.h
> > index fc2608b18a0d..18f01190dcfd 100644
> > --- a/arch/arm/mach-socfpga/core.h
> > +++ b/arch/arm/mach-socfpga/core.h
> > @@ -33,7 +33,7 @@ extern void __iomem *sdr_ctl_base_addr;
> >   u32 socfpga_sdram_self_refresh(u32 sdr_base);
> >   extern unsigned int socfpga_sdram_self_refresh_sz;
> >   -extern char secondary_trampoline, secondary_trampoline_end;
> > +extern char secondary_trampoline[], secondary_trampoline_end[];
> >     extern unsigned long socfpga_cpu1start_addr;
> >   diff --git a/arch/arm/mach-socfpga/platsmp.c
> > b/arch/arm/mach-socfpga/platsmp.c
> > index fbb80b883e5d..201191cf68f3 100644
> > --- a/arch/arm/mach-socfpga/platsmp.c
> > +++ b/arch/arm/mach-socfpga/platsmp.c
> > @@ -20,14 +20,14 @@
> >     static int socfpga_boot_secondary(unsigned int cpu, struct
> > task_struct *idle)
> >   {
> > -	int trampoline_size = &secondary_trampoline_end - &secondary_trampoline;
> > +	int trampoline_size = secondary_trampoline_end - secondary_trampoline;
> >     	if (socfpga_cpu1start_addr) {
> >   		/* This will put CPU #1 into reset. */
> >   		writel(RSTMGR_MPUMODRST_CPU1,
> >   		       rst_manager_base_addr + SOCFPGA_RSTMGR_MODMPURST);
> >   -		memcpy(phys_to_virt(0), &secondary_trampoline,
> > trampoline_size);
> > +		memcpy(phys_to_virt(0), secondary_trampoline, trampoline_size);
> >     		writel(__pa_symbol(secondary_startup),
> >   		       sys_manager_base_addr + (socfpga_cpu1start_addr & 0x000000ff));
> > @@ -45,12 +45,12 @@ static int socfpga_boot_secondary(unsigned int cpu, struct task_struct *idle)
> >     static int socfpga_a10_boot_secondary(unsigned int cpu, struct
> > task_struct *idle)
> >   {
> > -	int trampoline_size = &secondary_trampoline_end - &secondary_trampoline;
> > +	int trampoline_size = secondary_trampoline_end - secondary_trampoline;
> >     	if (socfpga_cpu1start_addr) {
> >   		writel(RSTMGR_MPUMODRST_CPU1, rst_manager_base_addr +
> >   		       SOCFPGA_A10_RSTMGR_MODMPURST);
> > -		memcpy(phys_to_virt(0), &secondary_trampoline, trampoline_size);
> > +		memcpy(phys_to_virt(0), secondary_trampoline, trampoline_size);
> >     		writel(__pa_symbol(secondary_startup),
> >   		       sys_manager_base_addr + (socfpga_cpu1start_addr & 0x00000fff));
> >
> 
