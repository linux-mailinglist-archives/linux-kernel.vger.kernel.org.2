Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 32EC936B2F1
	for <lists+linux-kernel@lfdr.de>; Mon, 26 Apr 2021 14:21:29 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233288AbhDZMV3 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 26 Apr 2021 08:21:29 -0400
Received: from Galois.linutronix.de ([193.142.43.55]:33712 "EHLO
        galois.linutronix.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233294AbhDZMVU (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 26 Apr 2021 08:21:20 -0400
Date:   Mon, 26 Apr 2021 09:38:42 -0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020; t=1619439638;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding;
        bh=bit7gtqXgjXoaJqGr0PKmNqlPiDAvKAaC/kTeWnvZjM=;
        b=FVm4nborL/mtOjBxvUKrgeUD8uwefWVfEOKOyjKrdWxW7bTfCxYzM7GrdLm0wGL+zf42cA
        Mg2BY4rQZ5//q31q15PSOLhqt3pO1sIljNBuQWdMY7u8FyoBqVW1Z2ie3yQhS/36KeD09O
        95EadrQpaxZ8Ai6ElH0rX1FnLqv4mlsRbfUgtieJpgjeFHQu+C9jRdurbUJbzMe0gtIfu3
        Af/BvlUi9SnArxhNg2viMgsHRFo1ZYX9fV7YePjcVjLVYQJZ95CHUDKY5IXVsi0Tv+DEo+
        6ej6QgBO+I7P19acweU5aNfL5DOCSpvZu1YNTp8kf6Vm7lYs6v5KFtQCFB8BtQ==
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020e; t=1619439638;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding;
        bh=bit7gtqXgjXoaJqGr0PKmNqlPiDAvKAaC/kTeWnvZjM=;
        b=zyU6CssbDwWEvpsJt8tW1ousV6zTGEaIh/TI5V0SUjMcAXTyDoGhxutvjOXcT6j2sCMc6E
        s8lQn28KnI1gZwCw==
From:   Thomas Gleixner <tglx@linutronix.de>
To:     Linus Torvalds <torvalds@linux-foundation.org>
Cc:     linux-kernel@vger.kernel.org, x86@kernel.org
Subject: [GIT pull] timers/core for v5.13-rc1
Message-ID: <161942992226.31799.8533344578176639891.tglx@nanos>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

TGludXMsCgpwbGVhc2UgcHVsbCB0aGUgbGF0ZXN0IHRpbWVycy9jb3JlIGJyYW5jaCBmcm9tOgoK
ICAgZ2l0Oi8vZ2l0Lmtlcm5lbC5vcmcvcHViL3NjbS9saW51eC9rZXJuZWwvZ2l0L3RpcC90aXAu
Z2l0IHRpbWVycy1jb3JlLTIwMjEtMDQtMjYKCnVwIHRvOiAgMmQwMzZkZmE1ZjEwOiBwb3NpeC10
aW1lcnM6IFByZXNlcnZlIHJldHVybiB2YWx1ZSBpbiBjbG9ja19hZGp0aW1lMzIoKQoKVGhlIHRp
bWUgYW5kIHRpbWVycyB1cGRhdGVzIGNvbnRhaW46CgpDb3JlIGNoYW5nZXM6CgogICAtIEFsbG93
IHJ1bnRpbWUgcG93ZXIgbWFuYWdlbWVudCB3aGVuIHRoZSBjbG9ja3NvdXJjZSBpcyBjaGFuZ2Vk
LgoKICAgLSBBIGNvcnJlY3RuZXNzIGZpeCBmb3IgY2xvY2tfYWRqdGltZTMyKCkgc28gdGhhdCB0
aGUgcmV0dXJuIHZhbHVlCiAgICAgb24gc3VjY2VzcyBpcyBub3Qgb3ZlcndyaXR0ZW4gYnkgdGhl
IHJlc3VsdCBvZiB0aGUgY29weSB0byB1c2VyLgoKICAgLSBBbGxvdyBsYXRlIGluc3RhbGxtZW50
IG9mIGJyb2FkY2FzdCBjbG9ja2V2ZW50IGRldmljZXMgd2hpY2ggd2FzCiAgICAgYnJva2VuIGJl
Y2F1c2Ugbm90aGluZyBzd2l0Y2hlZCB0aGVtIG92ZXIgdG8gb25lc2hvdCBtb2RlLiBUaGlzIHdl
bnQKICAgICB1bm5vdGljZWQgc28gZmFyIGJlY2F1c2UgY2xvY2tldmVudCBkZXZpY2VzIHVzZWQg
dG8gYmUgYnVpbHQgaW4sIGJ1dAogICAgIG5vdyBwZW9wbGUgc3RhcnRlZCB0byBtYWtlIHRoZW0g
bW9kdWxhci4KCiAgIC0gRGVidWdmcyByZWxhdGVkIHNpbXBsaWZpY2F0aW9ucwoKICAgLSBTbWFs
bCBjbGVhbnVwcyBhbmQgaW1wcm92ZW1lbnRzIGhlcmUgYW5kIHRoZXJlCgpEcml2ZXIgY2hhbmdl
czoKCiAgIC0gVGhlIHVzdWFsIHNldCBvZiBkZXZpY2UgdHJlZSBiaW5kaW5nIHVwZGF0ZXMgZm9y
IGEgd2lkZSByYW5nZQogICAgIG9mIGRyaXZlcnMvZGV2aWNlcy4KCiAgIC0gVGhlIHVzdWFsIHVw
ZGF0ZXMgYW5kIGltcHJvdmVtZW50cyBmb3IgZHJpdmVycyBhbGwgb3ZlciB0aGUgcGxhY2UgYnV0
CiAgICAgbm90aGluZyBvdXRzdGFuZGluZy4KCiAgIC0gTm8gbmV3IGNsb2Nrc291cmNlL2V2ZW50
IGRyaXZlcnMuIFRoZXknbGwgY29tZSBiYWNrIG5leHQgdGltZS4KClRoYW5rcywKCgl0Z2x4Cgot
LS0tLS0tLS0tLS0tLS0tLS0+CkNoZW4gSnVuICgxKToKICAgICAgcG9zaXgtdGltZXJzOiBQcmVz
ZXJ2ZSByZXR1cm4gdmFsdWUgaW4gY2xvY2tfYWRqdGltZTMyKCkKCkRpbmggTmd1eWVuICgxKToK
ICAgICAgY2xvY2tzb3VyY2UvZHJpdmVycy9kd19hcGJfdGltZXJfb2Y6IEFkZCBoYW5kbGluZyBm
b3IgcG90ZW50aWFsIG1lbW9yeSBsZWFrCgpEcmV3IEZ1c3RpbmkgKDEpOgogICAgICBjbG9ja3Nv
dXJjZS9kcml2ZXJzL3Bpc3RhY2hpbzogRml4IHRyaXZpYWwgdHlwbwoKR3JlZyBLcm9haC1IYXJ0
bWFuICgxKToKICAgICAgdGltZS9kZWJ1ZzogUmVtb3ZlIGRlbnRyeSBwb2ludGVyIGZvciBkZWJ1
Z2ZzCgpJbmdvIE1vbG5hciAoMSk6CiAgICAgIHRpbWVrZWVwaW5nLCBjbG9ja3NvdXJjZTogRml4
IHZhcmlvdXMgdHlwb3MgaW4gY29tbWVudHMKCkppbmRvbmcgWXVlICgxKToKICAgICAgdGljay9i
cm9hZGNhc3Q6IEFsbG93IGxhdGUgcmVnaXN0ZXJlZCBkZXZpY2UgdG8gZW50ZXIgb25lc2hvdCBt
b2RlCgpKaXNoZW5nIFpoYW5nICgxKToKICAgICAgY2xvY2tzb3VyY2UvZHJpdmVycy9hcm1fYXJj
aF90aW1lcjogQWRkIF9fcm9fYWZ0ZXJfaW5pdCBhbmQgX19pbml0CgpKb25hdGhhbiBOZXVzY2jD
pGZlciAoMik6CiAgICAgIGNsb2Nrc291cmNlL2RyaXZlcnMvbnBjbTogQWRkIHN1cHBvcnQgZm9y
IFdQQ000NTAKICAgICAgZHQtYmluZGluZ3M6IHRpbWVyOiBudXZvdG9uLG5wY203eHg6IEFkZCB3
cGNtNDUwLXRpbWVyCgpNYXJjIEtsZWluZS1CdWRkZSAoMSk6CiAgICAgIHRpbWUvdGltZWNvdW50
ZXI6IE1hcmsgMXN0IGFyZ3VtZW50IG9mIHRpbWVjb3VudGVyX2N5YzJ0aW1lKCkgYXMgY29uc3QK
Ck5pa2xhcyBTw7ZkZXJsdW5kICgzKToKICAgICAgdGltZWtlZXBpbmc6IEFsbG93IHJ1bnRpbWUg
UE0gZnJvbSBjaGFuZ2VfY2xvY2tzb3VyY2UoKQogICAgICBkdC1iaW5kaW5nczogdGltZXI6IHJl
bmVzYXMsdG11OiBEb2N1bWVudCBtaXNzaW5nIEdlbjMgU29DcwogICAgICBkdC1iaW5kaW5nczog
dGltZXI6IHJlbmVzYXMsY210OiBEb2N1bWVudCBSOEE3Nzk2MQoKUGF1bCBDZXJjdWVpbCAoMyk6
CiAgICAgIGR0LWJpbmRpbmdzOiB0aW1lcjogaW5nZW5pYzogQWRkIGNvbXBhdGlibGUgc3RyaW5n
cyBmb3IgSlo0NzYwKEIpCiAgICAgIGNsb2Nrc291cmNlL2RyaXZlcnMvaW5nZW5pYzogQWRkIHN1
cHBvcnQgZm9yIHRoZSBKWjQ3NjAKICAgICAgY2xvY2tzb3VyY2UvZHJpdmVycy9pbmdlbmljLW9z
dDogQWRkIHN1cHBvcnQgZm9yIHRoZSBKWjQ3NjBCCgpUb255IExpbmRncmVuICg0KToKICAgICAg
Y2xvY2tzb3VyY2UvZHJpdmVycy90aW1lci10aS1kbTogRml4IHBvc3RlZCBtb2RlIHN0YXR1cyBj
aGVjayBvcmRlcgogICAgICBjbG9ja3NvdXJjZS9kcml2ZXJzL3RpbWVyLXRpLWRtOiBBZGQgbWlz
c2luZyBzZXRfc3RhdGVfb25lc2hvdF9zdG9wcGVkCiAgICAgIGNsb2Nrc291cmNlL2RyaXZlcnMv
dGltZXItdGktZG06IFByZXBhcmUgdG8gaGFuZGxlIGRyYTcgdGltZXIgd3JhcCBpc3N1ZQogICAg
ICBjbG9ja3NvdXJjZS9kcml2ZXJzL3RpbWVyLXRpLWRtOiBIYW5kbGUgZHJhNyB0aW1lciB3cmFw
IGVycmF0YSBpOTQwCgpXYW5nIFdlbnNoZW5nICgxKToKICAgICAgdGljazogVXNlIHRpY2tfY2hl
Y2tfcmVwbGFjZW1lbnQoKSBpbnN0ZWFkIG9mIG9wZW4gY29kaW5nIGl0CgpXZWkgWW9uZ2p1biAo
MSk6CiAgICAgIGNsb2Nrc291cmNlL2RyaXZlcnMvaW5nZW5pY19vc3Q6IEZpeCByZXR1cm4gdmFs
dWUgY2hlY2sgaW4gaW5nZW5pY19vc3RfcHJvYmUoKQoKV29sZnJhbSBTYW5nICgyKToKICAgICAg
ZHQtYmluZGluZ3M6IHRpbWVyOiByZW5lc2FzLGNtdDogQWRkIHI4YTc3OWEwIENNVCBzdXBwb3J0
CiAgICAgIGNsb2Nrc291cmNlL2RyaXZlcnMvc2hfY210OiBEb24ndCB1c2UgQ01UT1VUX0lFIHdp
dGggUi1DYXIgR2VuMi8zCgoKIC4uLi9kZXZpY2V0cmVlL2JpbmRpbmdzL3RpbWVyL2luZ2VuaWMs
dGN1LnlhbWwgICAgIHwgIDMwICsrLS0KIC4uLi9iaW5kaW5ncy90aW1lci9udXZvdG9uLG5wY203
eHgtdGltZXIudHh0ICAgICAgIHwgICAzICstCiAuLi4vZGV2aWNldHJlZS9iaW5kaW5ncy90aW1l
ci9yZW5lc2FzLGNtdC55YW1sICAgICB8ICAgNCArCiAuLi4vZGV2aWNldHJlZS9iaW5kaW5ncy90
aW1lci9yZW5lc2FzLHRtdS55YW1sICAgICB8ICAgNiArCiBhcmNoL2FybS9ib290L2R0cy9kcmE3
LWw0LmR0c2kgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQogYXJjaC9hcm0vYm9vdC9kdHMv
ZHJhNy5kdHNpICAgICAgICAgICAgICAgICAgICAgICAgfCAgMjAgKysrCiBkcml2ZXJzL2Nsb2Nr
c291cmNlL2FybV9hcmNoX3RpbWVyLmMgICAgICAgICAgICAgICB8ICAyMyArLS0KIGRyaXZlcnMv
Y2xvY2tzb3VyY2UvY2xrc3JjLWRieDUwMC1wcmNtdS5jICAgICAgICAgIHwgICA4ICstCiBkcml2
ZXJzL2Nsb2Nrc291cmNlL2R3X2FwYl90aW1lcl9vZi5jICAgICAgICAgICAgICB8ICAyOCArKyst
CiBkcml2ZXJzL2Nsb2Nrc291cmNlL2h5cGVydl90aW1lci5jICAgICAgICAgICAgICAgICB8ICAg
MiArLQogZHJpdmVycy9jbG9ja3NvdXJjZS9pbmdlbmljLW9zdC5jICAgICAgICAgICAgICAgICAg
fCAgIDkgKy0KIGRyaXZlcnMvY2xvY2tzb3VyY2UvaW5nZW5pYy10aW1lci5jICAgICAgICAgICAg
ICAgIHwgICAyICsKIGRyaXZlcnMvY2xvY2tzb3VyY2Uvc2hfY210LmMgICAgICAgICAgICAgICAg
ICAgICAgIHwgICA1ICstCiBkcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLWF0bWVsLXRjYi5jICAg
ICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9jbG9ja3NvdXJjZS90aW1lci1mc2wtZnRtLmMg
ICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItbWljcm9j
aGlwLXBpdDY0Yi5jICAgICAgIHwgICAyICstCiBkcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW5w
Y203eHguYyAgICAgICAgICAgICAgICB8ICAgMSArCiBkcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVy
LW9mLmMgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9jbG9ja3NvdXJjZS90
aW1lci1waXN0YWNoaW8uYyAgICAgICAgICAgICAgfCAgIDQgKy0KIGRyaXZlcnMvY2xvY2tzb3Vy
Y2UvdGltZXItdGktZG0tc3lzdGltZXIuYyAgICAgICAgIHwgMTU3ICsrKysrKysrKysrKysrKysr
LS0tLQogZHJpdmVycy9jbG9ja3NvdXJjZS90aW1lci12Zi1waXQuYyAgICAgICAgICAgICAgICAg
fCAgIDIgKy0KIGluY2x1ZGUvbGludXgvY2xvY2tzb3VyY2UuaCAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICAyICstCiBpbmNsdWRlL2xpbnV4L2NwdWhvdHBsdWcuaCAgICAgICAgICAgICAgICAg
ICAgICAgICB8ICAgMSArCiBpbmNsdWRlL2xpbnV4L3RpbWVjb3VudGVyLmggICAgICAgICAgICAg
ICAgICAgICAgICB8ICAgMiArLQogaW5jbHVkZS9saW51eC90aW1leC5oICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC90aW1lL2FsYXJtdGltZXIuYyAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgICA2ICstCiBrZXJuZWwvdGltZS9jbG9ja3NvdXJjZS5jICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQoga2VybmVsL3RpbWUvaHJ0aW1lci5jICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgMTggKy0tCiBrZXJuZWwvdGltZS9qaWZmaWVz
LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMiArLQoga2VybmVsL3RpbWUvbnRw
LmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC90aW1l
L3Bvc2l4LWNwdS10aW1lcnMuYyAgICAgICAgICAgICAgICAgICAgIHwgICA2ICstCiBrZXJuZWwv
dGltZS9wb3NpeC10aW1lcnMuYyAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQoga2Vy
bmVsL3RpbWUvdGVzdF91ZGVsYXkuYyAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDcgKy0K
IGtlcm5lbC90aW1lL3RpY2stYnJvYWRjYXN0LWhydGltZXIuYyAgICAgICAgICAgICAgIHwgICAy
ICstCiBrZXJuZWwvdGltZS90aWNrLWJyb2FkY2FzdC5jICAgICAgICAgICAgICAgICAgICAgICB8
ICAyMCArKy0KIGtlcm5lbC90aW1lL3RpY2stY29tbW9uLmMgICAgICAgICAgICAgICAgICAgICAg
ICAgIHwgICA3ICstCiBrZXJuZWwvdGltZS90aWNrLW9uZXNob3QuYyAgICAgICAgICAgICAgICAg
ICAgICAgICB8ICAgMiArLQoga2VybmVsL3RpbWUvdGljay1zY2hlZC5jICAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC90aW1lL3RpY2stc2NoZWQuaCAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgICAyICstCiBrZXJuZWwvdGltZS90aW1lLmMgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgMiArLQoga2VybmVsL3RpbWUvdGltZWNvdW50ZXIuYyAg
ICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGtlcm5lbC90aW1lL3RpbWVrZWVwaW5n
LmMgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDQ2ICsrKy0tLQoga2VybmVsL3RpbWUvdGlt
ZXIuYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDQgKy0KIGtlcm5lbC90aW1l
L3ZzeXNjYWxsLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAyICstCiAuLi4vdGVz
dGluZy9zZWxmdGVzdHMvdGltZXJzL2Nsb2Nrc291cmNlLXN3aXRjaC5jICB8ICAgNCArLQogdG9v
bHMvdGVzdGluZy9zZWxmdGVzdHMvdGltZXJzL2xlYXAtYS1kYXkuYyAgICAgICAgfCAgIDIgKy0K
IHRvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL3RpbWVycy9sZWFwY3Jhc2guYyAgICAgICAgIHwgICA0
ICstCiB0b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvdGhyZWFkdGVzdC5jICAgICAgICB8
ICAgMiArLQogNDggZmlsZXMgY2hhbmdlZCwgMzMwIGluc2VydGlvbnMoKyksIDE0OSBkZWxldGlv
bnMoLSkKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvdGlt
ZXIvaW5nZW5pYyx0Y3UueWFtbCBiL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9iaW5kaW5ncy90
aW1lci9pbmdlbmljLHRjdS55YW1sCmluZGV4IDAyNGJjYWQ3NTEwMS4uODE2NWRmNDU5OWNmIDEw
MDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvdGltZXIvaW5nZW5p
Yyx0Y3UueWFtbAorKysgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmluZGluZ3MvdGltZXIv
aW5nZW5pYyx0Y3UueWFtbApAQCAtMjAsNiArMjAsOCBAQCBzZWxlY3Q6CiAgICAgICAgIGVudW06
CiAgICAgICAgICAgLSBpbmdlbmljLGp6NDc0MC10Y3UKICAgICAgICAgICAtIGluZ2VuaWMsano0
NzI1Yi10Y3UKKyAgICAgICAgICAtIGluZ2VuaWMsano0NzYwLXRjdQorICAgICAgICAgIC0gaW5n
ZW5pYyxqejQ3NjBiLXRjdQogICAgICAgICAgIC0gaW5nZW5pYyxqejQ3NzAtdGN1CiAgICAgICAg
ICAgLSBpbmdlbmljLGp6NDc4MC10Y3UKICAgICAgICAgICAtIGluZ2VuaWMseDEwMDAtdGN1CkBA
IC01MiwxMiArNTQsMTUgQEAgcHJvcGVydGllczoKICAgICAgICAgICAtIGVudW06CiAgICAgICAg
ICAgICAgIC0gaW5nZW5pYyxqejQ3NDAtdGN1CiAgICAgICAgICAgICAgIC0gaW5nZW5pYyxqejQ3
MjViLXRjdQotICAgICAgICAgICAgICAtIGluZ2VuaWMsano0NzcwLXRjdQorICAgICAgICAgICAg
ICAtIGluZ2VuaWMsano0NzYwLXRjdQogICAgICAgICAgICAgICAtIGluZ2VuaWMseDEwMDAtdGN1
CiAgICAgICAgICAgLSBjb25zdDogc2ltcGxlLW1mZAogICAgICAgLSBpdGVtczoKLSAgICAgICAg
ICAtIGNvbnN0OiBpbmdlbmljLGp6NDc4MC10Y3UKLSAgICAgICAgICAtIGNvbnN0OiBpbmdlbmlj
LGp6NDc3MC10Y3UKKyAgICAgICAgICAtIGVudW06CisgICAgICAgICAgICAgIC0gaW5nZW5pYyxq
ejQ3ODAtdGN1CisgICAgICAgICAgICAgIC0gaW5nZW5pYyxqejQ3NzAtdGN1CisgICAgICAgICAg
ICAgIC0gaW5nZW5pYyxqejQ3NjBiLXRjdQorICAgICAgICAgIC0gY29uc3Q6IGluZ2VuaWMsano0
NzYwLXRjdQogICAgICAgICAgIC0gY29uc3Q6IHNpbXBsZS1tZmQKIAogICByZWc6CkBAIC0xMTgs
NiArMTIzLDggQEAgcGF0dGVyblByb3BlcnRpZXM6CiAgICAgICAgICAgLSBpdGVtczoKICAgICAg
ICAgICAgICAgLSBlbnVtOgogICAgICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6NDc3MC13YXRj
aGRvZworICAgICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6NDc2MGItd2F0Y2hkb2cKKyAgICAg
ICAgICAgICAgICAgIC0gaW5nZW5pYyxqejQ3NjAtd2F0Y2hkb2cKICAgICAgICAgICAgICAgICAg
IC0gaW5nZW5pYyxqejQ3MjViLXdhdGNoZG9nCiAgICAgICAgICAgICAgIC0gY29uc3Q6IGluZ2Vu
aWMsano0NzQwLXdhdGNoZG9nCiAKQEAgLTE0Nyw2ICsxNTQsOCBAQCBwYXR0ZXJuUHJvcGVydGll
czoKICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6NDcyNWItcHdtCiAgICAgICAgICAgLSBpdGVt
czoKICAgICAgICAgICAgICAgLSBlbnVtOgorICAgICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6
NDc2MC1wd20KKyAgICAgICAgICAgICAgICAgIC0gaW5nZW5pYyxqejQ3NjBiLXB3bQogICAgICAg
ICAgICAgICAgICAgLSBpbmdlbmljLGp6NDc3MC1wd20KICAgICAgICAgICAgICAgICAgIC0gaW5n
ZW5pYyxqejQ3ODAtcHdtCiAgICAgICAgICAgICAgIC0gY29uc3Q6IGluZ2VuaWMsano0NzQwLXB3
bQpAQCAtMTgzLDEwICsxOTIsMTUgQEAgcGF0dGVyblByb3BlcnRpZXM6CiAgICAgICAgIG9uZU9m
OgogICAgICAgICAgIC0gZW51bToKICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6NDcyNWItb3N0
Ci0gICAgICAgICAgICAgIC0gaW5nZW5pYyxqejQ3NzAtb3N0CisgICAgICAgICAgICAgIC0gaW5n
ZW5pYyxqejQ3NjBiLW9zdAogICAgICAgICAgIC0gaXRlbXM6Ci0gICAgICAgICAgICAgIC0gY29u
c3Q6IGluZ2VuaWMsano0NzgwLW9zdAotICAgICAgICAgICAgICAtIGNvbnN0OiBpbmdlbmljLGp6
NDc3MC1vc3QKKyAgICAgICAgICAgICAgLSBjb25zdDogaW5nZW5pYyxqejQ3NjAtb3N0CisgICAg
ICAgICAgICAgIC0gY29uc3Q6IGluZ2VuaWMsano0NzI1Yi1vc3QKKyAgICAgICAgICAtIGl0ZW1z
OgorICAgICAgICAgICAgICAtIGVudW06CisgICAgICAgICAgICAgICAgICAtIGluZ2VuaWMsano0
NzgwLW9zdAorICAgICAgICAgICAgICAgICAgLSBpbmdlbmljLGp6NDc3MC1vc3QKKyAgICAgICAg
ICAgICAgLSBjb25zdDogaW5nZW5pYyxqejQ3NjBiLW9zdAogCiAgICAgICByZWc6CiAgICAgICAg
IG1heEl0ZW1zOiAxCkBAIC0yMjYsNyArMjQwLDcgQEAgZXhhbXBsZXM6CiAgICAgI2luY2x1ZGUg
PGR0LWJpbmRpbmdzL2Nsb2NrL2p6NDc3MC1jZ3UuaD4KICAgICAjaW5jbHVkZSA8ZHQtYmluZGlu
Z3MvY2xvY2svaW5nZW5pYyx0Y3UuaD4KICAgICB0Y3U6IHRpbWVyQDEwMDAyMDAwIHsKLSAgICAg
IGNvbXBhdGlibGUgPSAiaW5nZW5pYyxqejQ3NzAtdGN1IiwgInNpbXBsZS1tZmQiOworICAgICAg
Y29tcGF0aWJsZSA9ICJpbmdlbmljLGp6NDc3MC10Y3UiLCAiaW5nZW5pYyxqejQ3NjAtdGN1Iiwg
InNpbXBsZS1tZmQiOwogICAgICAgcmVnID0gPDB4MTAwMDIwMDAgMHgxMDAwPjsKICAgICAgICNh
ZGRyZXNzLWNlbGxzID0gPDE+OwogICAgICAgI3NpemUtY2VsbHMgPSA8MT47CkBAIC0yNzIsNyAr
Mjg2LDcgQEAgZXhhbXBsZXM6CiAgICAgICB9OwogCiAgICAgICBvc3Q6IHRpbWVyQGUwIHsKLSAg
ICAgICAgY29tcGF0aWJsZSA9ICJpbmdlbmljLGp6NDc3MC1vc3QiOworICAgICAgICBjb21wYXRp
YmxlID0gImluZ2VuaWMsano0NzcwLW9zdCIsICJpbmdlbmljLGp6NDc2MGItb3N0IjsKICAgICAg
ICAgcmVnID0gPDB4ZTAgMHgyMD47CiAKICAgICAgICAgY2xvY2tzID0gPCZ0Y3UgVENVX0NMS19P
U1Q+OwpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRpbmdzL3RpbWVy
L251dm90b24sbnBjbTd4eC10aW1lci50eHQgYi9Eb2N1bWVudGF0aW9uL2RldmljZXRyZWUvYmlu
ZGluZ3MvdGltZXIvbnV2b3RvbixucGNtN3h4LXRpbWVyLnR4dAppbmRleCA5NzI1OGYxYTE1MDUu
LmFjM2E1ZTg4NzQ1NSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kZXZpY2V0cmVlL2JpbmRp
bmdzL3RpbWVyL251dm90b24sbnBjbTd4eC10aW1lci50eHQKKysrIGIvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL3RpbWVyL251dm90b24sbnBjbTd4eC10aW1lci50eHQKQEAgLTQs
NyArNCw4IEBAIE51dm90b24gTlBDTTd4eCBoYXZlIHRocmVlIHRpbWVyIG1vZHVsZXMsIGVhY2gg
dGltZXIgbW9kdWxlIHByb3ZpZGVzIGZpdmUgMjQtYml0CiB0aW1lciBjb3VudGVycy4KIAogUmVx
dWlyZWQgcHJvcGVydGllczoKLS0gY29tcGF0aWJsZSAgICAgIDogIm51dm90b24sbnBjbTc1MC10
aW1lciIgZm9yIFBvbGVnIE5QQ003NTAuCistIGNvbXBhdGlibGUgICAgICA6ICJudXZvdG9uLG5w
Y203NTAtdGltZXIiIGZvciBQb2xlZyBOUENNNzUwLCBvcgorICAgICAgICAgICAgICAgICAgICAi
bnV2b3Rvbix3cGNtNDUwLXRpbWVyIiBmb3IgSGVybW9uIFdQQ000NTAuCiAtIHJlZyAgICAgICAg
ICAgICA6IE9mZnNldCBhbmQgbGVuZ3RoIG9mIHRoZSByZWdpc3RlciBzZXQgZm9yIHRoZSBkZXZp
Y2UuCiAtIGludGVycnVwdHMgICAgICA6IENvbnRhaW4gdGhlIHRpbWVyIGludGVycnVwdCBvZiB0
aW1lciAwLgogLSBjbG9ja3MgICAgICAgICAgOiBwaGFuZGxlIG9mIHRpbWVyIHJlZmVyZW5jZSBj
bG9jayAodXN1YWxseSBhIDI1IE1IeiBjbG9jaykuCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9u
L2RldmljZXRyZWUvYmluZGluZ3MvdGltZXIvcmVuZXNhcyxjbXQueWFtbCBiL0RvY3VtZW50YXRp
b24vZGV2aWNldHJlZS9iaW5kaW5ncy90aW1lci9yZW5lc2FzLGNtdC55YW1sCmluZGV4IDQyOGRi
M2EyMWJiOS4uNTNkZDZkOWY1MThmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2RldmljZXRy
ZWUvYmluZGluZ3MvdGltZXIvcmVuZXNhcyxjbXQueWFtbAorKysgYi9Eb2N1bWVudGF0aW9uL2Rl
dmljZXRyZWUvYmluZGluZ3MvdGltZXIvcmVuZXNhcyxjbXQueWFtbApAQCAtNzQsMTEgKzc0LDEz
IEBAIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgIC0gcmVuZXNhcyxyOGE3NzRlMS1jbXQwICAg
ICAjIDMyLWJpdCBDTVQwIG9uIFJaL0cySAogICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5
NS1jbXQwICAgICAgIyAzMi1iaXQgQ01UMCBvbiBSLUNhciBIMwogICAgICAgICAgICAgICAtIHJl
bmVzYXMscjhhNzc5Ni1jbXQwICAgICAgIyAzMi1iaXQgQ01UMCBvbiBSLUNhciBNMy1XCisgICAg
ICAgICAgICAgIC0gcmVuZXNhcyxyOGE3Nzk2MS1jbXQwICAgICAjIDMyLWJpdCBDTVQwIG9uIFIt
Q2FyIE0zLVcrCiAgICAgICAgICAgICAgIC0gcmVuZXNhcyxyOGE3Nzk2NS1jbXQwICAgICAjIDMy
LWJpdCBDTVQwIG9uIFItQ2FyIE0zLU4KICAgICAgICAgICAgICAgLSByZW5lc2FzLHI4YTc3OTcw
LWNtdDAgICAgICMgMzItYml0IENNVDAgb24gUi1DYXIgVjNNCiAgICAgICAgICAgICAgIC0gcmVu
ZXNhcyxyOGE3Nzk4MC1jbXQwICAgICAjIDMyLWJpdCBDTVQwIG9uIFItQ2FyIFYzSAogICAgICAg
ICAgICAgICAtIHJlbmVzYXMscjhhNzc5OTAtY210MCAgICAgIyAzMi1iaXQgQ01UMCBvbiBSLUNh
ciBFMwogICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5OTUtY210MCAgICAgIyAzMi1iaXQg
Q01UMCBvbiBSLUNhciBEMworICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5YTAtY210MCAg
ICAgIyAzMi1iaXQgQ01UMCBvbiBSLUNhciBWM1UKICAgICAgICAgICAtIGNvbnN0OiByZW5lc2Fz
LHJjYXItZ2VuMy1jbXQwICMgMzItYml0IENNVDAgb24gUi1DYXIgR2VuMyBhbmQgUlovRzIKIAog
ICAgICAgLSBpdGVtczoKQEAgLTg5LDExICs5MSwxMyBAQCBwcm9wZXJ0aWVzOgogICAgICAgICAg
ICAgICAtIHJlbmVzYXMscjhhNzc0ZTEtY210MSAgICAgIyA0OC1iaXQgQ01UIG9uIFJaL0cySAog
ICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5NS1jbXQxICAgICAgIyA0OC1iaXQgQ01UIG9u
IFItQ2FyIEgzCiAgICAgICAgICAgICAgIC0gcmVuZXNhcyxyOGE3Nzk2LWNtdDEgICAgICAjIDQ4
LWJpdCBDTVQgb24gUi1DYXIgTTMtVworICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5NjEt
Y210MSAgICAgIyA0OC1iaXQgQ01UIG9uIFItQ2FyIE0zLVcrCiAgICAgICAgICAgICAgIC0gcmVu
ZXNhcyxyOGE3Nzk2NS1jbXQxICAgICAjIDQ4LWJpdCBDTVQgb24gUi1DYXIgTTMtTgogICAgICAg
ICAgICAgICAtIHJlbmVzYXMscjhhNzc5NzAtY210MSAgICAgIyA0OC1iaXQgQ01UIG9uIFItQ2Fy
IFYzTQogICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5ODAtY210MSAgICAgIyA0OC1iaXQg
Q01UIG9uIFItQ2FyIFYzSAogICAgICAgICAgICAgICAtIHJlbmVzYXMscjhhNzc5OTAtY210MSAg
ICAgIyA0OC1iaXQgQ01UIG9uIFItQ2FyIEUzCiAgICAgICAgICAgICAgIC0gcmVuZXNhcyxyOGE3
Nzk5NS1jbXQxICAgICAjIDQ4LWJpdCBDTVQgb24gUi1DYXIgRDMKKyAgICAgICAgICAgICAgLSBy
ZW5lc2FzLHI4YTc3OWEwLWNtdDEgICAgICMgNDgtYml0IENNVCBvbiBSLUNhciBWM1UKICAgICAg
ICAgICAtIGNvbnN0OiByZW5lc2FzLHJjYXItZ2VuMy1jbXQxICMgNDgtYml0IENNVCBvbiBSLUNh
ciBHZW4zIGFuZCBSWi9HMgogCiAgIHJlZzoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vZGV2
aWNldHJlZS9iaW5kaW5ncy90aW1lci9yZW5lc2FzLHRtdS55YW1sIGIvRG9jdW1lbnRhdGlvbi9k
ZXZpY2V0cmVlL2JpbmRpbmdzL3RpbWVyL3JlbmVzYXMsdG11LnlhbWwKaW5kZXggYzU0MTg4NzMx
YTFiLi5mMGYwZjEyMWMzNTUgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vZGV2aWNldHJlZS9i
aW5kaW5ncy90aW1lci9yZW5lc2FzLHRtdS55YW1sCisrKyBiL0RvY3VtZW50YXRpb24vZGV2aWNl
dHJlZS9iaW5kaW5ncy90aW1lci9yZW5lc2FzLHRtdS55YW1sCkBAIC0yOCw4ICsyOCwxNCBAQCBw
cm9wZXJ0aWVzOgogICAgICAgICAgIC0gcmVuZXNhcyx0bXUtcjhhNzc0ZTEgIyBSWi9HMkgKICAg
ICAgICAgICAtIHJlbmVzYXMsdG11LXI4YTc3NzggICMgUi1DYXIgTTFBCiAgICAgICAgICAgLSBy
ZW5lc2FzLHRtdS1yOGE3Nzc5ICAjIFItQ2FyIEgxCisgICAgICAgICAgLSByZW5lc2FzLHRtdS1y
OGE3Nzk1ICAjIFItQ2FyIEgzCisgICAgICAgICAgLSByZW5lc2FzLHRtdS1yOGE3Nzk2ICAjIFIt
Q2FyIE0zLVcKKyAgICAgICAgICAtIHJlbmVzYXMsdG11LXI4YTc3OTYxICMgUi1DYXIgTTMtVysK
KyAgICAgICAgICAtIHJlbmVzYXMsdG11LXI4YTc3OTY1ICMgUi1DYXIgTTMtTgogICAgICAgICAg
IC0gcmVuZXNhcyx0bXUtcjhhNzc5NzAgIyBSLUNhciBWM00KICAgICAgICAgICAtIHJlbmVzYXMs
dG11LXI4YTc3OTgwICMgUi1DYXIgVjNICisgICAgICAgICAgLSByZW5lc2FzLHRtdS1yOGE3Nzk5
MCAjIFItQ2FyIEUzCisgICAgICAgICAgLSByZW5lc2FzLHRtdS1yOGE3Nzk5NSAjIFItQ2FyIEQz
CiAgICAgICAtIGNvbnN0OiByZW5lc2FzLHRtdQogCiAgIHJlZzoKZGlmZiAtLWdpdCBhL2FyY2gv
YXJtL2Jvb3QvZHRzL2RyYTctbDQuZHRzaSBiL2FyY2gvYXJtL2Jvb3QvZHRzL2RyYTctbDQuZHRz
aQppbmRleCAzYmY5MGQ5ZTMzMzUuLmEyOTRhMDJmMmQyMyAxMDA2NDQKLS0tIGEvYXJjaC9hcm0v
Ym9vdC9kdHMvZHJhNy1sNC5kdHNpCisrKyBiL2FyY2gvYXJtL2Jvb3QvZHRzL2RyYTctbDQuZHRz
aQpAQCAtMTE2OCw3ICsxMTY4LDcgQEAKIAkJCX07CiAJCX07CiAKLQkJdGFyZ2V0LW1vZHVsZUAz
NDAwMCB7CQkJLyogMHg0ODAzNDAwMCwgYXAgNyA0Ni4wICovCisJCXRpbWVyM190YXJnZXQ6IHRh
cmdldC1tb2R1bGVAMzQwMDAgewkvKiAweDQ4MDM0MDAwLCBhcCA3IDQ2LjAgKi8KIAkJCWNvbXBh
dGlibGUgPSAidGksc3lzYy1vbWFwNC10aW1lciIsICJ0aSxzeXNjIjsKIAkJCXJlZyA9IDwweDM0
MDAwIDB4ND4sCiAJCQkgICAgICA8MHgzNDAxMCAweDQ+OwpAQCAtMTE5NSw3ICsxMTk1LDcgQEAK
IAkJCX07CiAJCX07CiAKLQkJdGFyZ2V0LW1vZHVsZUAzNjAwMCB7CQkJLyogMHg0ODAzNjAwMCwg
YXAgOSA0ZS4wICovCisJCXRpbWVyNF90YXJnZXQ6IHRhcmdldC1tb2R1bGVAMzYwMDAgewkvKiAw
eDQ4MDM2MDAwLCBhcCA5IDRlLjAgKi8KIAkJCWNvbXBhdGlibGUgPSAidGksc3lzYy1vbWFwNC10
aW1lciIsICJ0aSxzeXNjIjsKIAkJCXJlZyA9IDwweDM2MDAwIDB4ND4sCiAJCQkgICAgICA8MHgz
NjAxMCAweDQ+OwpkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vYm9vdC9kdHMvZHJhNy5kdHNpIGIvYXJj
aC9hcm0vYm9vdC9kdHMvZHJhNy5kdHNpCmluZGV4IGNlMTE5NDc0NGY4NC4uNTNkNjg3ODZhNjFm
IDEwMDY0NAotLS0gYS9hcmNoL2FybS9ib290L2R0cy9kcmE3LmR0c2kKKysrIGIvYXJjaC9hcm0v
Ym9vdC9kdHMvZHJhNy5kdHNpCkBAIC00Niw2ICs0Niw3IEBACiAKIAl0aW1lciB7CiAJCWNvbXBh
dGlibGUgPSAiYXJtLGFybXY3LXRpbWVyIjsKKwkJc3RhdHVzID0gImRpc2FibGVkIjsJLyogU2Vl
IEFSTSBhcmNoaXRlY3RlZCB0aW1lciB3cmFwIGVycmF0dW0gaTk0MCAqLwogCQlpbnRlcnJ1cHRz
ID0gPEdJQ19QUEkgMTMgKEdJQ19DUFVfTUFTS19TSU1QTEUoMikgfCBJUlFfVFlQRV9MRVZFTF9M
T1cpPiwKIAkJCSAgICAgPEdJQ19QUEkgMTQgKEdJQ19DUFVfTUFTS19TSU1QTEUoMikgfCBJUlFf
VFlQRV9MRVZFTF9MT1cpPiwKIAkJCSAgICAgPEdJQ19QUEkgMTEgKEdJQ19DUFVfTUFTS19TSU1Q
TEUoMikgfCBJUlFfVFlQRV9MRVZFTF9MT1cpPiwKQEAgLTEyNDEsMyArMTI0MiwyMiBAQAogCQlh
c3NpZ25lZC1jbG9jay1wYXJlbnRzID0gPCZzeXNfMzJrX2NrPjsKIAl9OwogfTsKKworLyogTG9j
YWwgdGltZXJzLCBzZWUgQVJNIGFyY2hpdGVjdGVkIHRpbWVyIHdyYXAgZXJyYXR1bSBpOTQwICov
CismdGltZXIzX3RhcmdldCB7CisJdGksbm8tcmVzZXQtb24taW5pdDsKKwl0aSxuby1pZGxlOwor
CXRpbWVyQDAgeworCQlhc3NpZ25lZC1jbG9ja3MgPSA8Jmw0cGVyX2Nsa2N0cmwgRFJBN19MNFBF
Ul9USU1FUjNfQ0xLQ1RSTCAyND47CisJCWFzc2lnbmVkLWNsb2NrLXBhcmVudHMgPSA8JnRpbWVy
X3N5c19jbGtfZGl2PjsKKwl9OworfTsKKworJnRpbWVyNF90YXJnZXQgeworCXRpLG5vLXJlc2V0
LW9uLWluaXQ7CisJdGksbm8taWRsZTsKKwl0aW1lckAwIHsKKwkJYXNzaWduZWQtY2xvY2tzID0g
PCZsNHBlcl9jbGtjdHJsIERSQTdfTDRQRVJfVElNRVI0X0NMS0NUUkwgMjQ+OworCQlhc3NpZ25l
ZC1jbG9jay1wYXJlbnRzID0gPCZ0aW1lcl9zeXNfY2xrX2Rpdj47CisJfTsKK307CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL2FybV9hcmNoX3RpbWVyLmMgYi9kcml2ZXJzL2Nsb2Nr
c291cmNlL2FybV9hcmNoX3RpbWVyLmMKaW5kZXggZDAxNzc4MjRjNTE4Li4xYjg4NTk2NGZiMzQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvYXJtX2FyY2hfdGltZXIuYworKysgYi9k
cml2ZXJzL2Nsb2Nrc291cmNlL2FybV9hcmNoX3RpbWVyLmMKQEAgLTUxLDcgKzUxLDcgQEAKIAog
c3RhdGljIHVuc2lnbmVkIGFyY2hfdGltZXJzX3ByZXNlbnQgX19pbml0ZGF0YTsKIAotc3RhdGlj
IHZvaWQgX19pb21lbSAqYXJjaF9jb3VudGVyX2Jhc2U7CitzdGF0aWMgdm9pZCBfX2lvbWVtICph
cmNoX2NvdW50ZXJfYmFzZSBfX3JvX2FmdGVyX2luaXQ7CiAKIHN0cnVjdCBhcmNoX3RpbWVyIHsK
IAl2b2lkIF9faW9tZW0gKmJhc2U7CkBAIC02MCwxNSArNjAsMTYgQEAgc3RydWN0IGFyY2hfdGlt
ZXIgewogCiAjZGVmaW5lIHRvX2FyY2hfdGltZXIoZSkgY29udGFpbmVyX29mKGUsIHN0cnVjdCBh
cmNoX3RpbWVyLCBldnQpCiAKLXN0YXRpYyB1MzIgYXJjaF90aW1lcl9yYXRlOwotc3RhdGljIGlu
dCBhcmNoX3RpbWVyX3BwaVtBUkNIX1RJTUVSX01BWF9USU1FUl9QUEldOworc3RhdGljIHUzMiBh
cmNoX3RpbWVyX3JhdGUgX19yb19hZnRlcl9pbml0OwordTMyIGFyY2hfdGltZXJfcmF0ZTEgX19y
b19hZnRlcl9pbml0Oworc3RhdGljIGludCBhcmNoX3RpbWVyX3BwaVtBUkNIX1RJTUVSX01BWF9U
SU1FUl9QUEldIF9fcm9fYWZ0ZXJfaW5pdDsKIAogc3RhdGljIHN0cnVjdCBjbG9ja19ldmVudF9k
ZXZpY2UgX19wZXJjcHUgKmFyY2hfdGltZXJfZXZ0OwogCi1zdGF0aWMgZW51bSBhcmNoX3RpbWVy
X3BwaV9uciBhcmNoX3RpbWVyX3VzZXNfcHBpID0gQVJDSF9USU1FUl9WSVJUX1BQSTsKLXN0YXRp
YyBib29sIGFyY2hfdGltZXJfYzNzdG9wOwotc3RhdGljIGJvb2wgYXJjaF90aW1lcl9tZW1fdXNl
X3ZpcnR1YWw7Ci1zdGF0aWMgYm9vbCBhcmNoX2NvdW50ZXJfc3VzcGVuZF9zdG9wOworc3RhdGlj
IGVudW0gYXJjaF90aW1lcl9wcGlfbnIgYXJjaF90aW1lcl91c2VzX3BwaSBfX3JvX2FmdGVyX2lu
aXQgPSBBUkNIX1RJTUVSX1ZJUlRfUFBJOworc3RhdGljIGJvb2wgYXJjaF90aW1lcl9jM3N0b3Ag
X19yb19hZnRlcl9pbml0Oworc3RhdGljIGJvb2wgYXJjaF90aW1lcl9tZW1fdXNlX3ZpcnR1YWwg
X19yb19hZnRlcl9pbml0Oworc3RhdGljIGJvb2wgYXJjaF9jb3VudGVyX3N1c3BlbmRfc3RvcCBf
X3JvX2FmdGVyX2luaXQ7CiAjaWZkZWYgQ09ORklHX0dFTkVSSUNfR0VUVElNRU9GREFZCiBzdGF0
aWMgZW51bSB2ZHNvX2Nsb2NrX21vZGUgdmRzb19kZWZhdWx0ID0gVkRTT19DTE9DS01PREVfQVJD
SFRJTUVSOwogI2Vsc2UKQEAgLTc2LDcgKzc3LDcgQEAgc3RhdGljIGVudW0gdmRzb19jbG9ja19t
b2RlIHZkc29fZGVmYXVsdCA9IFZEU09fQ0xPQ0tNT0RFX05PTkU7CiAjZW5kaWYgLyogQ09ORklH
X0dFTkVSSUNfR0VUVElNRU9GREFZICovCiAKIHN0YXRpYyBjcHVtYXNrX3QgZXZ0c3RybV9hdmFp
bGFibGUgPSBDUFVfTUFTS19OT05FOwotc3RhdGljIGJvb2wgZXZ0c3RybV9lbmFibGUgPSBJU19F
TkFCTEVEKENPTkZJR19BUk1fQVJDSF9USU1FUl9FVlRTVFJFQU0pOworc3RhdGljIGJvb2wgZXZ0
c3RybV9lbmFibGUgX19yb19hZnRlcl9pbml0ID0gSVNfRU5BQkxFRChDT05GSUdfQVJNX0FSQ0hf
VElNRVJfRVZUU1RSRUFNKTsKIAogc3RhdGljIGludCBfX2luaXQgZWFybHlfZXZ0c3RybV9jZmco
Y2hhciAqYnVmKQogewpAQCAtMTc2LDcgKzE3Nyw3IEBAIHN0YXRpYyBub3RyYWNlIHU2NCBhcmNo
X2NvdW50ZXJfZ2V0X2NudHZjdCh2b2lkKQogICogdG8gZXhpc3Qgb24gYXJtNjQuIGFybSBkb2Vz
bid0IHVzZSB0aGlzIGJlZm9yZSBEVCBpcyBwcm9iZWQgc28gZXZlbgogICogaWYgd2UgZG9uJ3Qg
aGF2ZSB0aGUgY3AxNSBhY2Nlc3NvcnMgd2Ugd29uJ3QgaGF2ZSBhIHByb2JsZW0uCiAgKi8KLXU2
NCAoKmFyY2hfdGltZXJfcmVhZF9jb3VudGVyKSh2b2lkKSA9IGFyY2hfY291bnRlcl9nZXRfY250
dmN0OwordTY0ICgqYXJjaF90aW1lcl9yZWFkX2NvdW50ZXIpKHZvaWQpIF9fcm9fYWZ0ZXJfaW5p
dCA9IGFyY2hfY291bnRlcl9nZXRfY250dmN0OwogRVhQT1JUX1NZTUJPTF9HUEwoYXJjaF90aW1l
cl9yZWFkX2NvdW50ZXIpOwogCiBzdGF0aWMgdTY0IGFyY2hfY291bnRlcl9yZWFkKHN0cnVjdCBj
bG9ja3NvdXJjZSAqY3MpCkBAIC05MjUsNyArOTI2LDcgQEAgc3RhdGljIGludCB2YWxpZGF0ZV90
aW1lcl9yYXRlKHZvaWQpCiAgKiByYXRlIHdhcyBwcm9iZWQgZmlyc3QsIGFuZCBkb24ndCB2ZXJp
ZnkgdGhhdCBvdGhlcnMgbWF0Y2guIElmIHRoZSBmaXJzdCBub2RlCiAgKiBwcm9iZWQgaGFzIGEg
Y2xvY2stZnJlcXVlbmN5IHByb3BlcnR5LCB0aGlzIG92ZXJyaWRlcyB0aGUgSFcgcmVnaXN0ZXIu
CiAgKi8KLXN0YXRpYyB2b2lkIGFyY2hfdGltZXJfb2ZfY29uZmlndXJlX3JhdGUodTMyIHJhdGUs
IHN0cnVjdCBkZXZpY2Vfbm9kZSAqbnApCitzdGF0aWMgdm9pZCBfX2luaXQgYXJjaF90aW1lcl9v
Zl9jb25maWd1cmVfcmF0ZSh1MzIgcmF0ZSwgc3RydWN0IGRldmljZV9ub2RlICpucCkKIHsKIAkv
KiBXaG8gaGFzIG1vcmUgdGhhbiBvbmUgaW5kZXBlbmRlbnQgc3lzdGVtIGNvdW50ZXI/ICovCiAJ
aWYgKGFyY2hfdGltZXJfcmF0ZSkKQEAgLTkzOSw3ICs5NDAsNyBAQCBzdGF0aWMgdm9pZCBhcmNo
X3RpbWVyX29mX2NvbmZpZ3VyZV9yYXRlKHUzMiByYXRlLCBzdHJ1Y3QgZGV2aWNlX25vZGUgKm5w
KQogCQlwcl93YXJuKCJmcmVxdWVuY3kgbm90IGF2YWlsYWJsZVxuIik7CiB9CiAKLXN0YXRpYyB2
b2lkIGFyY2hfdGltZXJfYmFubmVyKHVuc2lnbmVkIHR5cGUpCitzdGF0aWMgdm9pZCBfX2luaXQg
YXJjaF90aW1lcl9iYW5uZXIodW5zaWduZWQgdHlwZSkKIHsKIAlwcl9pbmZvKCIlcyVzJXMgdGlt
ZXIocykgcnVubmluZyBhdCAlbHUuJTAybHVNSHogKCVzJXMlcykuXG4iLAogCQl0eXBlICYgQVJD
SF9USU1FUl9UWVBFX0NQMTUgPyAiY3AxNSIgOiAiIiwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xv
Y2tzb3VyY2UvY2xrc3JjLWRieDUwMC1wcmNtdS5jIGIvZHJpdmVycy9jbG9ja3NvdXJjZS9jbGtz
cmMtZGJ4NTAwLXByY211LmMKaW5kZXggOTk2OTAwZDAxN2M2Li4yZmM5M2U0NmNlYTMgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvY2xrc3JjLWRieDUwMC1wcmNtdS5jCisrKyBiL2Ry
aXZlcnMvY2xvY2tzb3VyY2UvY2xrc3JjLWRieDUwMC1wcmNtdS5jCkBAIC0xOCw3ICsxOCw3IEBA
CiAKICNkZWZpbmUgUkFURV8zMksJCTMyNzY4CiAKLSNkZWZpbmUgVElNRVJfTU9ERV9DT05USU5P
VVMJMHgxCisjZGVmaW5lIFRJTUVSX01PREVfQ09OVElOVU9VUwkweDEKICNkZWZpbmUgVElNRVJf
RE9XTkNPVU5UX1ZBTAkweGZmZmZmZmZmCiAKICNkZWZpbmUgUFJDTVVfVElNRVJfUkVGCQkwCkBA
IC01NSwxMyArNTUsMTMgQEAgc3RhdGljIGludCBfX2luaXQgY2xrc3JjX2RieDUwMF9wcmNtdV9p
bml0KHN0cnVjdCBkZXZpY2Vfbm9kZSAqbm9kZSkKIAogCS8qCiAJICogVGhlIEE5IHN1YiBzeXN0
ZW0gZXhwZWN0cyB0aGUgdGltZXIgdG8gYmUgY29uZmlndXJlZCBhcwotCSAqIGEgY29udGlub3Vz
IGxvb3BpbmcgdGltZXIuCisJICogYSBjb250aW51b3VzIGxvb3BpbmcgdGltZXIuCiAJICogVGhl
IFBSQ01VIHNob3VsZCBjb25maWd1cmUgaXQgYnV0IGlmIGl0IGZvciBzb21lIHJlYXNvbgogCSAq
IGRvbid0IHdlIGRvIGl0IGhlcmUuCiAJICovCiAJaWYgKHJlYWRsKGNsa3NyY19kYng1MDBfdGlt
ZXJfYmFzZSArIFBSQ01VX1RJTUVSX01PREUpICE9Ci0JICAgIFRJTUVSX01PREVfQ09OVElOT1VT
KSB7Ci0JCXdyaXRlbChUSU1FUl9NT0RFX0NPTlRJTk9VUywKKwkgICAgVElNRVJfTU9ERV9DT05U
SU5VT1VTKSB7CisJCXdyaXRlbChUSU1FUl9NT0RFX0NPTlRJTlVPVVMsCiAJCSAgICAgICBjbGtz
cmNfZGJ4NTAwX3RpbWVyX2Jhc2UgKyBQUkNNVV9USU1FUl9NT0RFKTsKIAkJd3JpdGVsKFRJTUVS
X0RPV05DT1VOVF9WQUwsCiAJCSAgICAgICBjbGtzcmNfZGJ4NTAwX3RpbWVyX2Jhc2UgKyBQUkNN
VV9USU1FUl9SRUYpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9jbG9ja3NvdXJjZS9kd19hcGJfdGlt
ZXJfb2YuYyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvZHdfYXBiX3RpbWVyX29mLmMKaW5kZXggNDJl
N2U0M2I4ZmNkLi4zODE5ZWY1YjcwOTggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2Uv
ZHdfYXBiX3RpbWVyX29mLmMKKysrIGIvZHJpdmVycy9jbG9ja3NvdXJjZS9kd19hcGJfdGltZXJf
b2YuYwpAQCAtMzgsNyArMzgsNyBAQCBzdGF0aWMgaW50IF9faW5pdCB0aW1lcl9nZXRfYmFzZV9h
bmRfcmF0ZShzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLAogCX0KIAogCS8qCi0JICogTm90IGFsbCBp
bXBsZW1lbnRhdGlvbnMgdXNlIGEgcGVyaXBoYWwgY2xvY2ssIHNvIGRvbid0IHBhbmljCisJICog
Tm90IGFsbCBpbXBsZW1lbnRhdGlvbnMgdXNlIGEgcGVyaXBoZXJhbCBjbG9jaywgc28gZG9uJ3Qg
cGFuaWMKIAkgKiBpZiBpdCdzIG5vdCBwcmVzZW50CiAJICovCiAJcGNsayA9IG9mX2Nsa19nZXRf
YnlfbmFtZShucCwgInBjbGsiKTsKQEAgLTUyLDE4ICs1MiwzNCBAQCBzdGF0aWMgaW50IF9faW5p
dCB0aW1lcl9nZXRfYmFzZV9hbmRfcmF0ZShzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLAogCQlyZXR1
cm4gMDsKIAogCXRpbWVyX2NsayA9IG9mX2Nsa19nZXRfYnlfbmFtZShucCwgInRpbWVyIik7Ci0J
aWYgKElTX0VSUih0aW1lcl9jbGspKQotCQlyZXR1cm4gUFRSX0VSUih0aW1lcl9jbGspOworCWlm
IChJU19FUlIodGltZXJfY2xrKSkgeworCQlyZXQgPSBQVFJfRVJSKHRpbWVyX2Nsayk7CisJCWdv
dG8gb3V0X3BjbGtfZGlzYWJsZTsKKwl9CiAKIAlyZXQgPSBjbGtfcHJlcGFyZV9lbmFibGUodGlt
ZXJfY2xrKTsKIAlpZiAocmV0KQotCQlyZXR1cm4gcmV0OworCQlnb3RvIG91dF90aW1lcl9jbGtf
cHV0OwogCiAJKnJhdGUgPSBjbGtfZ2V0X3JhdGUodGltZXJfY2xrKTsKLQlpZiAoISgqcmF0ZSkp
Ci0JCXJldHVybiAtRUlOVkFMOworCWlmICghKCpyYXRlKSkgeworCQlyZXQgPSAtRUlOVkFMOwor
CQlnb3RvIG91dF90aW1lcl9jbGtfZGlzYWJsZTsKKwl9CiAKIAlyZXR1cm4gMDsKKworb3V0X3Rp
bWVyX2Nsa19kaXNhYmxlOgorCWNsa19kaXNhYmxlX3VucHJlcGFyZSh0aW1lcl9jbGspOworb3V0
X3RpbWVyX2Nsa19wdXQ6CisJY2xrX3B1dCh0aW1lcl9jbGspOworb3V0X3BjbGtfZGlzYWJsZToK
KwlpZiAoIUlTX0VSUihwY2xrKSkgeworCQljbGtfZGlzYWJsZV91bnByZXBhcmUocGNsayk7CisJ
CWNsa19wdXQocGNsayk7CisJfQorCWlvdW5tYXAoKmJhc2UpOworCXJldHVybiByZXQ7CiB9CiAK
IHN0YXRpYyBpbnQgX19pbml0IGFkZF9jbG9ja2V2ZW50KHN0cnVjdCBkZXZpY2Vfbm9kZSAqZXZl
bnRfdGltZXIpCmRpZmYgLS1naXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL2h5cGVydl90aW1lci5j
IGIvZHJpdmVycy9jbG9ja3NvdXJjZS9oeXBlcnZfdGltZXIuYwppbmRleCAyNjlhNjkxYmQyYzQu
LmEwMmIwYTIyNDgwNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9jbG9ja3NvdXJjZS9oeXBlcnZfdGlt
ZXIuYworKysgYi9kcml2ZXJzL2Nsb2Nrc291cmNlL2h5cGVydl90aW1lci5jCkBAIC00NTcsNyAr
NDU3LDcgQEAgdm9pZCBfX2luaXQgaHZfaW5pdF9jbG9ja3NvdXJjZSh2b2lkKQogewogCS8qCiAJ
ICogVHJ5IHRvIHNldCB1cCB0aGUgVFNDIHBhZ2UgY2xvY2tzb3VyY2UuIElmIGl0IHN1Y2NlZWRz
LCB3ZSdyZQotCSAqIGRvbmUuIE90aGVyd2lzZSwgc2V0IHVwIHRoZSBNU1IgY2xvY2tzb3J1Y2Uu
ICBBdCBsZWFzdCBvbmUgb2YKKwkgKiBkb25lLiBPdGhlcndpc2UsIHNldCB1cCB0aGUgTVNSIGNs
b2Nrc291cmNlLiAgQXQgbGVhc3Qgb25lIG9mCiAJICogdGhlc2Ugd2lsbCBhbHdheXMgYmUgYXZh
aWxhYmxlIGV4Y2VwdCBvbiB2ZXJ5IG9sZCB2ZXJzaW9ucyBvZgogCSAqIEh5cGVyLVYgb24geDg2
LiAgSW4gdGhhdCBjYXNlIHdlIHdvbid0IGhhdmUgYSBIeXBlci1WCiAJICogY2xvY2tzb3VyY2Us
IGJ1dCBMaW51eCB3aWxsIHN0aWxsIHJ1biB3aXRoIGEgY2xvY2tzb3VyY2UgYmFzZWQKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvaW5nZW5pYy1vc3QuYyBiL2RyaXZlcnMvY2xvY2tz
b3VyY2UvaW5nZW5pYy1vc3QuYwppbmRleCAwMjllZmMyNzMxYjQuLjA2ZDI1NzU0ZTYwNiAxMDA2
NDQKLS0tIGEvZHJpdmVycy9jbG9ja3NvdXJjZS9pbmdlbmljLW9zdC5jCisrKyBiL2RyaXZlcnMv
Y2xvY2tzb3VyY2UvaW5nZW5pYy1vc3QuYwpAQCAtODgsOSArODgsOSBAQCBzdGF0aWMgaW50IF9f
aW5pdCBpbmdlbmljX29zdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCQly
ZXR1cm4gUFRSX0VSUihvc3QtPnJlZ3MpOwogCiAJbWFwID0gZGV2aWNlX25vZGVfdG9fcmVnbWFw
KGRldi0+cGFyZW50LT5vZl9ub2RlKTsKLQlpZiAoIW1hcCkgeworCWlmIChJU19FUlIobWFwKSkg
ewogCQlkZXZfZXJyKGRldiwgInJlZ21hcCBub3QgZm91bmQiKTsKLQkJcmV0dXJuIC1FSU5WQUw7
CisJCXJldHVybiBQVFJfRVJSKG1hcCk7CiAJfQogCiAJb3N0LT5jbGsgPSBkZXZtX2Nsa19nZXQo
ZGV2LCAib3N0Iik7CkBAIC0xNjcsMTMgKzE2NywxNCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGlu
Z2VuaWNfb3N0X3NvY19pbmZvIGp6NDcyNWJfb3N0X3NvY19pbmZvID0gewogCS5pczY0Yml0ID0g
ZmFsc2UsCiB9OwogCi1zdGF0aWMgY29uc3Qgc3RydWN0IGluZ2VuaWNfb3N0X3NvY19pbmZvIGp6
NDc3MF9vc3Rfc29jX2luZm8gPSB7CitzdGF0aWMgY29uc3Qgc3RydWN0IGluZ2VuaWNfb3N0X3Nv
Y19pbmZvIGp6NDc2MGJfb3N0X3NvY19pbmZvID0gewogCS5pczY0Yml0ID0gdHJ1ZSwKIH07CiAK
IHN0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIGluZ2VuaWNfb3N0X29mX21hdGNoW10g
PSB7CiAJeyAuY29tcGF0aWJsZSA9ICJpbmdlbmljLGp6NDcyNWItb3N0IiwgLmRhdGEgPSAmano0
NzI1Yl9vc3Rfc29jX2luZm8sIH0sCi0JeyAuY29tcGF0aWJsZSA9ICJpbmdlbmljLGp6NDc3MC1v
c3QiLCAuZGF0YSA9ICZqejQ3NzBfb3N0X3NvY19pbmZvLCB9LAorCXsgLmNvbXBhdGlibGUgPSAi
aW5nZW5pYyxqejQ3NjBiLW9zdCIsIC5kYXRhID0gJmp6NDc2MGJfb3N0X3NvY19pbmZvLCB9LAor
CXsgLmNvbXBhdGlibGUgPSAiaW5nZW5pYyxqejQ3NzAtb3N0IiwgLmRhdGEgPSAmano0NzYwYl9v
c3Rfc29jX2luZm8sIH0sCiAJeyB9CiB9OwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2Nsb2Nrc291
cmNlL2luZ2VuaWMtdGltZXIuYyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvaW5nZW5pYy10aW1lci5j
CmluZGV4IDkwNWZkNmIxNjNhOC4uMjRlZDBmMWYwODliIDEwMDY0NAotLS0gYS9kcml2ZXJzL2Ns
b2Nrc291cmNlL2luZ2VuaWMtdGltZXIuYworKysgYi9kcml2ZXJzL2Nsb2Nrc291cmNlL2luZ2Vu
aWMtdGltZXIuYwpAQCAtMjY0LDYgKzI2NCw3IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaW5nZW5p
Y19zb2NfaW5mbyBqejQ3MjViX3NvY19pbmZvID0gewogc3RhdGljIGNvbnN0IHN0cnVjdCBvZl9k
ZXZpY2VfaWQgaW5nZW5pY190Y3Vfb2ZfbWF0Y2hbXSA9IHsKIAl7IC5jb21wYXRpYmxlID0gImlu
Z2VuaWMsano0NzQwLXRjdSIsIC5kYXRhID0gJmp6NDc0MF9zb2NfaW5mbywgfSwKIAl7IC5jb21w
YXRpYmxlID0gImluZ2VuaWMsano0NzI1Yi10Y3UiLCAuZGF0YSA9ICZqejQ3MjViX3NvY19pbmZv
LCB9LAorCXsgLmNvbXBhdGlibGUgPSAiaW5nZW5pYyxqejQ3NjAtdGN1IiwgLmRhdGEgPSAmano0
NzQwX3NvY19pbmZvLCB9LAogCXsgLmNvbXBhdGlibGUgPSAiaW5nZW5pYyxqejQ3NzAtdGN1Iiwg
LmRhdGEgPSAmano0NzQwX3NvY19pbmZvLCB9LAogCXsgLmNvbXBhdGlibGUgPSAiaW5nZW5pYyx4
MTAwMC10Y3UiLCAuZGF0YSA9ICZqejQ3NDBfc29jX2luZm8sIH0sCiAJeyAvKiBzZW50aW5lbCAq
LyB9CkBAIC0zNTgsNiArMzU5LDcgQEAgc3RhdGljIGludCBfX2luaXQgaW5nZW5pY190Y3VfaW5p
dChzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wKQogCiBUSU1FUl9PRl9ERUNMQVJFKGp6NDc0MF90Y3Vf
aW50YywgICJpbmdlbmljLGp6NDc0MC10Y3UiLCAgaW5nZW5pY190Y3VfaW5pdCk7CiBUSU1FUl9P
Rl9ERUNMQVJFKGp6NDcyNWJfdGN1X2ludGMsICJpbmdlbmljLGp6NDcyNWItdGN1IiwgaW5nZW5p
Y190Y3VfaW5pdCk7CitUSU1FUl9PRl9ERUNMQVJFKGp6NDc2MF90Y3VfaW50YywgICJpbmdlbmlj
LGp6NDc2MC10Y3UiLCAgaW5nZW5pY190Y3VfaW5pdCk7CiBUSU1FUl9PRl9ERUNMQVJFKGp6NDc3
MF90Y3VfaW50YywgICJpbmdlbmljLGp6NDc3MC10Y3UiLCAgaW5nZW5pY190Y3VfaW5pdCk7CiBU
SU1FUl9PRl9ERUNMQVJFKHgxMDAwX3RjdV9pbnRjLCAgImluZ2VuaWMseDEwMDAtdGN1IiwgIGlu
Z2VuaWNfdGN1X2luaXQpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL3NoX2Nt
dC5jIGIvZHJpdmVycy9jbG9ja3NvdXJjZS9zaF9jbXQuYwppbmRleCBjOThmODg1MWZkNjguLmQ3
ZWQ5OWYwMDAxZiAxMDA2NDQKLS0tIGEvZHJpdmVycy9jbG9ja3NvdXJjZS9zaF9jbXQuYworKysg
Yi9kcml2ZXJzL2Nsb2Nrc291cmNlL3NoX2NtdC5jCkBAIC0zMzksOCArMzM5LDkgQEAgc3RhdGlj
IGludCBzaF9jbXRfZW5hYmxlKHN0cnVjdCBzaF9jbXRfY2hhbm5lbCAqY2gpCiAJCXNoX2NtdF93
cml0ZV9jbWNzcihjaCwgU0hfQ01UMTZfQ01DU1JfQ01JRSB8CiAJCQkJICAgU0hfQ01UMTZfQ01D
U1JfQ0tTNTEyKTsKIAl9IGVsc2UgewotCQlzaF9jbXRfd3JpdGVfY21jc3IoY2gsIFNIX0NNVDMy
X0NNQ1NSX0NNTSB8Ci0JCQkJICAgU0hfQ01UMzJfQ01DU1JfQ01UT1VUX0lFIHwKKwkJdTMyIGNt
dG91dCA9IGNoLT5jbXQtPmluZm8tPm1vZGVsIDw9IFNIX0NNVF80OEJJVCA/CisJCQkgICAgICBT
SF9DTVQzMl9DTUNTUl9DTVRPVVRfSUUgOiAwOworCQlzaF9jbXRfd3JpdGVfY21jc3IoY2gsIGNt
dG91dCB8IFNIX0NNVDMyX0NNQ1NSX0NNTSB8CiAJCQkJICAgU0hfQ01UMzJfQ01DU1JfQ01SX0lS
USB8CiAJCQkJICAgU0hfQ01UMzJfQ01DU1JfQ0tTX1JDTEs4KTsKIAl9CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLWF0bWVsLXRjYi5jIGIvZHJpdmVycy9jbG9ja3NvdXJj
ZS90aW1lci1hdG1lbC10Y2IuYwppbmRleCA3ODdkYmViYmI0MzIuLjI3YWYxN2M5OTU5MCAxMDA2
NDQKLS0tIGEvZHJpdmVycy9jbG9ja3NvdXJjZS90aW1lci1hdG1lbC10Y2IuYworKysgYi9kcml2
ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLWF0bWVsLXRjYi5jCkBAIC00NTUsOSArNDU1LDkgQEAgc3Rh
dGljIGludCBfX2luaXQgdGNiX2Nsa3NyY19pbml0KHN0cnVjdCBkZXZpY2Vfbm9kZSAqbm9kZSkK
IAl0Y2FkZHIgPSB0Yy5yZWdzOwogCiAJaWYgKGJpdHMgPT0gMzIpIHsKLQkJLyogdXNlIGFwcm9w
cmlhdGUgZnVuY3Rpb24gdG8gcmVhZCAzMiBiaXQgY291bnRlciAqLworCQkvKiB1c2UgYXBwcm9w
cmlhdGUgZnVuY3Rpb24gdG8gcmVhZCAzMiBiaXQgY291bnRlciAqLwogCQljbGtzcmMucmVhZCA9
IHRjX2dldF9jeWNsZXMzMjsKLQkJLyogc2V0dXAgb255IGNoYW5uZWwgMCAqLworCQkvKiBzZXR1
cCBvbmx5IGNoYW5uZWwgMCAqLwogCQl0Y2Jfc2V0dXBfc2luZ2xlX2NoYW4oJnRjLCBiZXN0X2Rp
dmlzb3JfaWR4KTsKIAkJdGNfc2NoZWRfY2xvY2sgPSB0Y19zY2hlZF9jbG9ja19yZWFkMzI7CiAJ
CXRjX2RlbGF5X3RpbWVyLnJlYWRfY3VycmVudF90aW1lciA9IHRjX2RlbGF5X3RpbWVyX3JlYWQz
MjsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItZnNsLWZ0bS5jIGIvZHJp
dmVycy9jbG9ja3NvdXJjZS90aW1lci1mc2wtZnRtLmMKaW5kZXggMTJhMmVkN2NmYWZmLi45M2Yz
MzZlYzg3NWEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItZnNsLWZ0bS5j
CisrKyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItZnNsLWZ0bS5jCkBAIC0xMTYsNyArMTE2
LDcgQEAgc3RhdGljIGludCBmdG1fc2V0X25leHRfZXZlbnQodW5zaWduZWQgbG9uZyBkZWx0YSwK
IAkgKiB0byB0aGUgTU9EIHJlZ2lzdGVyIGxhdGNoZXMgdGhlIHZhbHVlIGludG8gYSBidWZmZXIu
IFRoZSBNT0QKIAkgKiByZWdpc3RlciBpcyB1cGRhdGVkIHdpdGggdGhlIHZhbHVlIG9mIGl0cyB3
cml0ZSBidWZmZXIgd2l0aAogCSAqIHRoZSBmb2xsb3dpbmcgc2NlbmFyaW86Ci0JICogYSwgdGhl
IGNvdW50ZXIgc291cmNlIGNsb2NrIGlzIGRpYWJsZWQuCisJICogYSwgdGhlIGNvdW50ZXIgc291
cmNlIGNsb2NrIGlzIGRpc2FibGVkLgogCSAqLwogCWZ0bV9jb3VudGVyX2Rpc2FibGUocHJpdi0+
Y2xrZXZ0X2Jhc2UpOwogCmRpZmYgLS1naXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW1p
Y3JvY2hpcC1waXQ2NGIuYyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItbWljcm9jaGlwLXBp
dDY0Yi5jCmluZGV4IGFiNjIzYjI1YTQ3Yi4uY2ZhNGVjN2VmMzk2IDEwMDY0NAotLS0gYS9kcml2
ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW1pY3JvY2hpcC1waXQ2NGIuYworKysgYi9kcml2ZXJzL2Ns
b2Nrc291cmNlL3RpbWVyLW1pY3JvY2hpcC1waXQ2NGIuYwpAQCAtMjM3LDcgKzIzNyw3IEBAIHN0
YXRpYyB2b2lkIF9faW5pdCBtY2hwX3BpdDY0Yl9wcmVzX2NvbXB1dGUodTMyICpwcmVzLCB1MzIg
Y2xrX3JhdGUsCiAJCQlicmVhazsKIAl9CiAKLQkvKiBVc2UgdGhlIGJpZ2VzdCBwcmVzY2FsZXIg
aWYgd2UgZGlkbid0IG1hdGNoIG9uZS4gKi8KKwkvKiBVc2UgdGhlIGJpZ2dlc3QgcHJlc2NhbGVy
IGlmIHdlIGRpZG4ndCBtYXRjaCBvbmUuICovCiAJaWYgKCpwcmVzID09IE1DSFBfUElUNjRCX1BS
RVNfTUFYKQogCQkqcHJlcyA9IE1DSFBfUElUNjRCX1BSRVNfTUFYIC0gMTsKIH0KZGlmZiAtLWdp
dCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItbnBjbTd4eC5jIGIvZHJpdmVycy9jbG9ja3Nv
dXJjZS90aW1lci1ucGNtN3h4LmMKaW5kZXggOTc4MGZmZDgwMTBlLi5hMDA1MjBjYmI2NjAgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItbnBjbTd4eC5jCisrKyBiL2RyaXZl
cnMvY2xvY2tzb3VyY2UvdGltZXItbnBjbTd4eC5jCkBAIC0yMDgsNSArMjA4LDYgQEAgc3RhdGlj
IGludCBfX2luaXQgbnBjbTd4eF90aW1lcl9pbml0KHN0cnVjdCBkZXZpY2Vfbm9kZSAqbnApCiAJ
cmV0dXJuIDA7CiB9CiAKK1RJTUVSX09GX0RFQ0xBUkUod3BjbTQ1MCwgIm51dm90b24sd3BjbTQ1
MC10aW1lciIsIG5wY203eHhfdGltZXJfaW5pdCk7CiBUSU1FUl9PRl9ERUNMQVJFKG5wY203eHgs
ICJudXZvdG9uLG5wY203NTAtdGltZXIiLCBucGNtN3h4X3RpbWVyX2luaXQpOwogCmRpZmYgLS1n
aXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW9mLmMgYi9kcml2ZXJzL2Nsb2Nrc291cmNl
L3RpbWVyLW9mLmMKaW5kZXggNTcyZGE0NzdjNmQzLi41MjljYzZhNTFjZGIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItb2YuYworKysgYi9kcml2ZXJzL2Nsb2Nrc291cmNl
L3RpbWVyLW9mLmMKQEAgLTIxMSwxMCArMjExLDEwIEBAIGludCBfX2luaXQgdGltZXJfb2ZfaW5p
dChzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wLCBzdHJ1Y3QgdGltZXJfb2YgKnRvKQogfQogCiAvKioK
LSAqIHRpbWVyX29mX2NsZWFudXAgLSByZWxlYXNlIHRpbWVyX29mIHJlc3NvdXJjZXMKKyAqIHRp
bWVyX29mX2NsZWFudXAgLSByZWxlYXNlIHRpbWVyX29mIHJlc291cmNlcwogICogQHRvOiB0aW1l
cl9vZiBzdHJ1Y3R1cmUKICAqCi0gKiBSZWxlYXNlIHRoZSByZXNzb3VyY2VzIHRoYXQgaGFzIGJl
ZW4gdXNlZCBpbiB0aW1lcl9vZl9pbml0KCkuCisgKiBSZWxlYXNlIHRoZSByZXNvdXJjZXMgdGhh
dCBoYXMgYmVlbiB1c2VkIGluIHRpbWVyX29mX2luaXQoKS4KICAqIFRoaXMgZnVuY3Rpb24gc2hv
dWxkIGJlIGNhbGxlZCBpbiBpbml0IGVycm9yIGNhc2VzCiAgKi8KIHZvaWQgX19pbml0IHRpbWVy
X29mX2NsZWFudXAoc3RydWN0IHRpbWVyX29mICp0bykKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xv
Y2tzb3VyY2UvdGltZXItcGlzdGFjaGlvLmMgYi9kcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLXBp
c3RhY2hpby5jCmluZGV4IGEyZGQ4NWQwYzFkNy4uNmYzNzE4MWE4YzYzIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLXBpc3RhY2hpby5jCisrKyBiL2RyaXZlcnMvY2xvY2tz
b3VyY2UvdGltZXItcGlzdGFjaGlvLmMKQEAgLTcxLDcgKzcxLDcgQEAgc3RhdGljIHU2NCBub3Ry
YWNlCiBwaXN0YWNoaW9fY2xvY2tzb3VyY2VfcmVhZF9jeWNsZXMoc3RydWN0IGNsb2Nrc291cmNl
ICpjcykKIHsKIAlzdHJ1Y3QgcGlzdGFjaGlvX2Nsb2Nrc291cmNlICpwY3MgPSB0b19waXN0YWNo
aW9fY2xvY2tzb3VyY2UoY3MpOwotCXUzMiBjb3VudGVyLCBvdmVyZmx3OworCXUzMiBjb3VudGVy
LCBvdmVyZmxvdzsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCiAJLyoKQEAgLTgwLDcgKzgwLDcg
QEAgcGlzdGFjaGlvX2Nsb2Nrc291cmNlX3JlYWRfY3ljbGVzKHN0cnVjdCBjbG9ja3NvdXJjZSAq
Y3MpCiAJICovCiAKIAlyYXdfc3Bpbl9sb2NrX2lycXNhdmUoJnBjcy0+bG9jaywgZmxhZ3MpOwot
CW92ZXJmbHcgPSBncHRfcmVhZGwocGNzLT5iYXNlLCBUSU1FUl9DVVJSRU5UX09WRVJGTE9XX1ZB
TFVFLCAwKTsKKwlvdmVyZmxvdyA9IGdwdF9yZWFkbChwY3MtPmJhc2UsIFRJTUVSX0NVUlJFTlRf
T1ZFUkZMT1dfVkFMVUUsIDApOwogCWNvdW50ZXIgPSBncHRfcmVhZGwocGNzLT5iYXNlLCBUSU1F
Ul9DVVJSRU5UX1ZBTFVFLCAwKTsKIAlyYXdfc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmcGNzLT5s
b2NrLCBmbGFncyk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItdGkt
ZG0tc3lzdGltZXIuYyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItdGktZG0tc3lzdGltZXIu
YwppbmRleCAzM2IzZThhYTJjYzUuLmI2Zjk3OTYwZDhlZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9j
bG9ja3NvdXJjZS90aW1lci10aS1kbS1zeXN0aW1lci5jCisrKyBiL2RyaXZlcnMvY2xvY2tzb3Vy
Y2UvdGltZXItdGktZG0tc3lzdGltZXIuYwpAQCAtMiw2ICsyLDcgQEAKICNpbmNsdWRlIDxsaW51
eC9jbGsuaD4KICNpbmNsdWRlIDxsaW51eC9jbG9ja3NvdXJjZS5oPgogI2luY2x1ZGUgPGxpbnV4
L2Nsb2NrY2hpcHMuaD4KKyNpbmNsdWRlIDxsaW51eC9jcHVob3RwbHVnLmg+CiAjaW5jbHVkZSA8
bGludXgvaW50ZXJydXB0Lmg+CiAjaW5jbHVkZSA8bGludXgvaW8uaD4KICNpbmNsdWRlIDxsaW51
eC9pb3BvbGwuaD4KQEAgLTQ0OSwxMyArNDUwLDEzIEBAIHN0YXRpYyBpbnQgZG10aW1lcl9zZXRf
bmV4dF9ldmVudCh1bnNpZ25lZCBsb25nIGN5Y2xlcywKIAlzdHJ1Y3QgZG10aW1lcl9zeXN0aW1l
ciAqdCA9ICZjbGtldnQtPnQ7CiAJdm9pZCBfX2lvbWVtICpwZW5kID0gdC0+YmFzZSArIHQtPnBl
bmQ7CiAKLQl3cml0ZWxfcmVsYXhlZCgweGZmZmZmZmZmIC0gY3ljbGVzLCB0LT5iYXNlICsgdC0+
Y291bnRlcik7CiAJd2hpbGUgKHJlYWRsX3JlbGF4ZWQocGVuZCkgJiBXUF9UQ1JSKQogCQljcHVf
cmVsYXgoKTsKKwl3cml0ZWxfcmVsYXhlZCgweGZmZmZmZmZmIC0gY3ljbGVzLCB0LT5iYXNlICsg
dC0+Y291bnRlcik7CiAKLQl3cml0ZWxfcmVsYXhlZChPTUFQX1RJTUVSX0NUUkxfU1QsIHQtPmJh
c2UgKyB0LT5jdHJsKTsKIAl3aGlsZSAocmVhZGxfcmVsYXhlZChwZW5kKSAmIFdQX1RDTFIpCiAJ
CWNwdV9yZWxheCgpOworCXdyaXRlbF9yZWxheGVkKE9NQVBfVElNRVJfQ1RSTF9TVCwgdC0+YmFz
ZSArIHQtPmN0cmwpOwogCiAJcmV0dXJuIDA7CiB9CkBAIC00OTAsMTggKzQ5MSwxOCBAQCBzdGF0
aWMgaW50IGRtdGltZXJfc2V0X3BlcmlvZGljKHN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmV2
dCkKIAlkbXRpbWVyX2Nsb2NrZXZlbnRfc2h1dGRvd24oZXZ0KTsKIAogCS8qIExvb2tzIGxpa2Ug
d2UgbmVlZCB0byBmaXJzdCBzZXQgdGhlIGxvYWQgdmFsdWUgc2VwYXJhdGVseSAqLwotCXdyaXRl
bF9yZWxheGVkKGNsa2V2dC0+cGVyaW9kLCB0LT5iYXNlICsgdC0+bG9hZCk7CiAJd2hpbGUgKHJl
YWRsX3JlbGF4ZWQocGVuZCkgJiBXUF9UTERSKQogCQljcHVfcmVsYXgoKTsKKwl3cml0ZWxfcmVs
YXhlZChjbGtldnQtPnBlcmlvZCwgdC0+YmFzZSArIHQtPmxvYWQpOwogCi0Jd3JpdGVsX3JlbGF4
ZWQoY2xrZXZ0LT5wZXJpb2QsIHQtPmJhc2UgKyB0LT5jb3VudGVyKTsKIAl3aGlsZSAocmVhZGxf
cmVsYXhlZChwZW5kKSAmIFdQX1RDUlIpCiAJCWNwdV9yZWxheCgpOworCXdyaXRlbF9yZWxheGVk
KGNsa2V2dC0+cGVyaW9kLCB0LT5iYXNlICsgdC0+Y291bnRlcik7CiAKLQl3cml0ZWxfcmVsYXhl
ZChPTUFQX1RJTUVSX0NUUkxfQVIgfCBPTUFQX1RJTUVSX0NUUkxfU1QsCi0JCSAgICAgICB0LT5i
YXNlICsgdC0+Y3RybCk7CiAJd2hpbGUgKHJlYWRsX3JlbGF4ZWQocGVuZCkgJiBXUF9UQ0xSKQog
CQljcHVfcmVsYXgoKTsKKwl3cml0ZWxfcmVsYXhlZChPTUFQX1RJTUVSX0NUUkxfQVIgfCBPTUFQ
X1RJTUVSX0NUUkxfU1QsCisJCSAgICAgICB0LT5iYXNlICsgdC0+Y3RybCk7CiAKIAlyZXR1cm4g
MDsKIH0KQEAgLTUzMCwxNyArNTMxLDE3IEBAIHN0YXRpYyB2b2lkIG9tYXBfY2xvY2tldmVudF91
bmlkbGUoc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqZXZ0KQogCXdyaXRlbF9yZWxheGVkKE9N
QVBfVElNRVJfSU5UX09WRVJGTE9XLCB0LT5iYXNlICsgdC0+d2FrZXVwKTsKIH0KIAotc3RhdGlj
IGludCBfX2luaXQgZG10aW1lcl9jbG9ja2V2ZW50X2luaXQoc3RydWN0IGRldmljZV9ub2RlICpu
cCkKK3N0YXRpYyBpbnQgX19pbml0IGRtdGltZXJfY2xrZXZ0X2luaXRfY29tbW9uKHN0cnVjdCBk
bXRpbWVyX2Nsb2NrZXZlbnQgKmNsa2V2dCwKKwkJCQkJICAgICBzdHJ1Y3QgZGV2aWNlX25vZGUg
Km5wLAorCQkJCQkgICAgIHVuc2lnbmVkIGludCBmZWF0dXJlcywKKwkJCQkJICAgICBjb25zdCBz
dHJ1Y3QgY3B1bWFzayAqY3B1bWFzaywKKwkJCQkJICAgICBjb25zdCBjaGFyICpuYW1lLAorCQkJ
CQkgICAgIGludCByYXRpbmcpCiB7Ci0Jc3RydWN0IGRtdGltZXJfY2xvY2tldmVudCAqY2xrZXZ0
OwogCXN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmRldjsKIAlzdHJ1Y3QgZG10aW1lcl9zeXN0
aW1lciAqdDsKIAlpbnQgZXJyb3I7CiAKLQljbGtldnQgPSBremFsbG9jKHNpemVvZigqY2xrZXZ0
KSwgR0ZQX0tFUk5FTCk7Ci0JaWYgKCFjbGtldnQpCi0JCXJldHVybiAtRU5PTUVNOwotCiAJdCA9
ICZjbGtldnQtPnQ7CiAJZGV2ID0gJmNsa2V2dC0+ZGV2OwogCkBAIC01NDgsMjQgKzU0OSwyMyBA
QCBzdGF0aWMgaW50IF9faW5pdCBkbXRpbWVyX2Nsb2NrZXZlbnRfaW5pdChzdHJ1Y3QgZGV2aWNl
X25vZGUgKm5wKQogCSAqIFdlIG1vc3RseSB1c2UgY3B1aWRsZV9jb3VwbGVkIHdpdGggQVJNIGxv
Y2FsIHRpbWVycyBmb3IgcnVudGltZSwKIAkgKiBzbyB0aGVyZSdzIHByb2JhYmx5IG5vIHVzZSBm
b3IgQ0xPQ0tfRVZUX0ZFQVRfRFlOSVJRIGhlcmUuCiAJICovCi0JZGV2LT5mZWF0dXJlcyA9IENM
T0NLX0VWVF9GRUFUX1BFUklPRElDIHwgQ0xPQ0tfRVZUX0ZFQVRfT05FU0hPVDsKLQlkZXYtPnJh
dGluZyA9IDMwMDsKKwlkZXYtPmZlYXR1cmVzID0gZmVhdHVyZXM7CisJZGV2LT5yYXRpbmcgPSBy
YXRpbmc7CiAJZGV2LT5zZXRfbmV4dF9ldmVudCA9IGRtdGltZXJfc2V0X25leHRfZXZlbnQ7CiAJ
ZGV2LT5zZXRfc3RhdGVfc2h1dGRvd24gPSBkbXRpbWVyX2Nsb2NrZXZlbnRfc2h1dGRvd247CiAJ
ZGV2LT5zZXRfc3RhdGVfcGVyaW9kaWMgPSBkbXRpbWVyX3NldF9wZXJpb2RpYzsKIAlkZXYtPnNl
dF9zdGF0ZV9vbmVzaG90ID0gZG10aW1lcl9jbG9ja2V2ZW50X3NodXRkb3duOworCWRldi0+c2V0
X3N0YXRlX29uZXNob3Rfc3RvcHBlZCA9IGRtdGltZXJfY2xvY2tldmVudF9zaHV0ZG93bjsKIAlk
ZXYtPnRpY2tfcmVzdW1lID0gZG10aW1lcl9jbG9ja2V2ZW50X3NodXRkb3duOwotCWRldi0+Y3B1
bWFzayA9IGNwdV9wb3NzaWJsZV9tYXNrOworCWRldi0+Y3B1bWFzayA9IGNwdW1hc2s7CiAKIAlk
ZXYtPmlycSA9IGlycV9vZl9wYXJzZV9hbmRfbWFwKG5wLCAwKTsKLQlpZiAoIWRldi0+aXJxKSB7
Ci0JCWVycm9yID0gLUVOWElPOwotCQlnb3RvIGVycl9vdXRfZnJlZTsKLQl9CisJaWYgKCFkZXYt
PmlycSkKKwkJcmV0dXJuIC1FTlhJTzsKIAogCWVycm9yID0gZG10aW1lcl9zeXN0aW1lcl9zZXR1
cChucCwgJmNsa2V2dC0+dCk7CiAJaWYgKGVycm9yKQotCQlnb3RvIGVycl9vdXRfZnJlZTsKKwkJ
cmV0dXJuIGVycm9yOwogCiAJY2xrZXZ0LT5wZXJpb2QgPSAweGZmZmZmZmZmIC0gRElWX1JPVU5E
X0NMT1NFU1QodC0+cmF0ZSwgSFopOwogCkBAIC01NzcsMzggKzU3NywxMzIgQEAgc3RhdGljIGlu
dCBfX2luaXQgZG10aW1lcl9jbG9ja2V2ZW50X2luaXQoc3RydWN0IGRldmljZV9ub2RlICpucCkK
IAl3cml0ZWxfcmVsYXhlZChPTUFQX1RJTUVSX0NUUkxfUE9TVEVELCB0LT5iYXNlICsgdC0+aWZj
dHJsKTsKIAogCWVycm9yID0gcmVxdWVzdF9pcnEoZGV2LT5pcnEsIGRtdGltZXJfY2xvY2tldmVu
dF9pbnRlcnJ1cHQsCi0JCQkgICAgSVJRRl9USU1FUiwgImNsb2NrZXZlbnQiLCBjbGtldnQpOwor
CQkJICAgIElSUUZfVElNRVIsIG5hbWUsIGNsa2V2dCk7CiAJaWYgKGVycm9yKQogCQlnb3RvIGVy
cl9vdXRfdW5tYXA7CiAKIAl3cml0ZWxfcmVsYXhlZChPTUFQX1RJTUVSX0lOVF9PVkVSRkxPVywg
dC0+YmFzZSArIHQtPmlycV9lbmEpOwogCXdyaXRlbF9yZWxheGVkKE9NQVBfVElNRVJfSU5UX09W
RVJGTE9XLCB0LT5iYXNlICsgdC0+d2FrZXVwKTsKIAotCXByX2luZm8oIlRJIGdwdGltZXIgY2xv
Y2tldmVudDogJXMlbHUgSHogYXQgJXBPRlxuIiwKLQkJb2ZfZmluZF9wcm9wZXJ0eShucCwgInRp
LHRpbWVyLWFsd29uIiwgTlVMTCkgPworCXByX2luZm8oIlRJIGdwdGltZXIgJXM6ICVzJWx1IEh6
IGF0ICVwT0ZcbiIsCisJCW5hbWUsIG9mX2ZpbmRfcHJvcGVydHkobnAsICJ0aSx0aW1lci1hbHdv
biIsIE5VTEwpID8KIAkJImFsd2F5cy1vbiAiIDogIiIsIHQtPnJhdGUsIG5wLT5wYXJlbnQpOwog
Ci0JY2xvY2tldmVudHNfY29uZmlnX2FuZF9yZWdpc3RlcihkZXYsIHQtPnJhdGUsCi0JCQkJCTMs
IC8qIFRpbWVyIGludGVybmFsIHJlc3luY2ggbGF0ZW5jeSAqLworCXJldHVybiAwOworCitlcnJf
b3V0X3VubWFwOgorCWlvdW5tYXAodC0+YmFzZSk7CisKKwlyZXR1cm4gZXJyb3I7Cit9CisKK3N0
YXRpYyBpbnQgX19pbml0IGRtdGltZXJfY2xvY2tldmVudF9pbml0KHN0cnVjdCBkZXZpY2Vfbm9k
ZSAqbnApCit7CisJc3RydWN0IGRtdGltZXJfY2xvY2tldmVudCAqY2xrZXZ0OworCWludCBlcnJv
cjsKKworCWNsa2V2dCA9IGt6YWxsb2Moc2l6ZW9mKCpjbGtldnQpLCBHRlBfS0VSTkVMKTsKKwlp
ZiAoIWNsa2V2dCkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwllcnJvciA9IGRtdGltZXJfY2xrZXZ0
X2luaXRfY29tbW9uKGNsa2V2dCwgbnAsCisJCQkJCSAgIENMT0NLX0VWVF9GRUFUX1BFUklPRElD
IHwKKwkJCQkJICAgQ0xPQ0tfRVZUX0ZFQVRfT05FU0hPVCwKKwkJCQkJICAgY3B1X3Bvc3NpYmxl
X21hc2ssICJjbG9ja2V2ZW50IiwKKwkJCQkJICAgMzAwKTsKKwlpZiAoZXJyb3IpCisJCWdvdG8g
ZXJyX291dF9mcmVlOworCisJY2xvY2tldmVudHNfY29uZmlnX2FuZF9yZWdpc3RlcigmY2xrZXZ0
LT5kZXYsIGNsa2V2dC0+dC5yYXRlLAorCQkJCQkzLCAvKiBUaW1lciBpbnRlcm5hbCByZXN5bmMg
bGF0ZW5jeSAqLwogCQkJCQkweGZmZmZmZmZmKTsKIAogCWlmIChvZl9tYWNoaW5lX2lzX2NvbXBh
dGlibGUoInRpLGFtMzN4eCIpIHx8CiAJICAgIG9mX21hY2hpbmVfaXNfY29tcGF0aWJsZSgidGks
YW00MyIpKSB7Ci0JCWRldi0+c3VzcGVuZCA9IG9tYXBfY2xvY2tldmVudF9pZGxlOwotCQlkZXYt
PnJlc3VtZSA9IG9tYXBfY2xvY2tldmVudF91bmlkbGU7CisJCWNsa2V2dC0+ZGV2LnN1c3BlbmQg
PSBvbWFwX2Nsb2NrZXZlbnRfaWRsZTsKKwkJY2xrZXZ0LT5kZXYucmVzdW1lID0gb21hcF9jbG9j
a2V2ZW50X3VuaWRsZTsKIAl9CiAKIAlyZXR1cm4gMDsKIAotZXJyX291dF91bm1hcDoKLQlpb3Vu
bWFwKHQtPmJhc2UpOwotCiBlcnJfb3V0X2ZyZWU6CiAJa2ZyZWUoY2xrZXZ0KTsKIAogCXJldHVy
biBlcnJvcjsKIH0KIAorLyogRG10aW1lciBhcyBwZXJjcHUgdGltZXIuIFNlZSBkcmE3IEFSTSBh
cmNoaXRlY3RlZCB0aW1lciB3cmFwIGVycmF0dW0gaTk0MCAqLworc3RhdGljIERFRklORV9QRVJf
Q1BVKHN0cnVjdCBkbXRpbWVyX2Nsb2NrZXZlbnQsIGRtdGltZXJfcGVyY3B1X3RpbWVyKTsKKwor
c3RhdGljIGludCBfX2luaXQgZG10aW1lcl9wZXJjcHVfdGltZXJfaW5pdChzdHJ1Y3QgZGV2aWNl
X25vZGUgKm5wLCBpbnQgY3B1KQoreworCXN0cnVjdCBkbXRpbWVyX2Nsb2NrZXZlbnQgKmNsa2V2
dDsKKwlpbnQgZXJyb3I7CisKKwlpZiAoIWNwdV9wb3NzaWJsZShjcHUpKQorCQlyZXR1cm4gLUVJ
TlZBTDsKKworCWlmICghb2ZfcHJvcGVydHlfcmVhZF9ib29sKG5wLT5wYXJlbnQsICJ0aSxuby1y
ZXNldC1vbi1pbml0IikgfHwKKwkgICAgIW9mX3Byb3BlcnR5X3JlYWRfYm9vbChucC0+cGFyZW50
LCAidGksbm8taWRsZSIpKQorCQlwcl93YXJuKCJJbmNvbXBsZXRlIGR0YiBmb3IgcGVyY3B1IGRt
dGltZXIgJXBPRlxuIiwgbnAtPnBhcmVudCk7CisKKwljbGtldnQgPSBwZXJfY3B1X3B0cigmZG10
aW1lcl9wZXJjcHVfdGltZXIsIGNwdSk7CisKKwllcnJvciA9IGRtdGltZXJfY2xrZXZ0X2luaXRf
Y29tbW9uKGNsa2V2dCwgbnAsIENMT0NLX0VWVF9GRUFUX09ORVNIT1QsCisJCQkJCSAgIGNwdW1h
c2tfb2YoY3B1KSwgInBlcmNwdS1kbXRpbWVyIiwKKwkJCQkJICAgNTAwKTsKKwlpZiAoZXJyb3Ip
CisJCXJldHVybiBlcnJvcjsKKworCXJldHVybiAwOworfQorCisvKiBTZWUgVFJNIGZvciB0aW1l
ciBpbnRlcm5hbCByZXN5bmNoIGxhdGVuY3kgKi8KK3N0YXRpYyBpbnQgb21hcF9kbXRpbWVyX3N0
YXJ0aW5nX2NwdSh1bnNpZ25lZCBpbnQgY3B1KQoreworCXN0cnVjdCBkbXRpbWVyX2Nsb2NrZXZl
bnQgKmNsa2V2dCA9IHBlcl9jcHVfcHRyKCZkbXRpbWVyX3BlcmNwdV90aW1lciwgY3B1KTsKKwlz
dHJ1Y3QgY2xvY2tfZXZlbnRfZGV2aWNlICpkZXYgPSAmY2xrZXZ0LT5kZXY7CisJc3RydWN0IGRt
dGltZXJfc3lzdGltZXIgKnQgPSAmY2xrZXZ0LT50OworCisJY2xvY2tldmVudHNfY29uZmlnX2Fu
ZF9yZWdpc3RlcihkZXYsIHQtPnJhdGUsIDMsIFVMT05HX01BWCk7CisJaXJxX2ZvcmNlX2FmZmlu
aXR5KGRldi0+aXJxLCBjcHVtYXNrX29mKGNwdSkpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRp
YyBpbnQgX19pbml0IGRtdGltZXJfcGVyY3B1X3RpbWVyX3N0YXJ0dXAodm9pZCkKK3sKKwlzdHJ1
Y3QgZG10aW1lcl9jbG9ja2V2ZW50ICpjbGtldnQgPSBwZXJfY3B1X3B0cigmZG10aW1lcl9wZXJj
cHVfdGltZXIsIDApOworCXN0cnVjdCBkbXRpbWVyX3N5c3RpbWVyICp0ID0gJmNsa2V2dC0+dDsK
KworCWlmICh0LT5zeXNjKSB7CisJCWNwdWhwX3NldHVwX3N0YXRlKENQVUhQX0FQX1RJX0dQX1RJ
TUVSX1NUQVJUSU5HLAorCQkJCSAgImNsb2NrZXZlbnRzL29tYXAvZ3B0aW1lcjpzdGFydGluZyIs
CisJCQkJICBvbWFwX2RtdGltZXJfc3RhcnRpbmdfY3B1LCBOVUxMKTsKKwl9CisKKwlyZXR1cm4g
MDsKK30KK3N1YnN5c19pbml0Y2FsbChkbXRpbWVyX3BlcmNwdV90aW1lcl9zdGFydHVwKTsKKwor
c3RhdGljIGludCBfX2luaXQgZG10aW1lcl9wZXJjcHVfcXVpcmtfaW5pdChzdHJ1Y3QgZGV2aWNl
X25vZGUgKm5wLCB1MzIgcGEpCit7CisJc3RydWN0IGRldmljZV9ub2RlICphcm1fdGltZXI7CisK
Kwlhcm1fdGltZXIgPSBvZl9maW5kX2NvbXBhdGlibGVfbm9kZShOVUxMLCBOVUxMLCAiYXJtLGFy
bXY3LXRpbWVyIik7CisJaWYgKG9mX2RldmljZV9pc19hdmFpbGFibGUoYXJtX3RpbWVyKSkgewor
CQlwcl93YXJuX29uY2UoIkFSTSBhcmNoaXRlY3RlZCB0aW1lciB3cmFwIGlzc3VlIGk5NDAgZGV0
ZWN0ZWRcbiIpOworCQlyZXR1cm4gMDsKKwl9CisKKwlpZiAocGEgPT0gMHg0ODAzNDAwMCkJCS8q
IGRyYTcgZG10aW1lcjMgKi8KKwkJcmV0dXJuIGRtdGltZXJfcGVyY3B1X3RpbWVyX2luaXQobnAs
IDApOworCWVsc2UgaWYgKHBhID09IDB4NDgwMzYwMDApCS8qIGRyYTcgZG10aW1lcjQgKi8KKwkJ
cmV0dXJuIGRtdGltZXJfcGVyY3B1X3RpbWVyX2luaXQobnAsIDEpOworCisJcmV0dXJuIDA7Cit9
CisKIC8qIENsb2Nrc291cmNlICovCiBzdGF0aWMgc3RydWN0IGRtdGltZXJfY2xvY2tzb3VyY2Ug
KgogdG9fZG10aW1lcl9jbG9ja3NvdXJjZShzdHJ1Y3QgY2xvY2tzb3VyY2UgKmNzKQpAQCAtNzQy
LDYgKzgzNiw5IEBAIHN0YXRpYyBpbnQgX19pbml0IGRtdGltZXJfc3lzdGltZXJfaW5pdChzdHJ1
Y3QgZGV2aWNlX25vZGUgKm5wKQogCWlmIChjbG9ja2V2ZW50ID09IHBhKQogCQlyZXR1cm4gZG10
aW1lcl9jbG9ja2V2ZW50X2luaXQobnApOwogCisJaWYgKG9mX21hY2hpbmVfaXNfY29tcGF0aWJs
ZSgidGksZHJhNyIpKQorCQlyZXR1cm4gZG10aW1lcl9wZXJjcHVfcXVpcmtfaW5pdChucCwgcGEp
OworCiAJcmV0dXJuIDA7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGlt
ZXItdmYtcGl0LmMgYi9kcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLXZmLXBpdC5jCmluZGV4IDFh
ODZhNGU3ZTM0NC4uOTExYzkyMTQ2ZWNhIDEwMDY0NAotLS0gYS9kcml2ZXJzL2Nsb2Nrc291cmNl
L3RpbWVyLXZmLXBpdC5jCisrKyBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItdmYtcGl0LmMK
QEAgLTEzNiw3ICsxMzYsNyBAQCBzdGF0aWMgaW50IF9faW5pdCBwaXRfY2xvY2tldmVudF9pbml0
KHVuc2lnbmVkIGxvbmcgcmF0ZSwgaW50IGlycSkKIAkvKgogCSAqIFRoZSB2YWx1ZSBmb3IgdGhl
IExEVkFMIHJlZ2lzdGVyIHRyaWdnZXIgaXMgY2FsY3VsYXRlZCBhczoKIAkgKiBMRFZBTCB0cmln
Z2VyID0gKHBlcmlvZCAvIGNsb2NrIHBlcmlvZCkgLSAxCi0JICogVGhlIHBpdCBpcyBhIDMyLWJp
dCBkb3duIGNvdW50IHRpbWVyLCB3aGVuIHRoZSBjb250ZXIgdmFsdWUKKwkgKiBUaGUgcGl0IGlz
IGEgMzItYml0IGRvd24gY291bnQgdGltZXIsIHdoZW4gdGhlIGNvdW50ZXIgdmFsdWUKIAkgKiBy
ZWFjaGVzIDAsIGl0IHdpbGwgZ2VuZXJhdGUgYW4gaW50ZXJydXB0LCB0aHVzIHRoZSBtaW5pbWFs
CiAJICogTERWQUwgdHJpZ2dlciB2YWx1ZSBpcyAxLiBBbmQgdGhlbiB0aGUgbWluX2RlbHRhIGlz
CiAJICogbWluaW1hbCBMRFZBTCB0cmlnZ2VyIHZhbHVlICsgMSwgYW5kIHRoZSBtYXhfZGVsdGEg
aXMgZnVsbCAzMi1iaXQuCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2Nsb2Nrc291cmNlLmgg
Yi9pbmNsdWRlL2xpbnV4L2Nsb2Nrc291cmNlLmgKaW5kZXggODZkMTQzZGI2NTIzLi5hMjQ3YjA4
OWNhNzggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvY2xvY2tzb3VyY2UuaAorKysgYi9pbmNs
dWRlL2xpbnV4L2Nsb2Nrc291cmNlLmgKQEAgLTcwLDcgKzcwLDcgQEAgc3RydWN0IG1vZHVsZTsK
ICAqIEBtYXJrX3Vuc3RhYmxlOglPcHRpb25hbCBmdW5jdGlvbiB0byBpbmZvcm0gdGhlIGNsb2Nr
c291cmNlIGRyaXZlciB0aGF0CiAgKgkJCXRoZSB3YXRjaGRvZyBtYXJrZWQgdGhlIGNsb2Nrc291
cmNlIHVuc3RhYmxlCiAgKiBAdGlja19zdGFibGU6ICAgICAgICBPcHRpb25hbCBmdW5jdGlvbiBj
YWxsZWQgcGVyaW9kaWNhbGx5IGZyb20gdGhlIHdhdGNoZG9nCi0gKgkJCWNvZGUgdG8gcHJvdmlk
ZSBzdGFibGUgc3luY3Job25pemF0aW9uIHBvaW50cworICoJCQljb2RlIHRvIHByb3ZpZGUgc3Rh
YmxlIHN5bmNocm9uaXphdGlvbiBwb2ludHMKICAqIEB3ZF9saXN0OgkJTGlzdCBoZWFkIHRvIGVu
cXVldWUgaW50byB0aGUgd2F0Y2hkb2cgbGlzdCAoaW50ZXJuYWwpCiAgKiBAY3NfbGFzdDoJCUxh
c3QgY2xvY2tzb3VyY2UgdmFsdWUgZm9yIGNsb2Nrc291cmNlIHdhdGNoZG9nCiAgKiBAd2RfbGFz
dDoJCUxhc3Qgd2F0Y2hkb2cgdmFsdWUgY29ycmVzcG9uZGluZyB0byBAY3NfbGFzdApkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9saW51eC9jcHVob3RwbHVnLmggYi9pbmNsdWRlL2xpbnV4L2NwdWhvdHBs
dWcuaAppbmRleCBmMTRhZGI4ODIzMzguLmNjN2MzZmRhMmFhNiAxMDA2NDQKLS0tIGEvaW5jbHVk
ZS9saW51eC9jcHVob3RwbHVnLmgKKysrIGIvaW5jbHVkZS9saW51eC9jcHVob3RwbHVnLmgKQEAg
LTEzNSw2ICsxMzUsNyBAQCBlbnVtIGNwdWhwX3N0YXRlIHsKIAlDUFVIUF9BUF9SSVNDVl9USU1F
Ul9TVEFSVElORywKIAlDUFVIUF9BUF9DTElOVF9USU1FUl9TVEFSVElORywKIAlDUFVIUF9BUF9D
U0tZX1RJTUVSX1NUQVJUSU5HLAorCUNQVUhQX0FQX1RJX0dQX1RJTUVSX1NUQVJUSU5HLAogCUNQ
VUhQX0FQX0hZUEVSVl9USU1FUl9TVEFSVElORywKIAlDUFVIUF9BUF9LVk1fU1RBUlRJTkcsCiAJ
Q1BVSFBfQVBfS1ZNX0FSTV9WR0lDX0lOSVRfU1RBUlRJTkcsCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L3RpbWVjb3VudGVyLmggYi9pbmNsdWRlL2xpbnV4L3RpbWVjb3VudGVyLmgKaW5kZXgg
NzU0Yjc0YTIxNjdmLi5jNjU0MGNlZWExNDMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvdGlt
ZWNvdW50ZXIuaAorKysgYi9pbmNsdWRlL2xpbnV4L3RpbWVjb3VudGVyLmgKQEAgLTEyNCw3ICsx
MjQsNyBAQCBleHRlcm4gdTY0IHRpbWVjb3VudGVyX3JlYWQoc3RydWN0IHRpbWVjb3VudGVyICp0
Yyk7CiAgKiBUaGlzIGFsbG93cyBjb252ZXJzaW9uIG9mIGN5Y2xlIGNvdW50ZXIgdmFsdWVzIHdo
aWNoIHdlcmUgZ2VuZXJhdGVkCiAgKiBpbiB0aGUgcGFzdC4KICAqLwotZXh0ZXJuIHU2NCB0aW1l
Y291bnRlcl9jeWMydGltZShzdHJ1Y3QgdGltZWNvdW50ZXIgKnRjLAorZXh0ZXJuIHU2NCB0aW1l
Y291bnRlcl9jeWMydGltZShjb25zdCBzdHJ1Y3QgdGltZWNvdW50ZXIgKnRjLAogCQkJCXU2NCBj
eWNsZV90c3RhbXApOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvdGltZXgu
aCBiL2luY2x1ZGUvbGludXgvdGltZXguaAppbmRleCA5YzJlNTRmYWY5YjcuLjA1OWIxOGViMWYx
ZiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC90aW1leC5oCisrKyBiL2luY2x1ZGUvbGludXgv
dGltZXguaApAQCAtMTMzLDcgKzEzMyw3IEBACiAKIC8qCiAgKiBrZXJuZWwgdmFyaWFibGVzCi0g
KiBOb3RlOiBtYXhpbXVtIGVycm9yID0gTlRQIHN5bmNoIGRpc3RhbmNlID0gZGlzcGVyc2lvbiAr
IGRlbGF5IC8gMjsKKyAqIE5vdGU6IG1heGltdW0gZXJyb3IgPSBOVFAgc3luYyBkaXN0YW5jZSA9
IGRpc3BlcnNpb24gKyBkZWxheSAvIDI7CiAgKiBlc3RpbWF0ZWQgZXJyb3IgPSBOVFAgZGlzcGVy
c2lvbi4KICAqLwogZXh0ZXJuIHVuc2lnbmVkIGxvbmcgdGlja191c2VjOwkJLyogVVNFUl9IWiBw
ZXJpb2QgKHVzZWMpICovCmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS9hbGFybXRpbWVyLmMgYi9r
ZXJuZWwvdGltZS9hbGFybXRpbWVyLmMKaW5kZXggOThkN2ExNWU4Y2Y2Li5lOWFmOGZhZTBiZmIg
MTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL2FsYXJtdGltZXIuYworKysgYi9rZXJuZWwvdGltZS9h
bGFybXRpbWVyLmMKQEAgLTIsMTMgKzIsMTMgQEAKIC8qCiAgKiBBbGFybXRpbWVyIGludGVyZmFj
ZQogICoKLSAqIFRoaXMgaW50ZXJmYWNlIHByb3ZpZGVzIGEgdGltZXIgd2hpY2ggaXMgc2ltaWxh
cnRvIGhydGltZXJzLAorICogVGhpcyBpbnRlcmZhY2UgcHJvdmlkZXMgYSB0aW1lciB3aGljaCBp
cyBzaW1pbGFyIHRvIGhydGltZXJzLAogICogYnV0IHRyaWdnZXJzIGEgUlRDIGFsYXJtIGlmIHRo
ZSBib3ggaXMgc3VzcGVuZC4KICAqCiAgKiBUaGlzIGludGVyZmFjZSBpcyBpbmZsdWVuY2VkIGJ5
IHRoZSBBbmRyb2lkIFJUQyBBbGFybSB0aW1lcgogICogaW50ZXJmYWNlLgogICoKLSAqIENvcHly
aWdodCAoQykgMjAxMCBJQk0gQ29ycGVyYXRpb24KKyAqIENvcHlyaWdodCAoQykgMjAxMCBJQk0g
Q29ycG9yYXRpb24KICAqCiAgKiBBdXRob3I6IEpvaG4gU3R1bHR6IDxqb2huLnN0dWx0ekBsaW5h
cm8ub3JnPgogICovCkBAIC04MTEsNyArODExLDcgQEAgc3RhdGljIGxvbmcgX19zY2hlZCBhbGFy
bV90aW1lcl9uc2xlZXBfcmVzdGFydChzdHJ1Y3QgcmVzdGFydF9ibG9jayAqcmVzdGFydCkKIC8q
KgogICogYWxhcm1fdGltZXJfbnNsZWVwIC0gYWxhcm10aW1lciBuYW5vc2xlZXAKICAqIEB3aGlj
aF9jbG9jazogY2xvY2tpZAotICogQGZsYWdzOiBkZXRlcm1pbnMgYWJzdGltZSBvciByZWxhdGl2
ZQorICogQGZsYWdzOiBkZXRlcm1pbmVzIGFic3RpbWUgb3IgcmVsYXRpdmUKICAqIEB0c3JlcTog
cmVxdWVzdGVkIHNsZWVwIHRpbWUgKGFicyBvciByZWwpCiAgKgogICogSGFuZGxlcyBjbG9ja19u
YW5vc2xlZXAgY2FsbHMgYWdhaW5zdCBfQUxBUk0gY2xvY2tpZHMKZGlmZiAtLWdpdCBhL2tlcm5l
bC90aW1lL2Nsb2Nrc291cmNlLmMgYi9rZXJuZWwvdGltZS9jbG9ja3NvdXJjZS5jCmluZGV4IGNj
ZTQ4NGEyY2M3Yy4uMWQxYTYxMzcxYjVhIDEwMDY0NAotLS0gYS9rZXJuZWwvdGltZS9jbG9ja3Nv
dXJjZS5jCisrKyBiL2tlcm5lbC90aW1lL2Nsb2Nrc291cmNlLmMKQEAgLTM4LDcgKzM4LDcgQEAK
ICAqIGNhbGN1bGF0ZWQgbXVsdCBhbmQgc2hpZnQgZmFjdG9ycy4gVGhpcyBndWFyYW50ZWVzIHRo
YXQgbm8gNjRiaXQKICAqIG92ZXJmbG93IGhhcHBlbnMgd2hlbiB0aGUgaW5wdXQgdmFsdWUgb2Yg
dGhlIGNvbnZlcnNpb24gaXMKICAqIG11bHRpcGxpZWQgd2l0aCB0aGUgY2FsY3VsYXRlZCBtdWx0
IGZhY3Rvci4gTGFyZ2VyIHJhbmdlcyBtYXkKLSAqIHJlZHVjZSB0aGUgY29udmVyc2lvbiBhY2N1
cmFjeSBieSBjaG9zaW5nIHNtYWxsZXIgbXVsdCBhbmQgc2hpZnQKKyAqIHJlZHVjZSB0aGUgY29u
dmVyc2lvbiBhY2N1cmFjeSBieSBjaG9vc2luZyBzbWFsbGVyIG11bHQgYW5kIHNoaWZ0CiAgKiBm
YWN0b3JzLgogICovCiB2b2lkCkBAIC01MTgsNyArNTE4LDcgQEAgc3RhdGljIHZvaWQgY2xvY2tz
b3VyY2Vfc3VzcGVuZF9zZWxlY3QoYm9vbCBmYWxsYmFjaykKICAqIHRoZSBzdXNwZW5kIHRpbWUg
d2hlbiByZXN1bWluZyBzeXN0ZW0uCiAgKgogICogVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgbGF0
ZSBpbiB0aGUgc3VzcGVuZCBwcm9jZXNzIGZyb20gdGltZWtlZXBpbmdfc3VzcGVuZCgpLAotICog
dGhhdCBtZWFucyBwcm9jZXNzZXMgYXJlIGZyZWV6ZWQsIG5vbi1ib290IGNwdXMgYW5kIGludGVy
cnVwdHMgYXJlIGRpc2FibGVkCisgKiB0aGF0IG1lYW5zIHByb2Nlc3NlcyBhcmUgZnJvemVuLCBu
b24tYm9vdCBjcHVzIGFuZCBpbnRlcnJ1cHRzIGFyZSBkaXNhYmxlZAogICogbm93LiBJdCBpcyB0
aGVyZWZvcmUgcG9zc2libGUgdG8gc3RhcnQgdGhlIHN1c3BlbmQgdGltZXIgd2l0aG91dCB0YWtp
bmcgdGhlCiAgKiBjbG9ja3NvdXJjZSBtdXRleC4KICAqLwpkaWZmIC0tZ2l0IGEva2VybmVsL3Rp
bWUvaHJ0aW1lci5jIGIva2VybmVsL3RpbWUvaHJ0aW1lci5jCmluZGV4IDc4OGI5ZDEzN2RlNC4u
MzBiMzU2YzkzYzc4IDEwMDY0NAotLS0gYS9rZXJuZWwvdGltZS9ocnRpbWVyLmMKKysrIGIva2Vy
bmVsL3RpbWUvaHJ0aW1lci5jCkBAIC02ODMsNyArNjgzLDcgQEAgaHJ0aW1lcl9mb3JjZV9yZXBy
b2dyYW0oc3RydWN0IGhydGltZXJfY3B1X2Jhc2UgKmNwdV9iYXNlLCBpbnQgc2tpcF9lcXVhbCkK
IAkgKiBUMSBpcyByZW1vdmVkLCBzbyB0aGlzIGNvZGUgaXMgY2FsbGVkIGFuZCB3b3VsZCByZXBy
b2dyYW0KIAkgKiB0aGUgaGFyZHdhcmUgdG8gNXMgZnJvbSBub3cuIEFueSBocnRpbWVyX3N0YXJ0
IGFmdGVyIHRoYXQKIAkgKiB3aWxsIG5vdCByZXByb2dyYW0gdGhlIGhhcmR3YXJlIGR1ZSB0byBo
YW5nX2RldGVjdGVkIGJlaW5nCi0JICogc2V0LiBTbyB3ZSdkIGVmZmVjdGl2bHkgYmxvY2sgYWxs
IHRpbWVycyB1bnRpbCB0aGUgVDIgZXZlbnQKKwkgKiBzZXQuIFNvIHdlJ2QgZWZmZWN0aXZlbHkg
YmxvY2sgYWxsIHRpbWVycyB1bnRpbCB0aGUgVDIgZXZlbnQKIAkgKiBmaXJlcy4KIAkgKi8KIAlp
ZiAoIV9faHJ0aW1lcl9ocmVzX2FjdGl2ZShjcHVfYmFzZSkgfHwgY3B1X2Jhc2UtPmhhbmdfZGV0
ZWN0ZWQpCkBAIC0xMDE5LDcgKzEwMTksNyBAQCBzdGF0aWMgdm9pZCBfX3JlbW92ZV9ocnRpbWVy
KHN0cnVjdCBocnRpbWVyICp0aW1lciwKIAkgKiBjcHVfYmFzZS0+bmV4dF90aW1lci4gVGhpcyBo
YXBwZW5zIHdoZW4gd2UgcmVtb3ZlIHRoZSBmaXJzdAogCSAqIHRpbWVyIG9uIGEgcmVtb3RlIGNw
dS4gTm8gaGFybSBhcyB3ZSBuZXZlciBkZXJlZmVyZW5jZQogCSAqIGNwdV9iYXNlLT5uZXh0X3Rp
bWVyLiBTbyB0aGUgd29yc3QgdGhpbmcgd2hhdCBjYW4gaGFwcGVuIGlzCi0JICogYW4gc3VwZXJm
bG91cyBjYWxsIHRvIGhydGltZXJfZm9yY2VfcmVwcm9ncmFtKCkgb24gdGhlCisJICogYW4gc3Vw
ZXJmbHVvdXMgY2FsbCB0byBocnRpbWVyX2ZvcmNlX3JlcHJvZ3JhbSgpIG9uIHRoZQogCSAqIHJl
bW90ZSBjcHUgbGF0ZXIgb24gaWYgdGhlIHNhbWUgdGltZXIgZ2V0cyBlbnF1ZXVlZCBhZ2Fpbi4K
IAkgKi8KIAlpZiAocmVwcm9ncmFtICYmIHRpbWVyID09IGNwdV9iYXNlLT5uZXh0X3RpbWVyKQpA
QCAtMTIxMiw3ICsxMjEyLDcgQEAgc3RhdGljIHZvaWQgaHJ0aW1lcl9jcHVfYmFzZV91bmxvY2tf
ZXhwaXJ5KHN0cnVjdCBocnRpbWVyX2NwdV9iYXNlICpiYXNlKQogICogVGhlIGNvdW50ZXJwYXJ0
IHRvIGhydGltZXJfY2FuY2VsX3dhaXRfcnVubmluZygpLgogICoKICAqIElmIHRoZXJlIGlzIGEg
d2FpdGVyIGZvciBjcHVfYmFzZS0+ZXhwaXJ5X2xvY2ssIHRoZW4gaXQgd2FzIHdhaXRpbmcgZm9y
Ci0gKiB0aGUgdGltZXIgY2FsbGJhY2sgdG8gZmluaXNoLiBEcm9wIGV4cGlyeV9sb2NrIGFuZCBy
ZWFxdWlyZSBpdC4gVGhhdAorICogdGhlIHRpbWVyIGNhbGxiYWNrIHRvIGZpbmlzaC4gRHJvcCBl
eHBpcnlfbG9jayBhbmQgcmVhY3F1aXJlIGl0LiBUaGF0CiAgKiBhbGxvd3MgdGhlIHdhaXRlciB0
byBhY3F1aXJlIHRoZSBsb2NrIGFuZCBtYWtlIHByb2dyZXNzLgogICovCiBzdGF0aWMgdm9pZCBo
cnRpbWVyX3N5bmNfd2FpdF9ydW5uaW5nKHN0cnVjdCBocnRpbWVyX2NwdV9iYXNlICpjcHVfYmFz
ZSwKQEAgLTEzOTgsNyArMTM5OCw3IEBAIHN0YXRpYyB2b2lkIF9faHJ0aW1lcl9pbml0KHN0cnVj
dCBocnRpbWVyICp0aW1lciwgY2xvY2tpZF90IGNsb2NrX2lkLAogCWludCBiYXNlOwogCiAJLyoK
LQkgKiBPbiBQUkVFTVBUX1JUIGVuYWJsZWQga2VybmVscyBocnRpbWVycyB3aGljaCBhcmUgbm90
IGV4cGxpY2l0ZWx5CisJICogT24gUFJFRU1QVF9SVCBlbmFibGVkIGtlcm5lbHMgaHJ0aW1lcnMg
d2hpY2ggYXJlIG5vdCBleHBsaWNpdGx5CiAJICogbWFya2VkIGZvciBoYXJkIGludGVycnVwdCBl
eHBpcnkgbW9kZSBhcmUgbW92ZWQgaW50byBzb2Z0CiAJICogaW50ZXJydXB0IGNvbnRleHQgZm9y
IGxhdGVuY3kgcmVhc29ucyBhbmQgYmVjYXVzZSB0aGUgY2FsbGJhY2tzCiAJICogY2FuIGludm9r
ZSBmdW5jdGlvbnMgd2hpY2ggbWlnaHQgc2xlZXAgb24gUlQsIGUuZy4gc3Bpbl9sb2NrKCkuCkBA
IC0xNDMwLDcgKzE0MzAsNyBAQCBzdGF0aWMgdm9pZCBfX2hydGltZXJfaW5pdChzdHJ1Y3QgaHJ0
aW1lciAqdGltZXIsIGNsb2NraWRfdCBjbG9ja19pZCwKICAqIGhydGltZXJfaW5pdCAtIGluaXRp
YWxpemUgYSB0aW1lciB0byB0aGUgZ2l2ZW4gY2xvY2sKICAqIEB0aW1lcjoJdGhlIHRpbWVyIHRv
IGJlIGluaXRpYWxpemVkCiAgKiBAY2xvY2tfaWQ6CXRoZSBjbG9jayB0byBiZSB1c2VkCi0gKiBA
bW9kZTogICAgICAgVGhlIG1vZGVzIHdoaWNoIGFyZSByZWxldmFudCBmb3IgaW50aXRpYWxpemF0
aW9uOgorICogQG1vZGU6ICAgICAgIFRoZSBtb2RlcyB3aGljaCBhcmUgcmVsZXZhbnQgZm9yIGlu
aXRpYWxpemF0aW9uOgogICogICAgICAgICAgICAgIEhSVElNRVJfTU9ERV9BQlMsIEhSVElNRVJf
TU9ERV9SRUwsIEhSVElNRVJfTU9ERV9BQlNfU09GVCwKICAqICAgICAgICAgICAgICBIUlRJTUVS
X01PREVfUkVMX1NPRlQKICAqCkBAIC0xNDg3LDcgKzE0ODcsNyBAQCBFWFBPUlRfU1lNQk9MX0dQ
TChocnRpbWVyX2FjdGl2ZSk7CiAgKiBpbnN1ZmZpY2llbnQgZm9yIHRoYXQuCiAgKgogICogVGhl
IHNlcXVlbmNlIG51bWJlcnMgYXJlIHJlcXVpcmVkIGJlY2F1c2Ugb3RoZXJ3aXNlIHdlIGNvdWxk
IHN0aWxsIG9ic2VydmUKLSAqIGEgZmFsc2UgbmVnYXRpdmUgaWYgdGhlIHJlYWQgc2lkZSBnb3Qg
c21lYXJlZCBvdmVyIG11bHRpcGxlIGNvbnNlcXV0aXZlCisgKiBhIGZhbHNlIG5lZ2F0aXZlIGlm
IHRoZSByZWFkIHNpZGUgZ290IHNtZWFyZWQgb3ZlciBtdWx0aXBsZSBjb25zZWN1dGl2ZQogICog
X19ydW5faHJ0aW1lcigpIGludm9jYXRpb25zLgogICovCiAKQEAgLTE1ODgsNyArMTU4OCw3IEBA
IHN0YXRpYyB2b2lkIF9faHJ0aW1lcl9ydW5fcXVldWVzKHN0cnVjdCBocnRpbWVyX2NwdV9iYXNl
ICpjcHVfYmFzZSwga3RpbWVfdCBub3csCiAJCQkgKiBtaW5pbWl6aW5nIHdha2V1cHMsIG5vdCBy
dW5uaW5nIHRpbWVycyBhdCB0aGUKIAkJCSAqIGVhcmxpZXN0IGludGVycnVwdCBhZnRlciB0aGVp
ciBzb2Z0IGV4cGlyYXRpb24uCiAJCQkgKiBUaGlzIGFsbG93cyB1cyB0byBhdm9pZCB1c2luZyBh
IFByaW9yaXR5IFNlYXJjaAotCQkJICogVHJlZSwgd2hpY2ggY2FuIGFuc3dlciBhIHN0YWJiaW5n
IHF1ZXJyeSBmb3IKKwkJCSAqIFRyZWUsIHdoaWNoIGNhbiBhbnN3ZXIgYSBzdGFiYmluZyBxdWVy
eSBmb3IKIAkJCSAqIG92ZXJsYXBwaW5nIGludGVydmFscyBhbmQgaW5zdGVhZCB1c2UgdGhlIHNp
bXBsZQogCQkJICogQlNUIHdlIGFscmVhZHkgaGF2ZS4KIAkJCSAqIFdlIGRvbid0IGFkZCBleHRy
YSB3YWtldXBzIGJ5IGRlbGF5aW5nIHRpbWVycyB0aGF0CkBAIC0xODIyLDcgKzE4MjIsNyBAQCBz
dGF0aWMgdm9pZCBfX2hydGltZXJfaW5pdF9zbGVlcGVyKHN0cnVjdCBocnRpbWVyX3NsZWVwZXIg
KnNsLAogCQkJCSAgIGNsb2NraWRfdCBjbG9ja19pZCwgZW51bSBocnRpbWVyX21vZGUgbW9kZSkK
IHsKIAkvKgotCSAqIE9uIFBSRUVNUFRfUlQgZW5hYmxlZCBrZXJuZWxzIGhydGltZXJzIHdoaWNo
IGFyZSBub3QgZXhwbGljaXRlbHkKKwkgKiBPbiBQUkVFTVBUX1JUIGVuYWJsZWQga2VybmVscyBo
cnRpbWVycyB3aGljaCBhcmUgbm90IGV4cGxpY2l0bHkKIAkgKiBtYXJrZWQgZm9yIGhhcmQgaW50
ZXJydXB0IGV4cGlyeSBtb2RlIGFyZSBtb3ZlZCBpbnRvIHNvZnQKIAkgKiBpbnRlcnJ1cHQgY29u
dGV4dCBlaXRoZXIgZm9yIGxhdGVuY3kgcmVhc29ucyBvciBiZWNhdXNlIHRoZQogCSAqIGhydGlt
ZXIgY2FsbGJhY2sgdGFrZXMgcmVndWxhciBzcGlubG9ja3Mgb3IgaW52b2tlcyBvdGhlcgpAQCAt
MTgzNSw3ICsxODM1LDcgQEAgc3RhdGljIHZvaWQgX19ocnRpbWVyX2luaXRfc2xlZXBlcihzdHJ1
Y3QgaHJ0aW1lcl9zbGVlcGVyICpzbCwKIAkgKiB0aGUgc2FtZSBDUFUuIFRoYXQgY2F1c2VzIGEg
bGF0ZW5jeSBzcGlrZSBkdWUgdG8gdGhlIHdha2V1cCBvZgogCSAqIGEgZ2F6aWxsaW9uIHRocmVh
ZHMuCiAJICoKLQkgKiBPVE9ILCBwcml2aWxlZGdlZCByZWFsLXRpbWUgdXNlciBzcGFjZSBhcHBs
aWNhdGlvbnMgcmVseSBvbiB0aGUKKwkgKiBPVE9ILCBwcml2aWxlZ2VkIHJlYWwtdGltZSB1c2Vy
IHNwYWNlIGFwcGxpY2F0aW9ucyByZWx5IG9uIHRoZQogCSAqIGxvdyBsYXRlbmN5IG9mIGhhcmQg
aW50ZXJydXB0IHdha2V1cHMuIElmIHRoZSBjdXJyZW50IHRhc2sgaXMgaW4KIAkgKiBhIHJlYWwt
dGltZSBzY2hlZHVsaW5nIGNsYXNzLCBtYXJrIHRoZSBtb2RlIGZvciBoYXJkIGludGVycnVwdAog
CSAqIGV4cGlyeS4KZGlmZiAtLWdpdCBhL2tlcm5lbC90aW1lL2ppZmZpZXMuYyBiL2tlcm5lbC90
aW1lL2ppZmZpZXMuYwppbmRleCBhNWNmZmUyYTE3NzAuLmE0OTJlNGRhNjliYSAxMDA2NDQKLS0t
IGEva2VybmVsL3RpbWUvamlmZmllcy5jCisrKyBiL2tlcm5lbC90aW1lL2ppZmZpZXMuYwpAQCAt
NDQsNyArNDQsNyBAQCBzdGF0aWMgdTY0IGppZmZpZXNfcmVhZChzdHJ1Y3QgY2xvY2tzb3VyY2Ug
KmNzKQogICogdGhlIHRpbWVyIGludGVycnVwdCBmcmVxdWVuY3kgSFogYW5kIGl0IHN1ZmZlcnMK
ICAqIGluYWNjdXJhY2llcyBjYXVzZWQgYnkgbWlzc2VkIG9yIGxvc3QgdGltZXIKICAqIGludGVy
cnVwdHMgYW5kIHRoZSBpbmFiaWxpdHkgZm9yIHRoZSB0aW1lcgotICogaW50ZXJydXB0IGhhcmR3
YXJlIHRvIGFjY3VyYXRseSB0aWNrIGF0IHRoZQorICogaW50ZXJydXB0IGhhcmR3YXJlIHRvIGFj
Y3VyYXRlbHkgdGljayBhdCB0aGUKICAqIHJlcXVlc3RlZCBIWiB2YWx1ZS4gSXQgaXMgYWxzbyBu
b3QgcmVjb21tZW5kZWQKICAqIGZvciAidGljay1sZXNzIiBzeXN0ZW1zLgogICovCmRpZmYgLS1n
aXQgYS9rZXJuZWwvdGltZS9udHAuYyBiL2tlcm5lbC90aW1lL250cC5jCmluZGV4IDUyNDdhZmQ3
ZjM0NS4uNDA2ZGNjYjc5YzJiIDEwMDY0NAotLS0gYS9rZXJuZWwvdGltZS9udHAuYworKysgYi9r
ZXJuZWwvdGltZS9udHAuYwpAQCAtNTQ0LDcgKzU0NCw3IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBy
dGNfdHZfbnNlY19vayh1bnNpZ25lZCBsb25nIHNldF9vZmZzZXRfbnNlYywKIAkJCQkgIHN0cnVj
dCB0aW1lc3BlYzY0ICp0b19zZXQsCiAJCQkJICBjb25zdCBzdHJ1Y3QgdGltZXNwZWM2NCAqbm93
KQogewotCS8qIEFsbG93ZWQgZXJyb3IgaW4gdHZfbnNlYywgYXJiaXRhcmlseSBzZXQgdG8gNSBq
aWZmaWVzIGluIG5zLiAqLworCS8qIEFsbG93ZWQgZXJyb3IgaW4gdHZfbnNlYywgYXJiaXRyYXJp
bHkgc2V0IHRvIDUgamlmZmllcyBpbiBucy4gKi8KIAljb25zdCB1bnNpZ25lZCBsb25nIFRJTUVf
U0VUX05TRUNfRlVaWiA9IFRJQ0tfTlNFQyAqIDU7CiAJc3RydWN0IHRpbWVzcGVjNjQgZGVsYXkg
PSB7LnR2X3NlYyA9IC0xLAogCQkJCSAgIC50dl9uc2VjID0gc2V0X29mZnNldF9uc2VjfTsKZGlm
ZiAtLWdpdCBhL2tlcm5lbC90aW1lL3Bvc2l4LWNwdS10aW1lcnMuYyBiL2tlcm5lbC90aW1lL3Bv
c2l4LWNwdS10aW1lcnMuYwppbmRleCBhNzE3NThlMzRlNDUuLmIxNDVlNjgzNWUzNCAxMDA2NDQK
LS0tIGEva2VybmVsL3RpbWUvcG9zaXgtY3B1LXRpbWVycy5jCisrKyBiL2tlcm5lbC90aW1lL3Bv
c2l4LWNwdS10aW1lcnMuYwpAQCAtMjc5LDcgKzI3OSw3IEBAIHZvaWQgdGhyZWFkX2dyb3VwX3Nh
bXBsZV9jcHV0aW1lKHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrLCB1NjQgKnNhbXBsZXMpCiAgKiBA
dHNrOglUYXNrIGZvciB3aGljaCBjcHV0aW1lIG5lZWRzIHRvIGJlIHN0YXJ0ZWQKICAqIEBzYW1w
bGVzOglTdG9yYWdlIGZvciB0aW1lIHNhbXBsZXMKICAqCi0gKiBUaGUgdGhyZWFkIGdyb3VwIGNw
dXRpbWUgYWNjb3V0aW5nIGlzIGF2b2lkZWQgd2hlbiB0aGVyZSBhcmUgbm8gcG9zaXgKKyAqIFRo
ZSB0aHJlYWQgZ3JvdXAgY3B1dGltZSBhY2NvdW50aW5nIGlzIGF2b2lkZWQgd2hlbiB0aGVyZSBh
cmUgbm8gcG9zaXgKICAqIENQVSB0aW1lcnMgYXJtZWQuIEJlZm9yZSBzdGFydGluZyBhIHRpbWVy
IGl0J3MgcmVxdWlyZWQgdG8gY2hlY2sgd2hldGhlcgogICogdGhlIHRpbWUgYWNjb3VudGluZyBp
cyBhY3RpdmUuIElmIG5vdCwgYSBmdWxsIHVwZGF0ZSBvZiB0aGUgYXRvbWljCiAgKiBhY2NvdW50
aW5nIHN0b3JlIG5lZWRzIHRvIGJlIGRvbmUgYW5kIHRoZSBhY2NvdW50aW5nIGVuYWJsZWQuCkBA
IC0zOTAsNyArMzkwLDcgQEAgc3RhdGljIGludCBwb3NpeF9jcHVfdGltZXJfY3JlYXRlKHN0cnVj
dCBrX2l0aW1lciAqbmV3X3RpbWVyKQogCS8qCiAJICogSWYgcG9zaXggdGltZXIgZXhwaXJ5IGlz
IGhhbmRsZWQgaW4gdGFzayB3b3JrIGNvbnRleHQgdGhlbgogCSAqIHRpbWVyOjppdF9sb2NrIGNh
biBiZSB0YWtlbiB3aXRob3V0IGRpc2FibGluZyBpbnRlcnJ1cHRzIGFzIGFsbAotCSAqIG90aGVy
IGxvY2tpbmcgaGFwcGVucyBpbiB0YXNrIGNvbnRleHQuIFRoaXMgcmVxdWlyZXMgYSBzZXBlcmF0
ZQorCSAqIG90aGVyIGxvY2tpbmcgaGFwcGVucyBpbiB0YXNrIGNvbnRleHQuIFRoaXMgcmVxdWly
ZXMgYSBzZXBhcmF0ZQogCSAqIGxvY2sgY2xhc3Mga2V5IG90aGVyd2lzZSByZWd1bGFyIHBvc2l4
IHRpbWVyIGV4cGlyeSB3b3VsZCByZWNvcmQKIAkgKiB0aGUgbG9jayBjbGFzcyBiZWluZyB0YWtl
biBpbiBpbnRlcnJ1cHQgY29udGV4dCBhbmQgZ2VuZXJhdGUgYQogCSAqIGZhbHNlIHBvc2l0aXZl
IHdhcm5pbmcuCkBAIC0xMjE2LDcgKzEyMTYsNyBAQCBzdGF0aWMgdm9pZCBoYW5kbGVfcG9zaXhf
Y3B1X3RpbWVycyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKIAkJY2hlY2tfcHJvY2Vzc190aW1l
cnModHNrLCAmZmlyaW5nKTsKIAogCQkvKgotCQkgKiBUaGUgYWJvdmUgdGltZXIgY2hlY2tzIGhh
dmUgdXBkYXRlZCB0aGUgZXhpcHJ5IGNhY2hlIGFuZAorCQkgKiBUaGUgYWJvdmUgdGltZXIgY2hl
Y2tzIGhhdmUgdXBkYXRlZCB0aGUgZXhwaXJ5IGNhY2hlIGFuZAogCQkgKiBiZWNhdXNlIG5vdGhp
bmcgY2FuIGhhdmUgcXVldWVkIG9yIG1vZGlmaWVkIHRpbWVycyBhZnRlcgogCQkgKiBzaWdoYW5k
IGxvY2sgd2FzIHRha2VuIGFib3ZlIGl0IGlzIGd1YXJhbnRlZWQgdG8gYmUKIAkJICogY29uc2lz
dGVudC4gU28gdGhlIG5leHQgdGltZXIgaW50ZXJydXB0IGZhc3RwYXRoIGNoZWNrCmRpZmYgLS1n
aXQgYS9rZXJuZWwvdGltZS9wb3NpeC10aW1lcnMuYyBiL2tlcm5lbC90aW1lL3Bvc2l4LXRpbWVy
cy5jCmluZGV4IGJmNTQwZjVhNDExNS4uZGQ1Njk3ZDczNDdiIDEwMDY0NAotLS0gYS9rZXJuZWwv
dGltZS9wb3NpeC10aW1lcnMuYworKysgYi9rZXJuZWwvdGltZS9wb3NpeC10aW1lcnMuYwpAQCAt
MTE5MSw4ICsxMTkxLDggQEAgU1lTQ0FMTF9ERUZJTkUyKGNsb2NrX2FkanRpbWUzMiwgY2xvY2tp
ZF90LCB3aGljaF9jbG9jaywKIAogCWVyciA9IGRvX2Nsb2NrX2FkanRpbWUod2hpY2hfY2xvY2ss
ICZrdHgpOwogCi0JaWYgKGVyciA+PSAwKQotCQllcnIgPSBwdXRfb2xkX3RpbWV4MzIodXRwLCAm
a3R4KTsKKwlpZiAoZXJyID49IDAgJiYgcHV0X29sZF90aW1leDMyKHV0cCwgJmt0eCkpCisJCXJl
dHVybiAtRUZBVUxUOwogCiAJcmV0dXJuIGVycjsKIH0KZGlmZiAtLWdpdCBhL2tlcm5lbC90aW1l
L3Rlc3RfdWRlbGF5LmMgYi9rZXJuZWwvdGltZS90ZXN0X3VkZWxheS5jCmluZGV4IDc3YzYzMDA1
ZGM0ZS4uMTNiMTFlYjYyNjg1IDEwMDY0NAotLS0gYS9rZXJuZWwvdGltZS90ZXN0X3VkZWxheS5j
CisrKyBiL2tlcm5lbC90aW1lL3Rlc3RfdWRlbGF5LmMKQEAgLTIxLDcgKzIxLDYgQEAKICNkZWZp
bmUgREVCVUdGU19GSUxFTkFNRSAidWRlbGF5X3Rlc3QiCiAKIHN0YXRpYyBERUZJTkVfTVVURVgo
dWRlbGF5X3Rlc3RfbG9jayk7Ci1zdGF0aWMgc3RydWN0IGRlbnRyeSAqdWRlbGF5X3Rlc3RfZGVi
dWdmc19maWxlOwogc3RhdGljIGludCB1ZGVsYXlfdGVzdF91c2VjczsKIHN0YXRpYyBpbnQgdWRl
bGF5X3Rlc3RfaXRlcmF0aW9ucyA9IERFRkFVTFRfSVRFUkFUSU9OUzsKIApAQCAtMTM4LDggKzEz
Nyw4IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIHVkZWxheV90ZXN0X2Rl
YnVnZnNfb3BzID0gewogc3RhdGljIGludCBfX2luaXQgdWRlbGF5X3Rlc3RfaW5pdCh2b2lkKQog
ewogCW11dGV4X2xvY2soJnVkZWxheV90ZXN0X2xvY2spOwotCXVkZWxheV90ZXN0X2RlYnVnZnNf
ZmlsZSA9IGRlYnVnZnNfY3JlYXRlX2ZpbGUoREVCVUdGU19GSUxFTkFNRSwKLQkJCVNfSVJVU1Is
IE5VTEwsIE5VTEwsICZ1ZGVsYXlfdGVzdF9kZWJ1Z2ZzX29wcyk7CisJZGVidWdmc19jcmVhdGVf
ZmlsZShERUJVR0ZTX0ZJTEVOQU1FLCBTX0lSVVNSLCBOVUxMLCBOVUxMLAorCQkJICAgICZ1ZGVs
YXlfdGVzdF9kZWJ1Z2ZzX29wcyk7CiAJbXV0ZXhfdW5sb2NrKCZ1ZGVsYXlfdGVzdF9sb2NrKTsK
IAogCXJldHVybiAwOwpAQCAtMTUwLDcgKzE0OSw3IEBAIG1vZHVsZV9pbml0KHVkZWxheV90ZXN0
X2luaXQpOwogc3RhdGljIHZvaWQgX19leGl0IHVkZWxheV90ZXN0X2V4aXQodm9pZCkKIHsKIAlt
dXRleF9sb2NrKCZ1ZGVsYXlfdGVzdF9sb2NrKTsKLQlkZWJ1Z2ZzX3JlbW92ZSh1ZGVsYXlfdGVz
dF9kZWJ1Z2ZzX2ZpbGUpOworCWRlYnVnZnNfcmVtb3ZlKGRlYnVnZnNfbG9va3VwKERFQlVHRlNf
RklMRU5BTUUsIE5VTEwpKTsKIAltdXRleF91bmxvY2soJnVkZWxheV90ZXN0X2xvY2spOwogfQog
CmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS90aWNrLWJyb2FkY2FzdC1ocnRpbWVyLmMgYi9rZXJu
ZWwvdGltZS90aWNrLWJyb2FkY2FzdC1ocnRpbWVyLmMKaW5kZXggYjVhNjVlMjEyZGYyLi43OTdl
YjkzMTAzYWQgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL3RpY2stYnJvYWRjYXN0LWhydGltZXIu
YworKysgYi9rZXJuZWwvdGltZS90aWNrLWJyb2FkY2FzdC1ocnRpbWVyLmMKQEAgLTUzLDcgKzUz
LDcgQEAgc3RhdGljIGludCBiY19zZXRfbmV4dChrdGltZV90IGV4cGlyZXMsIHN0cnVjdCBjbG9j
a19ldmVudF9kZXZpY2UgKmJjKQogCSAqIHJlYXNvbnMuCiAJICoKIAkgKiBFYWNoIGNhbGxlciB0
cmllcyB0byBhcm0gdGhlIGhydGltZXIgb24gaXRzIG93biBDUFUsIGJ1dCBpZiB0aGUKLQkgKiBo
cnRpbWVyIGNhbGxiYmFjayBmdW5jdGlvbiBpcyBjdXJyZW50bHkgcnVubmluZywgdGhlbgorCSAq
IGhydGltZXIgY2FsbGJhY2sgZnVuY3Rpb24gaXMgY3VycmVudGx5IHJ1bm5pbmcsIHRoZW4KIAkg
KiBocnRpbWVyX3N0YXJ0KCkgY2Fubm90IG1vdmUgaXQgYW5kIHRoZSB0aW1lciBzdGF5cyBvbiB0
aGUgQ1BVIG9uCiAJICogd2hpY2ggaXQgaXMgYXNzaWduZWQgYXQgdGhlIG1vbWVudC4KIAkgKgpk
aWZmIC0tZ2l0IGEva2VybmVsL3RpbWUvdGljay1icm9hZGNhc3QuYyBiL2tlcm5lbC90aW1lL3Rp
Y2stYnJvYWRjYXN0LmMKaW5kZXggNWEyMzgyOTM3MmM3Li5hNDQwNTUyMjg3OTYgMTAwNjQ0Ci0t
LSBhL2tlcm5lbC90aW1lL3RpY2stYnJvYWRjYXN0LmMKKysrIGIva2VybmVsL3RpbWUvdGljay1i
cm9hZGNhc3QuYwpAQCAtMTA3LDYgKzEwNywxOSBAQCB2b2lkIHRpY2tfaW5zdGFsbF9icm9hZGNh
c3RfZGV2aWNlKHN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmRldikKIAl0aWNrX2Jyb2FkY2Fz
dF9kZXZpY2UuZXZ0ZGV2ID0gZGV2OwogCWlmICghY3B1bWFza19lbXB0eSh0aWNrX2Jyb2FkY2Fz
dF9tYXNrKSkKIAkJdGlja19icm9hZGNhc3Rfc3RhcnRfcGVyaW9kaWMoZGV2KTsKKworCWlmICgh
KGRldi0+ZmVhdHVyZXMgJiBDTE9DS19FVlRfRkVBVF9PTkVTSE9UKSkKKwkJcmV0dXJuOworCisJ
LyoKKwkgKiBJZiB0aGUgc3lzdGVtIGFscmVhZHkgcnVucyBpbiBvbmVzaG90IG1vZGUsIHN3aXRj
aCB0aGUgbmV3bHkKKwkgKiByZWdpc3RlcmVkIGJyb2FkY2FzdCBkZXZpY2UgdG8gb25lc2hvdCBt
b2RlIGV4cGxpY2l0bHkuCisJICovCisJaWYgKHRpY2tfYnJvYWRjYXN0X29uZXNob3RfYWN0aXZl
KCkpIHsKKwkJdGlja19icm9hZGNhc3Rfc3dpdGNoX3RvX29uZXNob3QoKTsKKwkJcmV0dXJuOwor
CX0KKwogCS8qCiAJICogSW5mb3JtIGFsbCBjcHVzIGFib3V0IHRoaXMuIFdlIG1pZ2h0IGJlIGlu
IGEgc2l0dWF0aW9uCiAJICogd2hlcmUgd2UgZGlkIG5vdCBzd2l0Y2ggdG8gb25lc2hvdCBtb2Rl
IGJlY2F1c2UgdGhlIHBlciBjcHUKQEAgLTExNSw4ICsxMjgsNyBAQCB2b2lkIHRpY2tfaW5zdGFs
bF9icm9hZGNhc3RfZGV2aWNlKHN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmRldikKIAkgKiBu
b3RpZmljYXRpb24gdGhlIHN5c3RlbXMgc3RheXMgc3R1Y2sgaW4gcGVyaW9kaWMgbW9kZQogCSAq
IGZvcmV2ZXIuCiAJICovCi0JaWYgKGRldi0+ZmVhdHVyZXMgJiBDTE9DS19FVlRfRkVBVF9PTkVT
SE9UKQotCQl0aWNrX2Nsb2NrX25vdGlmeSgpOworCXRpY2tfY2xvY2tfbm90aWZ5KCk7CiB9CiAK
IC8qCkBAIC0xNTcsNyArMTY5LDcgQEAgc3RhdGljIHZvaWQgdGlja19kZXZpY2Vfc2V0dXBfYnJv
YWRjYXN0X2Z1bmMoc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqZGV2KQogfQogCiAvKgotICog
Q2hlY2ssIGlmIHRoZSBkZXZpY2UgaXMgZGlzZnVuY3Rpb25hbCBhbmQgYSBwbGFjZSBob2xkZXIs
IHdoaWNoCisgKiBDaGVjaywgaWYgdGhlIGRldmljZSBpcyBkeXNmdW5jdGlvbmFsIGFuZCBhIHBs
YWNlaG9sZGVyLCB3aGljaAogICogbmVlZHMgdG8gYmUgaGFuZGxlZCBieSB0aGUgYnJvYWRjYXN0
IGRldmljZS4KICAqLwogaW50IHRpY2tfZGV2aWNlX3VzZXNfYnJvYWRjYXN0KHN0cnVjdCBjbG9j
a19ldmVudF9kZXZpY2UgKmRldiwgaW50IGNwdSkKQEAgLTM5MSw3ICs0MDMsNyBAQCB2b2lkIHRp
Y2tfYnJvYWRjYXN0X2NvbnRyb2woZW51bSB0aWNrX2Jyb2FkY2FzdF9tb2RlIG1vZGUpCiAJCQkg
KiAtIHRoZSBicm9hZGNhc3QgZGV2aWNlIGV4aXN0cwogCQkJICogLSB0aGUgYnJvYWRjYXN0IGRl
dmljZSBpcyBub3QgYSBocnRpbWVyIGJhc2VkIG9uZQogCQkJICogLSB0aGUgYnJvYWRjYXN0IGRl
dmljZSBpcyBpbiBwZXJpb2RpYyBtb2RlIHRvCi0JCQkgKiAgIGF2b2lkIGEgaGlja3VwIGR1cmlu
ZyBzd2l0Y2ggdG8gb25lc2hvdCBtb2RlCisJCQkgKiAgIGF2b2lkIGEgaGljY3VwIGR1cmluZyBz
d2l0Y2ggdG8gb25lc2hvdCBtb2RlCiAJCQkgKi8KIAkJCWlmIChiYyAmJiAhKGJjLT5mZWF0dXJl
cyAmIENMT0NLX0VWVF9GRUFUX0hSVElNRVIpICYmCiAJCQkgICAgdGlja19icm9hZGNhc3RfZGV2
aWNlLm1vZGUgPT0gVElDS0RFVl9NT0RFX1BFUklPRElDKQpkaWZmIC0tZ2l0IGEva2VybmVsL3Rp
bWUvdGljay1jb21tb24uYyBiL2tlcm5lbC90aW1lL3RpY2stY29tbW9uLmMKaW5kZXggOWQzYTIy
NTEwYmFiLi5lMTViYzBlZjE5MTIgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL3RpY2stY29tbW9u
LmMKKysrIGIva2VybmVsL3RpbWUvdGljay1jb21tb24uYwpAQCAtMzQ4LDEyICszNDgsNyBAQCB2
b2lkIHRpY2tfY2hlY2tfbmV3X2RldmljZShzdHJ1Y3QgY2xvY2tfZXZlbnRfZGV2aWNlICpuZXdk
ZXYpCiAJdGQgPSAmcGVyX2NwdSh0aWNrX2NwdV9kZXZpY2UsIGNwdSk7CiAJY3VyZGV2ID0gdGQt
PmV2dGRldjsKIAotCS8qIGNwdSBsb2NhbCBkZXZpY2UgPyAqLwotCWlmICghdGlja19jaGVja19w
ZXJjcHUoY3VyZGV2LCBuZXdkZXYsIGNwdSkpCi0JCWdvdG8gb3V0X2JjOwotCi0JLyogUHJlZmVy
ZW5jZSBkZWNpc2lvbiAqLwotCWlmICghdGlja19jaGVja19wcmVmZXJyZWQoY3VyZGV2LCBuZXdk
ZXYpKQorCWlmICghdGlja19jaGVja19yZXBsYWNlbWVudChjdXJkZXYsIG5ld2RldikpCiAJCWdv
dG8gb3V0X2JjOwogCiAJaWYgKCF0cnlfbW9kdWxlX2dldChuZXdkZXYtPm93bmVyKSkKZGlmZiAt
LWdpdCBhL2tlcm5lbC90aW1lL3RpY2stb25lc2hvdC5jIGIva2VybmVsL3RpbWUvdGljay1vbmVz
aG90LmMKaW5kZXggZjk3NDVkNDc0MjVhLi40NzVlY2NlZGE3NjggMTAwNjQ0Ci0tLSBhL2tlcm5l
bC90aW1lL3RpY2stb25lc2hvdC5jCisrKyBiL2tlcm5lbC90aW1lL3RpY2stb25lc2hvdC5jCkBA
IC00NSw3ICs0NSw3IEBAIGludCB0aWNrX3Byb2dyYW1fZXZlbnQoa3RpbWVfdCBleHBpcmVzLCBp
bnQgZm9yY2UpCiB9CiAKIC8qKgotICogdGlja19yZXN1bWVfb25zaG90IC0gcmVzdW1lIG9uZXNo
b3QgbW9kZQorICogdGlja19yZXN1bWVfb25lc2hvdCAtIHJlc3VtZSBvbmVzaG90IG1vZGUKICAq
Lwogdm9pZCB0aWNrX3Jlc3VtZV9vbmVzaG90KHZvaWQpCiB7CmRpZmYgLS1naXQgYS9rZXJuZWwv
dGltZS90aWNrLXNjaGVkLmMgYi9rZXJuZWwvdGltZS90aWNrLXNjaGVkLmMKaW5kZXggZTEwYTRh
Zjg4NzM3Li4xMjg3MzVlM2U3N2UgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL3RpY2stc2NoZWQu
YworKysgYi9rZXJuZWwvdGltZS90aWNrLXNjaGVkLmMKQEAgLTc1MSw3ICs3NTEsNyBAQCBzdGF0
aWMga3RpbWVfdCB0aWNrX25vaHpfbmV4dF9ldmVudChzdHJ1Y3QgdGlja19zY2hlZCAqdHMsIGlu
dCBjcHUpCiAJICogQXNpZGUgb2YgdGhhdCBjaGVjayB3aGV0aGVyIHRoZSBsb2NhbCB0aW1lciBz
b2Z0aXJxIGlzCiAJICogcGVuZGluZy4gSWYgc28gaXRzIGEgYmFkIGlkZWEgdG8gY2FsbCBnZXRf
bmV4dF90aW1lcl9pbnRlcnJ1cHQoKQogCSAqIGJlY2F1c2UgdGhlcmUgaXMgYW4gYWxyZWFkeSBl
eHBpcmVkIHRpbWVyLCBzbyBpdCB3aWxsIHJlcXVlc3QKLQkgKiBpbW1lZGl0YXRlIGV4cGlyeSwg
d2hpY2ggcmVhcm1zIHRoZSBoYXJkd2FyZSB0aW1lciB3aXRoIGEKKwkgKiBpbW1lZGlhdGUgZXhw
aXJ5LCB3aGljaCByZWFybXMgdGhlIGhhcmR3YXJlIHRpbWVyIHdpdGggYQogCSAqIG1pbmltYWwg
ZGVsdGEgd2hpY2ggYnJpbmdzIHVzIGJhY2sgdG8gdGhpcyBwbGFjZQogCSAqIGltbWVkaWF0ZWx5
LiBMYXRoZXIsIHJpbnNlIGFuZCByZXBlYXQuLi4KIAkgKi8KZGlmZiAtLWdpdCBhL2tlcm5lbC90
aW1lL3RpY2stc2NoZWQuaCBiL2tlcm5lbC90aW1lL3RpY2stc2NoZWQuaAppbmRleCA0ZmIwNjUy
N2NmNjQuLmQ5NTJhZTM5MzQyMyAxMDA2NDQKLS0tIGEva2VybmVsL3RpbWUvdGljay1zY2hlZC5o
CisrKyBiL2tlcm5lbC90aW1lL3RpY2stc2NoZWQuaApAQCAtMjksNyArMjksNyBAQCBlbnVtIHRp
Y2tfbm9oel9tb2RlIHsKICAqIEBpbmlkbGU6CQlJbmRpY2F0b3IgdGhhdCB0aGUgQ1BVIGlzIGlu
IHRoZSB0aWNrIGlkbGUgbW9kZQogICogQHRpY2tfc3RvcHBlZDoJSW5kaWNhdG9yIHRoYXQgdGhl
IGlkbGUgdGljayBoYXMgYmVlbiBzdG9wcGVkCiAgKiBAaWRsZV9hY3RpdmU6CUluZGljYXRvciB0
aGF0IHRoZSBDUFUgaXMgYWN0aXZlbHkgaW4gdGhlIHRpY2sgaWRsZSBtb2RlOwotICoJCQlpdCBp
cyByZXNldHRlZCBkdXJpbmcgaXJxIGhhbmRsaW5nIHBoYXNlcy4KKyAqCQkJaXQgaXMgcmVzZXQg
ZHVyaW5nIGlycSBoYW5kbGluZyBwaGFzZXMuCiAgKiBAZG9fdGltZXJfbHN0OglDUFUgd2FzIHRo
ZSBsYXN0IG9uZSBkb2luZyBkb190aW1lciBiZWZvcmUgZ29pbmcgaWRsZQogICogQGdvdF9pZGxl
X3RpY2s6CVRpY2sgdGltZXIgZnVuY3Rpb24gaGFzIHJ1biB3aXRoIEBpbmlkbGUgc2V0CiAgKiBA
bGFzdF90aWNrOgkJU3RvcmUgdGhlIGxhc3QgdGljayBleHBpcnkgdGltZSB3aGVuIHRoZSB0aWNr
CmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS90aW1lLmMgYi9rZXJuZWwvdGltZS90aW1lLmMKaW5k
ZXggMzk4NWIyYjMyZDA4Li4yOTkyM2IyMGUwZTQgMTAwNjQ0Ci0tLSBhL2tlcm5lbC90aW1lL3Rp
bWUuYworKysgYi9rZXJuZWwvdGltZS90aW1lLmMKQEAgLTU3MSw3ICs1NzEsNyBAQCBFWFBPUlRf
U1lNQk9MKF9fdXNlY3NfdG9famlmZmllcyk7CiAvKgogICogVGhlIFRJQ0tfTlNFQyAtIDEgcm91
bmRzIHVwIHRoZSB2YWx1ZSB0byB0aGUgbmV4dCByZXNvbHV0aW9uLiAgTm90ZQogICogdGhhdCBh
IHJlbWFpbmRlciBzdWJ0cmFjdCBoZXJlIHdvdWxkIG5vdCBkbyB0aGUgcmlnaHQgdGhpbmcgYXMg
dGhlCi0gKiByZXNvbHV0aW9uIHZhbHVlcyBkb24ndCBmYWxsIG9uIHNlY29uZCBib3VuZHJpZXMu
ICBJLmUuIHRoZSBsaW5lOgorICogcmVzb2x1dGlvbiB2YWx1ZXMgZG9uJ3QgZmFsbCBvbiBzZWNv
bmQgYm91bmRhcmllcy4gIEkuZS4gdGhlIGxpbmU6CiAgKiBuc2VjIC09IG5zZWMgJSBUSUNLX05T
RUM7IGlzIE5PVCBhIGNvcnJlY3QgcmVzb2x1dGlvbiByb3VuZGluZy4KICAqIE5vdGUgdGhhdCBk
dWUgdG8gdGhlIHNtYWxsIGVycm9yIGluIHRoZSBtdWx0aXBsaWVyIGhlcmUsIHRoaXMKICAqIHJv
dW5kaW5nIGlzIGluY29ycmVjdCBmb3Igc3VmZmljaWVudGx5IGxhcmdlIHZhbHVlcyBvZiB0dl9u
c2VjLCBidXQKZGlmZiAtLWdpdCBhL2tlcm5lbC90aW1lL3RpbWVjb3VudGVyLmMgYi9rZXJuZWwv
dGltZS90aW1lY291bnRlci5jCmluZGV4IDg1Yjk4ZTcyNzMwNi4uZTYyODUyODhkNzY1IDEwMDY0
NAotLS0gYS9rZXJuZWwvdGltZS90aW1lY291bnRlci5jCisrKyBiL2tlcm5lbC90aW1lL3RpbWVj
b3VudGVyLmMKQEAgLTc2LDcgKzc2LDcgQEAgc3RhdGljIHU2NCBjY19jeWMybnNfYmFja3dhcmRz
KGNvbnN0IHN0cnVjdCBjeWNsZWNvdW50ZXIgKmNjLAogCXJldHVybiBuczsKIH0KIAotdTY0IHRp
bWVjb3VudGVyX2N5YzJ0aW1lKHN0cnVjdCB0aW1lY291bnRlciAqdGMsCit1NjQgdGltZWNvdW50
ZXJfY3ljMnRpbWUoY29uc3Qgc3RydWN0IHRpbWVjb3VudGVyICp0YywKIAkJCSB1NjQgY3ljbGVf
dHN0YW1wKQogewogCXU2NCBkZWx0YSA9IChjeWNsZV90c3RhbXAgLSB0Yy0+Y3ljbGVfbGFzdCkg
JiB0Yy0+Y2MtPm1hc2s7CmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS90aW1la2VlcGluZy5jIGIv
a2VybmVsL3RpbWUvdGltZWtlZXBpbmcuYwppbmRleCA2YWVlNTc2OGM4NmYuLjgxZmUyYTMzYjgw
YyAxMDA2NDQKLS0tIGEva2VybmVsL3RpbWUvdGltZWtlZXBpbmcuYworKysgYi9rZXJuZWwvdGlt
ZS90aW1la2VlcGluZy5jCkBAIC01OTYsMTQgKzU5NiwxNCBAQCBFWFBPUlRfU1lNQk9MX0dQTChr
dGltZV9nZXRfcmVhbF9mYXN0X25zKTsKICAqIGNhcmVmdWwgY2FjaGUgbGF5b3V0IG9mIHRoZSB0
aW1la2VlcGVyIGJlY2F1c2UgdGhlIHNlcXVlbmNlIGNvdW50IGFuZAogICogc3RydWN0IHRrX3Jl
YWRfYmFzZSB3b3VsZCB0aGVuIG5lZWQgdHdvIGNhY2hlIGxpbmVzIGluc3RlYWQgb2Ygb25lLgog
ICoKLSAqIEFjY2VzcyB0byB0aGUgdGltZSBrZWVwZXIgY2xvY2sgc291cmNlIGlzIGRpc2FibGVk
IGFjY3Jvc3MgdGhlIGlubmVybW9zdAorICogQWNjZXNzIHRvIHRoZSB0aW1lIGtlZXBlciBjbG9j
ayBzb3VyY2UgaXMgZGlzYWJsZWQgYWNyb3NzIHRoZSBpbm5lcm1vc3QKICAqIHN0ZXBzIG9mIHN1
c3BlbmQvcmVzdW1lLiBUaGUgYWNjZXNzb3JzIHN0aWxsIHdvcmssIGJ1dCB0aGUgdGltZXN0YW1w
cwogICogYXJlIGZyb3plbiB1bnRpbCB0aW1lIGtlZXBpbmcgaXMgcmVzdW1lZCB3aGljaCBoYXBw
ZW5zIHZlcnkgZWFybHkuCiAgKgogICogRm9yIHJlZ3VsYXIgc3VzcGVuZC9yZXN1bWUgdGhlcmUg
aXMgbm8gb2JzZXJ2YWJsZSBkaWZmZXJlbmNlIHZzLiBzY2hlZAogICogY2xvY2ssIGJ1dCBpdCBt
aWdodCBhZmZlY3Qgc29tZSBvZiB0aGUgbmFzdHkgbG93IGxldmVsIGRlYnVnIHByaW50a3MuCiAg
KgotICogT1RPSCwgYWNjZXNzIHRvIHNjaGVkIGNsb2NrIGlzIG5vdCBndWFyYW50ZWVkIGFjY3Jv
c3Mgc3VzcGVuZC9yZXN1bWUgb24KKyAqIE9UT0gsIGFjY2VzcyB0byBzY2hlZCBjbG9jayBpcyBu
b3QgZ3VhcmFudGVlZCBhY3Jvc3Mgc3VzcGVuZC9yZXN1bWUgb24KICAqIGFsbCBzeXN0ZW1zIGVp
dGhlciBzbyBpdCBkZXBlbmRzIG9uIHRoZSBoYXJkd2FyZSBpbiB1c2UuCiAgKgogICogSWYgdGhh
dCB0dXJucyBvdXQgdG8gYmUgYSByZWFsIHByb2JsZW0gdGhlbiB0aGlzIGNvdWxkIGJlIG1pdGln
YXRlZCBieQpAQCAtODk5LDcgKzg5OSw3IEBAIGt0aW1lX3Qga3RpbWVfZ2V0X2NvYXJzZV93aXRo
X29mZnNldChlbnVtIHRrX29mZnNldHMgb2ZmcykKIEVYUE9SVF9TWU1CT0xfR1BMKGt0aW1lX2dl
dF9jb2Fyc2Vfd2l0aF9vZmZzZXQpOwogCiAvKioKLSAqIGt0aW1lX21vbm9fdG9fYW55KCkgLSBj
b252ZXJ0IG1vbm9ub3RpYyB0aW1lIHRvIGFueSBvdGhlciB0aW1lCisgKiBrdGltZV9tb25vX3Rv
X2FueSgpIC0gY29udmVydCBtb25vdG9uaWMgdGltZSB0byBhbnkgb3RoZXIgdGltZQogICogQHRt
b25vOgl0aW1lIHRvIGNvbnZlcnQuCiAgKiBAb2ZmczoJd2hpY2ggb2Zmc2V0IHRvIHVzZQogICov
CkBAIC0xNDI3LDM1ICsxNDI3LDQ1IEBAIHN0YXRpYyB2b2lkIF9fdGltZWtlZXBpbmdfc2V0X3Rh
aV9vZmZzZXQoc3RydWN0IHRpbWVrZWVwZXIgKnRrLCBzMzIgdGFpX29mZnNldCkKIHN0YXRpYyBp
bnQgY2hhbmdlX2Nsb2Nrc291cmNlKHZvaWQgKmRhdGEpCiB7CiAJc3RydWN0IHRpbWVrZWVwZXIg
KnRrID0gJnRrX2NvcmUudGltZWtlZXBlcjsKLQlzdHJ1Y3QgY2xvY2tzb3VyY2UgKm5ldywgKm9s
ZDsKKwlzdHJ1Y3QgY2xvY2tzb3VyY2UgKm5ldywgKm9sZCA9IE5VTEw7CiAJdW5zaWduZWQgbG9u
ZyBmbGFnczsKKwlib29sIGNoYW5nZSA9IGZhbHNlOwogCiAJbmV3ID0gKHN0cnVjdCBjbG9ja3Nv
dXJjZSAqKSBkYXRhOwogCi0JcmF3X3NwaW5fbG9ja19pcnFzYXZlKCZ0aW1la2VlcGVyX2xvY2ss
IGZsYWdzKTsKLQl3cml0ZV9zZXFjb3VudF9iZWdpbigmdGtfY29yZS5zZXEpOwotCi0JdGltZWtl
ZXBpbmdfZm9yd2FyZF9ub3codGspOwogCS8qCiAJICogSWYgdGhlIGNzIGlzIGluIG1vZHVsZSwg
Z2V0IGEgbW9kdWxlIHJlZmVyZW5jZS4gU3VjY2VlZHMKIAkgKiBmb3IgYnVpbHQtaW4gY29kZSAo
b3duZXIgPT0gTlVMTCkgYXMgd2VsbC4KIAkgKi8KIAlpZiAodHJ5X21vZHVsZV9nZXQobmV3LT5v
d25lcikpIHsKLQkJaWYgKCFuZXctPmVuYWJsZSB8fCBuZXctPmVuYWJsZShuZXcpID09IDApIHsK
LQkJCW9sZCA9IHRrLT50a3JfbW9uby5jbG9jazsKLQkJCXRrX3NldHVwX2ludGVybmFscyh0aywg
bmV3KTsKLQkJCWlmIChvbGQtPmRpc2FibGUpCi0JCQkJb2xkLT5kaXNhYmxlKG9sZCk7Ci0JCQlt
b2R1bGVfcHV0KG9sZC0+b3duZXIpOwotCQl9IGVsc2UgeworCQlpZiAoIW5ldy0+ZW5hYmxlIHx8
IG5ldy0+ZW5hYmxlKG5ldykgPT0gMCkKKwkJCWNoYW5nZSA9IHRydWU7CisJCWVsc2UKIAkJCW1v
ZHVsZV9wdXQobmV3LT5vd25lcik7Ci0JCX0KIAl9CisKKwlyYXdfc3Bpbl9sb2NrX2lycXNhdmUo
JnRpbWVrZWVwZXJfbG9jaywgZmxhZ3MpOworCXdyaXRlX3NlcWNvdW50X2JlZ2luKCZ0a19jb3Jl
LnNlcSk7CisKKwl0aW1la2VlcGluZ19mb3J3YXJkX25vdyh0ayk7CisKKwlpZiAoY2hhbmdlKSB7
CisJCW9sZCA9IHRrLT50a3JfbW9uby5jbG9jazsKKwkJdGtfc2V0dXBfaW50ZXJuYWxzKHRrLCBu
ZXcpOworCX0KKwogCXRpbWVrZWVwaW5nX3VwZGF0ZSh0aywgVEtfQ0xFQVJfTlRQIHwgVEtfTUlS
Uk9SIHwgVEtfQ0xPQ0tfV0FTX1NFVCk7CiAKIAl3cml0ZV9zZXFjb3VudF9lbmQoJnRrX2NvcmUu
c2VxKTsKIAlyYXdfc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdGltZWtlZXBlcl9sb2NrLCBmbGFn
cyk7CiAKKwlpZiAob2xkKSB7CisJCWlmIChvbGQtPmRpc2FibGUpCisJCQlvbGQtPmRpc2FibGUo
b2xkKTsKKworCQltb2R1bGVfcHV0KG9sZC0+b3duZXIpOworCX0KKwogCXJldHVybiAwOwogfQog
CkBAIC0xOTQ4LDcgKzE5NTgsNyBAQCBzdGF0aWMgX19hbHdheXNfaW5saW5lIHZvaWQgdGltZWtl
ZXBpbmdfYXBwbHlfYWRqdXN0bWVudChzdHJ1Y3QgdGltZWtlZXBlciAqdGssCiAJICoJeHRpbWVf
bnNlY18xID0gb2Zmc2V0ICsgeHRpbWVfbnNlY18yCiAJICogV2hpY2ggZ2l2ZXMgdXM6CiAJICoJ
eHRpbWVfbnNlY18yID0geHRpbWVfbnNlY18xIC0gb2Zmc2V0Ci0JICogV2hpY2ggc2ltcGxmaWVz
IHRvOgorCSAqIFdoaWNoIHNpbXBsaWZpZXMgdG86CiAJICoJeHRpbWVfbnNlYyAtPSBvZmZzZXQK
IAkgKi8KIAlpZiAoKG11bHRfYWRqID4gMCkgJiYgKHRrLT50a3JfbW9uby5tdWx0ICsgbXVsdF9h
ZGogPCBtdWx0X2FkaikpIHsKQEAgLTIzMzYsNyArMjM0Niw3IEBAIHN0YXRpYyBpbnQgdGltZWtl
ZXBpbmdfdmFsaWRhdGVfdGltZXgoY29uc3Qgc3RydWN0IF9fa2VybmVsX3RpbWV4ICp0eGMpCiAK
IAkJLyoKIAkJICogVmFsaWRhdGUgaWYgYSB0aW1lc3BlYy90aW1ldmFsIHVzZWQgdG8gaW5qZWN0
IGEgdGltZQotCQkgKiBvZmZzZXQgaXMgdmFsaWQuICBPZmZzZXRzIGNhbiBiZSBwb3N0aXZlIG9y
IG5lZ2F0aXZlLCBzbworCQkgKiBvZmZzZXQgaXMgdmFsaWQuICBPZmZzZXRzIGNhbiBiZSBwb3Np
dGl2ZSBvciBuZWdhdGl2ZSwgc28KIAkJICogd2UgZG9uJ3QgY2hlY2sgdHZfc2VjLiBUaGUgdmFs
dWUgb2YgdGhlIHRpbWV2YWwvdGltZXNwZWMKIAkJICogaXMgdGhlIHN1bSBvZiBpdHMgZmllbGRz
LGJ1dCAqTk9URSo6CiAJCSAqIFRoZSBmaWVsZCB0dl91c2VjL3R2X25zZWMgbXVzdCBhbHdheXMg
YmUgbm9uLW5lZ2F0aXZlIGFuZApkaWZmIC0tZ2l0IGEva2VybmVsL3RpbWUvdGltZXIuYyBiL2tl
cm5lbC90aW1lL3RpbWVyLmMKaW5kZXggZjQ3NWYxYTAyN2M4Li5kMTExYWRmNGEwY2IgMTAwNjQ0
Ci0tLSBhL2tlcm5lbC90aW1lL3RpbWVyLmMKKysrIGIva2VybmVsL3RpbWUvdGltZXIuYwpAQCAt
ODk0LDcgKzg5NCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBmb3J3YXJkX3RpbWVyX2Jhc2Uoc3Ry
dWN0IHRpbWVyX2Jhc2UgKmJhc2UpCiAJLyoKIAkgKiBObyBuZWVkIHRvIGZvcndhcmQgaWYgd2Ug
YXJlIGNsb3NlIGVub3VnaCBiZWxvdyBqaWZmaWVzLgogCSAqIEFsc28gd2hpbGUgZXhlY3V0aW5n
IHRpbWVycywgYmFzZS0+Y2xrIGlzIDEgb2Zmc2V0IGFoZWFkCi0JICogb2YgamlmZmllcyB0byBh
dm9pZCBlbmRsZXNzIHJlcXVldWluZyB0byBjdXJyZW50IGpmZmllcy4KKwkgKiBvZiBqaWZmaWVz
IHRvIGF2b2lkIGVuZGxlc3MgcmVxdWV1aW5nIHRvIGN1cnJlbnQgamlmZmllcy4KIAkgKi8KIAlp
ZiAoKGxvbmcpKGpub3cgLSBiYXNlLT5jbGspIDwgMSkKIAkJcmV0dXJuOwpAQCAtMTI3MSw3ICsx
MjcxLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHRpbWVyX2Jhc2VfdW5sb2NrX2V4cGlyeShzdHJ1
Y3QgdGltZXJfYmFzZSAqYmFzZSkKICAqIFRoZSBjb3VudGVycGFydCB0byBkZWxfdGltZXJfd2Fp
dF9ydW5uaW5nKCkuCiAgKgogICogSWYgdGhlcmUgaXMgYSB3YWl0ZXIgZm9yIGJhc2UtPmV4cGly
eV9sb2NrLCB0aGVuIGl0IHdhcyB3YWl0aW5nIGZvciB0aGUKLSAqIHRpbWVyIGNhbGxiYWNrIHRv
IGZpbmlzaC4gRHJvcCBleHBpcnlfbG9jayBhbmQgcmVhcXVpcmUgaXQuIFRoYXQgYWxsb3dzCisg
KiB0aW1lciBjYWxsYmFjayB0byBmaW5pc2guIERyb3AgZXhwaXJ5X2xvY2sgYW5kIHJlYWNxdWly
ZSBpdC4gVGhhdCBhbGxvd3MKICAqIHRoZSB3YWl0ZXIgdG8gYWNxdWlyZSB0aGUgbG9jayBhbmQg
bWFrZSBwcm9ncmVzcy4KICAqLwogc3RhdGljIHZvaWQgdGltZXJfc3luY193YWl0X3J1bm5pbmco
c3RydWN0IHRpbWVyX2Jhc2UgKmJhc2UpCmRpZmYgLS1naXQgYS9rZXJuZWwvdGltZS92c3lzY2Fs
bC5jIGIva2VybmVsL3RpbWUvdnN5c2NhbGwuYwppbmRleCA4OGU2YjhlZDZjYTUuLmYwZDUwNjJk
OWNiYyAxMDA2NDQKLS0tIGEva2VybmVsL3RpbWUvdnN5c2NhbGwuYworKysgYi9rZXJuZWwvdGlt
ZS92c3lzY2FsbC5jCkBAIC0xMDgsNyArMTA4LDcgQEAgdm9pZCB1cGRhdGVfdnN5c2NhbGwoc3Ry
dWN0IHRpbWVrZWVwZXIgKnRrKQogCiAJLyoKIAkgKiBJZiB0aGUgY3VycmVudCBjbG9ja3NvdXJj
ZSBpcyBub3QgVkRTTyBjYXBhYmxlLCB0aGVuIHNwYXJlIHRoZQotCSAqIHVwZGF0ZSBvZiB0aGUg
aGlnaCByZW9sdXRpb24gcGFydHMuCisJICogdXBkYXRlIG9mIHRoZSBoaWdoIHJlc29sdXRpb24g
cGFydHMuCiAJICovCiAJaWYgKGNsb2NrX21vZGUgIT0gVkRTT19DTE9DS01PREVfTk9ORSkKIAkJ
dXBkYXRlX3Zkc29fZGF0YSh2ZGF0YSwgdGspOwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9z
ZWxmdGVzdHMvdGltZXJzL2Nsb2Nrc291cmNlLXN3aXRjaC5jIGIvdG9vbHMvdGVzdGluZy9zZWxm
dGVzdHMvdGltZXJzL2Nsb2Nrc291cmNlLXN3aXRjaC5jCmluZGV4IGJmYzk3NGI0NTcyZC4uZWY4
ZWIzNjA0NTk1IDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvY2xv
Y2tzb3VyY2Utc3dpdGNoLmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvdGltZXJzL2Ns
b2Nrc291cmNlLXN3aXRjaC5jCkBAIC0zLDcgKzMsNyBAQAogICoJCShDKSBDb3B5cmlnaHQgSUJN
IDIwMTIKICAqCQlMaWNlbnNlZCB1bmRlciB0aGUgR1BMdjIKICAqCi0gKiAgTk9URTogVGhpcyBp
cyBhIG1ldGEtdGVzdCB3aGljaCBxdWlja2x5IGNoYW5nZXMgdGhlIGNsb2Nrc291cmMgYW5kCisg
KiAgTk9URTogVGhpcyBpcyBhIG1ldGEtdGVzdCB3aGljaCBxdWlja2x5IGNoYW5nZXMgdGhlIGNs
b2Nrc291cmNlIGFuZAogICogIHRoZW4gdXNlcyBvdGhlciB0ZXN0cyB0byBkZXRlY3QgcHJvYmxl
bXMuIFRodXMgdGhpcyB0ZXN0IHJlcXVpcmVzCiAgKiAgdGhhdCB0aGUgaW5jb25zaXN0ZW5jeS1j
aGVjayBhbmQgbmFub3NsZWVwIHRlc3RzIGJlIHByZXNlbnQgaW4gdGhlCiAgKiAgc2FtZSBkaXJl
Y3RvcnkgaXQgaXMgcnVuIGZyb20uCkBAIC0xMzQsNyArMTM0LDcgQEAgaW50IG1haW4oaW50IGFy
Z3YsIGNoYXIgKiphcmdjKQogCQlyZXR1cm4gLTE7CiAJfQogCi0JLyogQ2hlY2sgZXZlcnl0aGlu
ZyBpcyBzYW5lIGJlZm9yZSB3ZSBzdGFydCBzd2l0Y2hpbmcgYXN5bmNyaG9ub3VzbHkgKi8KKwkv
KiBDaGVjayBldmVyeXRoaW5nIGlzIHNhbmUgYmVmb3JlIHdlIHN0YXJ0IHN3aXRjaGluZyBhc3lu
Y2hyb25vdXNseSAqLwogCWZvciAoaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CiAJCXByaW50Zigi
VmFsaWRhdGluZyBjbG9ja3NvdXJjZSAlc1xuIiwgY2xvY2tzb3VyY2VfbGlzdFtpXSk7CiAJCWlm
IChjaGFuZ2VfY2xvY2tzb3VyY2UoY2xvY2tzb3VyY2VfbGlzdFtpXSkpIHsKZGlmZiAtLWdpdCBh
L3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL3RpbWVycy9sZWFwLWEtZGF5LmMgYi90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy90aW1lcnMvbGVhcC1hLWRheS5jCmluZGV4IDE5ZTQ2ZWQ1ZGZiNS4uMjNl
YjM5OGM4MTQwIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvbGVh
cC1hLWRheS5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL3RpbWVycy9sZWFwLWEtZGF5
LmMKQEAgLTUsNyArNSw3IEBACiAgKiAgICAgICAgICAgICAgTGljZW5zZWQgdW5kZXIgdGhlIEdQ
THYyCiAgKgogICogIFRoaXMgdGVzdCBzaWduYWxzIHRoZSBrZXJuZWwgdG8gaW5zZXJ0IGEgbGVh
cCBzZWNvbmQKLSAqICBldmVyeSBkYXkgYXQgbWlkbmlnaHQgR01ULiBUaGlzIGFsbG93cyBmb3Ig
c3Rlc3NpbmcgdGhlCisgKiAgZXZlcnkgZGF5IGF0IG1pZG5pZ2h0IEdNVC4gVGhpcyBhbGxvd3Mg
Zm9yIHN0cmVzc2luZyB0aGUKICAqICBrZXJuZWwncyBsZWFwLXNlY29uZCBiZWhhdmlvciwgYXMg
d2VsbCBhcyBob3cgd2VsbCBhcHBsaWNhdGlvbnMKICAqICBoYW5kbGUgdGhlIGxlYXAtc2Vjb25k
IGRpc2NvbnRpbnVpdHkuCiAgKgpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMv
dGltZXJzL2xlYXBjcmFzaC5jIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvdGltZXJzL2xlYXBj
cmFzaC5jCmluZGV4IGRjODA3MjhlZDE5MS4uZjcwODAyYzVkZDBkIDEwMDY0NAotLS0gYS90b29s
cy90ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvbGVhcGNyYXNoLmMKKysrIGIvdG9vbHMvdGVzdGlu
Zy9zZWxmdGVzdHMvdGltZXJzL2xlYXBjcmFzaC5jCkBAIC00LDEwICs0LDEwIEBACiAgKiAgICAg
ICAgICAgICAgKEMpIENvcHlyaWdodCAyMDEzLCAyMDE1IExpbmFybyBMaW1pdGVkCiAgKiAgICAg
ICAgICAgICAgTGljZW5zZWQgdW5kZXIgdGhlIEdQTAogICoKLSAqIFRoaXMgdGVzdCBkZW1vbnN0
cmF0ZXMgbGVhcHNlY29uZCBkZWFkbG9jayB0aGF0IGlzIHBvc3NpYmUKKyAqIFRoaXMgdGVzdCBk
ZW1vbnN0cmF0ZXMgbGVhcHNlY29uZCBkZWFkbG9jayB0aGF0IGlzIHBvc3NpYmxlCiAgKiBvbiBr
ZXJuZWxzIGZyb20gMi42LjI2IHRvIDMuMy4KICAqCi0gKiBXQVJOSU5HOiBUSElTIFdJTEwgTElL
RUxZIEhBUkRIQU5HIFNZU1RFTVMgQU5EIE1BWSBMT1NFIERBVEEKKyAqIFdBUk5JTkc6IFRISVMg
V0lMTCBMSUtFTFkgSEFSRCBIQU5HIFNZU1RFTVMgQU5EIE1BWSBMT1NFIERBVEEKICAqIFJVTiBB
VCBZT1VSIE9XTiBSSVNLIQogICogIFRvIGJ1aWxkOgogICoJJCBnY2MgbGVhcGNyYXNoLmMgLW8g
bGVhcGNyYXNoIC1scnQKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL3RpbWVy
cy90aHJlYWR0ZXN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvdGhyZWFkdGVz
dC5jCmluZGV4IGNmM2U0ODkxOTg3NC4uODBhZWQ0YmYwNmZiIDEwMDY0NAotLS0gYS90b29scy90
ZXN0aW5nL3NlbGZ0ZXN0cy90aW1lcnMvdGhyZWFkdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcv
c2VsZnRlc3RzL3RpbWVycy90aHJlYWR0ZXN0LmMKQEAgLTc2LDcgKzc2LDcgQEAgdm9pZCBjaGVj
a2xpc3Qoc3RydWN0IHRpbWVzcGVjICpsaXN0LCBpbnQgc2l6ZSkKIAogLyogVGhlIHNoYXJlZCB0
aHJlYWQgc2hhcmVzIGEgZ2xvYmFsIGxpc3QKICAqIHRoYXQgZWFjaCB0aHJlYWQgZmlsbHMgd2hp
bGUgaG9sZGluZyB0aGUgbG9jay4KLSAqIFRoaXMgc3RyZXNzZXMgY2xvY2sgc3luY3Jvbml6YXRp
b24gYWNyb3NzIGNwdXMuCisgKiBUaGlzIHN0cmVzc2VzIGNsb2NrIHN5bmNocm9uaXphdGlvbiBh
Y3Jvc3MgY3B1cy4KICAqLwogdm9pZCAqc2hhcmVkX3RocmVhZCh2b2lkICphcmcpCiB7Cgo=
